<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FishPlayer</title>
  
  <subtitle>一个喜欢摸鱼的废物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2023-07-09T10:14:09.719Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>2C2C2C2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSharp字典使用enum的装箱</title>
    <link href="http://yoursite.com/2023/07/09/20230709-dictionary-enum-boxing/"/>
    <id>http://yoursite.com/2023/07/09/20230709-dictionary-enum-boxing/</id>
    <published>2023-07-09T09:43:00.000Z</published>
    <updated>2023-07-09T10:14:09.719Z</updated>
    
    <content type="html"><![CDATA[<p>今天看了下Unity官方2016年发的一个关于移动端小优化的一些分享视频。其中有一个关于把enum作为Dictionary中的key来使用时的boxing优化。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-01.png" class="" title="split"><p>这个用法在我之前的项目里用得还挺多吧。直接上图看IL code。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-02.png" class="" title="split"><p>Dictionary的增删查操作其实都会有用comparer.Equals()来判断是否相等的情况。<br>构建Dictionary时如果不传入指定的comparer，他会自己赋予一个’默认的’。这个默认的显然不适那么的友好。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-05.png" class="" title="split"><p>我们创建一个comparer，然后直接看使用comparer和不使用的两种不同情况下的IL code。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-03.png" class="" title="split"><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-04.png" class="" title="split"><p>很明显使用我们自己的comparer可以免去装箱的消耗。</p><p>后来我又拿到Unity里跑了一下看profiler。尝试跑了查询和添加，差距确实有，但是从Profiler中看结果，200万次的操作下，GC是差不多的，时间上使用comparer快了1300多ms。<br>说实在的觉得是我的测试方法有问题。而且我跑在桌面端，这样测试也不严谨。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看了下Unity官方2016年发的一个关于移动端小优化的一些分享视频。其中有一个关于把enum作为Dictionary中的key来使用时的boxing优化。&lt;/p&gt;
&lt;img src=&quot;/2023/07/09/20230709-dictionary-enum-boxin
      
    
    </summary>
    
    
      <category term="CSharp" scheme="http://yoursite.com/categories/CSharp/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="CSharp" scheme="http://yoursite.com/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>Unity动画控制Layout参数</title>
    <link href="http://yoursite.com/2023/06/18/20230618-animating-layout-params/"/>
    <id>http://yoursite.com/2023/06/18/20230618-animating-layout-params/</id>
    <published>2023-06-18T02:29:43.000Z</published>
    <updated>2023-06-18T05:37:20.904Z</updated>
    
    <content type="html"><![CDATA[<p>在实际制作UI的时候，为了完成一些排版设计，我们会经常用到Unity的布局(Layout)组件。甚至有些复杂的排版，我会用嵌套布局来实现。<br>UI美术人经常希望在这些布局上加上一些进场出场动画(甚至包括spacing变动)，但布局组件上的数值是没法在动画中修改的，怎么办呢？</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>在布局中添加一些空物体或是在布局外面套空物体。然后再使用Tween动画来完成UI美术们想要的那些进出场动画。<br>美术人不太喜欢的方法，因为有那么一点点不太方便和Animation直接一起预览，但如果整体进出场动画不依赖UnityAnimation且不是很复杂，这种方法完全够用。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>用通过动画控制脚本上的可序列化的数值，再传递到布局组件上。<br>个人感觉这个方法也还不错，还能支持预览，UI美术更偏向于这一个解决方法。</p><p>但是在动画窗口里里看到的curve是锯齿状的，很奇怪。之后还需要看下如何才能像其他属性一样拉正常的曲线。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ExecuteAlways</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LayoutGroupTempAnimationParam</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> LayoutGroup _target;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _left;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _right;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _top;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _bottom;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="meta-string">"GridLayout must use GridSpacing"</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> _alsoControlSpacing;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _normalSpacing = <span class="number">0</span>;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> Vector2 _gridSpacing = Vector2.zero;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RectOffset m_targetPadding;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDidApplyAnimationProperties</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ApplyPadding();</span><br><span class="line">        <span class="keyword">if</span> (_alsoControlSpacing)</span><br><span class="line">        &#123;</span><br><span class="line">            ApplySpacing();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// need to notify refresh</span></span><br><span class="line">        RectTransform rectTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">        LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ApplyPadding</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_targetPadding = _target.padding;</span><br><span class="line">        <span class="keyword">if</span> (m_targetPadding != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_targetPadding.left = _left;</span><br><span class="line">            m_targetPadding.right = _right;</span><br><span class="line">            m_targetPadding.top = _top;</span><br><span class="line">            m_targetPadding.bottom = _bottom;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ApplySpacing</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target <span class="keyword">is</span> HorizontalOrVerticalLayoutGroup layoutGroup)</span><br><span class="line">        &#123;</span><br><span class="line">            layoutGroup.spacing = _normalSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_target <span class="keyword">is</span> GridLayoutGroup gridLayoutGroup)</span><br><span class="line">        &#123;</span><br><span class="line">            gridLayoutGroup.spacing = _gridSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnValidate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ApplyPadding();</span><br><span class="line">        <span class="keyword">if</span> (_alsoControlSpacing)</span><br><span class="line">        &#123;</span><br><span class="line">            ApplySpacing();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!Application.isPlaying)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// need to notify refresh</span></span><br><span class="line">            RectTransform rectTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Reset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _target = <span class="keyword">this</span>.GetComponent&lt;LayoutGroup&gt;();</span><br><span class="line">        m_targetPadding = _target.padding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/06/18/20230618-animating-layout-params/20230618-animating-layout-params-01.gif" class="" title="split">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在实际制作UI的时候，为了完成一些排版设计，我们会经常用到Unity的布局(Layout)组件。甚至有些复杂的排版，我会用嵌套布局来实现。&lt;br&gt;UI美术人经常希望在这些布局上加上一些进场出场动画(甚至包括spacing变动)，但布局组件上的数值是没法在动画中修改的，怎么办
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity编辑器内静音Wwise</title>
    <link href="http://yoursite.com/2023/06/17/20230617-editor-wwise-mute/"/>
    <id>http://yoursite.com/2023/06/17/20230617-editor-wwise-mute/</id>
    <published>2023-06-17T02:15:00.000Z</published>
    <updated>2023-06-18T02:29:17.469Z</updated>
    
    <content type="html"><![CDATA[<p>项目引入Wwise以后，相信蛮多人都和我一样，平时不想听游戏声音就想听歌捶码修BUG的。但是Unity原本的mute按钮没法直接直接对Wwise那边做操作。<br>一开始不知道是搜索引擎的使用姿势不对还是咋的，查了好久都没查出来。导师研究了一下弄了一个版，大家用了感觉都很不错，决定分享出来。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">EditorWwiseManager</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">bool</span> m_isPaused = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="title">EditorWwiseManager</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorApplication.update += OnUpdate;</span><br><span class="line">        EditorApplication.pauseStateChanged += OnPauseStateChanged;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnPauseStateChanged</span>(<span class="params">PauseState state</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (state)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> PauseState.Paused:</span><br><span class="line">                m_isPaused = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PauseState.Unpaused:</span><br><span class="line">                m_isPaused = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (EditorUtility.audioMasterMute &amp;&amp; !m_isPaused)</span><br><span class="line">        &#123;</span><br><span class="line">            AkSoundEngine.Suspend(<span class="literal">true</span>);</span><br><span class="line">            m_isPaused = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!EditorUtility.audioMasterMute &amp;&amp; m_isPaused)</span><br><span class="line">        &#123;</span><br><span class="line">            AkSoundEngine.WakeupFromSuspend();</span><br><span class="line">            m_isPaused = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以通过Editor SceneView上的mute按钮把Wwise静音，超级方便凹。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目引入Wwise以后，相信蛮多人都和我一样，平时不想听游戏声音就想听歌捶码修BUG的。但是Unity原本的mute按钮没法直接直接对Wwise那边做操作。&lt;br&gt;一开始不知道是搜索引擎的使用姿势不对还是咋的，查了好久都没查出来。导师研究了一下弄了一个版，大家用了感觉都很不
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>传入Predicate的小事</title>
    <link href="http://yoursite.com/2023/05/01/20230501-list-pass-predicate/"/>
    <id>http://yoursite.com/2023/05/01/20230501-list-pass-predicate/</id>
    <published>2023-05-01T06:16:03.000Z</published>
    <updated>2023-05-01T06:47:56.718Z</updated>
    
    <content type="html"><![CDATA[<p>现在依旧是在项目里负责一些UI业务的编写。前段时间需要需要给游戏中的 popup提示 做一些简单的重构，正好发现了我一直以来都误解的一个小点，决定记下来。</p><p>业务的要求就是做那种会弹出来一会儿再消失的提示，比如道具获取之类的UI。</p><p>我的做法就是用一个list去存着当前的提示，并 tick 检查它们是否结束，然后移除已经结束的相关数据。<br>大概的用法如下。</p><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic001.png" class="" title="split"><p>但其实啊，这个做法在 tick 是非常不好的。同事很快地通过 JetBrainsRider 查看 IL Code ，并告诉我，直接这样传入会每次都 new obj 。有比较大的消耗。<br>所以在这种需要<strong>经常</strong> tick 并且条件<strong>比较固定</strong>的情况下。我们可以创建好 predicate 然后直接重复使用(可以存在成员变量里，这里演示就直接存在本地变量里了)。</p><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic002.png" class="" title="split"><p>最后附上测试代码和结果 测试 count 为 100000</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PredicateTempTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> TempPack</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> tempValue;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Random s_random = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TempPack <span class="title">CreateTempPack</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TempPack pack = <span class="keyword">default</span>;</span><br><span class="line">            <span class="keyword">if</span> (s_random == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s_random = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">            &#125;</span><br><span class="line">            pack.tempValue = s_random.Next(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">return</span> pack;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;List&lt;TempPack&gt;&gt; s_tempListContainer = <span class="keyword">new</span> List&lt;List&lt;TempPack&gt;&gt;(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTest</span>(<span class="params"><span class="keyword">int</span> tempCount</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        FillTestData(tempCount);</span><br><span class="line">        DoTestLambda();</span><br><span class="line">        DoTestPassMethod();</span><br><span class="line">        DoTestPassExistPredicate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">FillTestData</span>(<span class="params"><span class="keyword">int</span> tempCount</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        s_tempListContainer.Clear();</span><br><span class="line">        s_tempListContainer.Capacity = tempCount;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tempCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = <span class="keyword">new</span> List&lt;TempPack&gt;(tempCount);</span><br><span class="line">            s_tempListContainer.Add(tempList);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; tempCount; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tempList.Add(TempPack.CreateTempPack());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestLambda</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"TestLambda start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find((existPack) =&gt; existPack.tempValue % <span class="number">5</span> == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"TestLambda end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestPassMethod</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"PassMethod start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find(CheckPack);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"PassMethod end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestPassExistPredicate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"PassExistPredicate start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        Predicate&lt;TempPack&gt; predicate = <span class="keyword">new</span> Predicate&lt;TempPack&gt;(CheckPack);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find(predicate);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"PassExistPredicate end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">CheckPack</span>(<span class="params">TempPack pack</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> pack.tempValue % <span class="number">5</span> == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic003.png" class="" title="split">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在依旧是在项目里负责一些UI业务的编写。前段时间需要需要给游戏中的 popup提示 做一些简单的重构，正好发现了我一直以来都误解的一个小点，决定记下来。&lt;/p&gt;
&lt;p&gt;业务的要求就是做那种会弹出来一会儿再消失的提示，比如道具获取之类的UI。&lt;/p&gt;
&lt;p&gt;我的做法就是用一
      
    
    </summary>
    
    
      <category term="CSharp" scheme="http://yoursite.com/categories/CSharp/"/>
    
    
      <category term="CSharp" scheme="http://yoursite.com/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>根据一个UI物体的位置摆放另一个UI物体</title>
    <link href="http://yoursite.com/2023/03/26/20230326-ui-element-positioning/"/>
    <id>http://yoursite.com/2023/03/26/20230326-ui-element-positioning/</id>
    <published>2023-03-26T05:55:12.000Z</published>
    <updated>2023-06-08T15:08:21.508Z</updated>
    
    <content type="html"><![CDATA[<p>最近在遇到了一个需求，要点击某个道具UI之后，显示一个小的关于该道具的信息框。<br>大概是入下图这个样子的。</p><img src="/2023/03/26/20230326-ui-element-positioning/20230326-pic001.png" class="" title="split"><p>还好之前做过，于是乎直接修修补补腾过去。至于为什么要修补，是因为在之前的项目里虽然写了一些和RectTransform相关的一些utils，但都因为懒和菜，没有去维护。有重复的方法还有错误的方法，麻了。<br>这次说是修补，也稍微重写了一些和RectTransform相关的一些utils,也准备带进项目里看看有没有地方可以用的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Temp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> RectPositionType</span><br><span class="line">    &#123;</span><br><span class="line">        Center = <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">        Top = <span class="number">1</span>,</span><br><span class="line">        Bottom = <span class="number">2</span>,</span><br><span class="line">        Left = <span class="number">3</span>,</span><br><span class="line">        Right = <span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">        TopLeft = <span class="number">5</span>,</span><br><span class="line">        TopRight = <span class="number">6</span>,</span><br><span class="line"></span><br><span class="line">        BottomLeft = <span class="number">7</span>,</span><br><span class="line">        BottomRight = <span class="number">8</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UIElementPositionSetter</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Target setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectPositionType _targetRectPosition = RectPositionType.Center;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _targetPivot = Vector2.zero;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _extraOffset = Vector2.zero;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectOffset _adaptionOffset;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _doScreenAdaption;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Other setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectTransform _defaultBoundsCanvasTransform;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _adjustHorizontal = <span class="literal">true</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _adjustVertical = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetPosition</span>(<span class="params">RectTransform target</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector3 spawnPos = GetLocalRectPosition(self, _targetRectPosition);</span><br><span class="line">            spawnPos += <span class="keyword">new</span> Vector3(_extraOffset.x, _extraOffset.y, <span class="number">0f</span>);</span><br><span class="line">            spawnPos = self.localToWorldMatrix.MultiplyPoint(spawnPos);</span><br><span class="line">            target.pivot = _targetPivot;</span><br><span class="line">            target.position = spawnPos;</span><br><span class="line">            <span class="keyword">if</span> (_doScreenAdaption)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// HACK @Hiko force rebuild to make sure the size is correct</span></span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">                DoAdaption(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoAdaption</span>(<span class="params">RectTransform targetTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (_adjustHorizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                AdjustHorizontal(targetTransform, _defaultBoundsCanvasTransform);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (_adjustVertical)</span><br><span class="line">            &#123;</span><br><span class="line">                AdjustVertical(targetTransform, _defaultBoundsCanvasTransform);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AdjustHorizontal</span>(<span class="params">RectTransform target, RectTransform outterBoundRectTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Matrix4x4 targetLocalToWorld = target.localToWorldMatrix;</span><br><span class="line">            Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line">            Vector2 topLeftPos = GetLocalRectPosition(target, RectPositionType.TopLeft);</span><br><span class="line"></span><br><span class="line">            Vector3 checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y * <span class="number">0.5f</span> + Vector2.left * _adaptionOffset.left);</span><br><span class="line">            Vector2 leftCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 leftCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Left);</span><br><span class="line">            <span class="keyword">bool</span> leftOut = leftCheckLocalPoint.x &lt; leftCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">            checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y * <span class="number">0.5f</span> + Vector2.right * targetSize.x + Vector2.right * _adaptionOffset.right);</span><br><span class="line">            Vector2 rightCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 rightCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Right);</span><br><span class="line">            <span class="keyword">bool</span> rightOut = rightCheckLocalPoint.x &gt; rightCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (leftOut &amp;&amp; rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// outter bound is too small</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (leftOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> xDelta = leftCheckLocalPoint.x - leftCheckBoundPoint.x;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.x -= xDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> xDelta = rightCheckLocalPoint.x - rightCheckBoundPoint.x;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.x -= xDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (leftOut || rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AdjustVertical</span>(<span class="params">RectTransform target, RectTransform outterBoundRectTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Matrix4x4 targetLocalToWorld = target.localToWorldMatrix;</span><br><span class="line">            Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line">            Vector2 topLeftPos = GetLocalRectPosition(target, RectPositionType.TopLeft);</span><br><span class="line"></span><br><span class="line">            Vector3 checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.right * targetSize.x * <span class="number">0.5f</span> + Vector2.up * _adaptionOffset.top);</span><br><span class="line">            Vector2 topCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 topCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Top);</span><br><span class="line">            <span class="keyword">bool</span> topOut = topCheckLocalPoint.y &gt; topCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">            checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y + Vector2.right * targetSize.x * <span class="number">0.5f</span> + Vector2.down * _adaptionOffset.bottom);</span><br><span class="line">            Vector2 bottomCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 bottomCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Bottom);</span><br><span class="line">            <span class="keyword">bool</span> bottomOut = bottomCheckLocalPoint.y &lt; bottomCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (topOut &amp;&amp; bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// outter bound is too small</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (topOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> yDelta = topCheckLocalPoint.y - topCheckBoundPoint.y;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.y -= yDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> yDelta = bottomCheckLocalPoint.y - bottomCheckBoundPoint.y;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.y -= yDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (topOut || bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> position util</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">RectTransform target, RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> GetLocalRectPosition(target, offsetType, Vector2.zero);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">RectTransform target, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> GetLocalRectPosition(target.rect.size, target.pivot, offsetType, offset);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">Vector2 targetSize, Vector2 targetPivot, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 bottomLeft = Vector2.zero;</span><br><span class="line">            bottomLeft.x -= targetPivot.x * targetSize.x;</span><br><span class="line">            bottomLeft.y -= targetPivot.y * targetSize.y;</span><br><span class="line">            Vector2 result = bottomLeft;</span><br><span class="line">            <span class="keyword">switch</span> (offsetType)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Top:</span><br><span class="line">                    result += Vector2.right * <span class="number">0.5f</span> * targetSize.x + Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Bottom:</span><br><span class="line">                    result += Vector2.right * <span class="number">0.5f</span> * targetSize.x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Left:</span><br><span class="line">                    result += Vector2.up * <span class="number">0.5f</span> * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Right:</span><br><span class="line">                    result += Vector2.right * targetSize.x + Vector2.up * <span class="number">0.5f</span> * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopLeft:</span><br><span class="line">                    result += Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopRight:</span><br><span class="line">                    result += Vector2.right * targetSize.x + Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomRight:</span><br><span class="line">                    result += Vector2.right * targetSize.x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomLeft:</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result + offset;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">RectPositionToWorld</span>(<span class="params">RectTransform rect, RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> RectPositionToWorld(rect, offsetType, Vector2.zero);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">RectPositionToWorld</span>(<span class="params">RectTransform rect, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> localPosition = GetLocalRectPosition(rect, offsetType, offset);</span><br><span class="line">            <span class="keyword">return</span> rect.TransformPoint(localPosition);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Vector2 <span class="title">GetTargetRectPositionInLocalReference</span>(<span class="params">RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector2 targetPivotPos = GetLocalRectPosition(self, _targetRectPosition, _extraOffset);</span><br><span class="line">            Vector2 virtualCenterPos = targetPivotPos;</span><br><span class="line">            virtualCenterPos += GetLocalRectPosition(_targetSize, _targetPivot, offsetType, Vector2.zero);</span><br><span class="line">            <span class="keyword">return</span> virtualCenterPos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Preview setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _targetSize = Vector2.one * <span class="number">128f</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Color _previewColor = Color.white;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _doDrawAdaptionOffsetRect = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">System.Serializable</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">struct</span> TempCheckResult</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewLeftOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewRightOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewTopOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewBottomOut;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> TempCheckResult _checkResult;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewLeftOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewRightOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewTopOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewBottomOut;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmosSelected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// draw A box to show the position of target</span></span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector2 localSpawnPos = GetLocalRectPosition(self, _targetRectPosition);</span><br><span class="line">            localSpawnPos += _extraOffset;</span><br><span class="line"></span><br><span class="line">            Vector2 pivot = _targetPivot;</span><br><span class="line">            Vector2 topLeftPos = localSpawnPos;</span><br><span class="line">            topLeftPos.x -= pivot.x * _targetSize.x;</span><br><span class="line">            topLeftPos.y -= (pivot.y - <span class="number">1f</span>) * _targetSize.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_doScreenAdaption)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// do adaption</span></span><br><span class="line">                <span class="keyword">if</span> (_defaultBoundsCanvasTransform != <span class="literal">null</span>) <span class="comment">// if there is no bound, we can take the screen as the bound</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Matrix4x4 localToWorld = self.localToWorldMatrix;</span><br><span class="line">                    RectTransform outterBoundRectTransform = _defaultBoundsCanvasTransform;</span><br><span class="line">                    Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line"></span><br><span class="line">                    Vector3 checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y * <span class="number">0.5f</span> + Vector2.left * _adaptionOffset.left);</span><br><span class="line">                    Vector2 leftCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 leftCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Left);</span><br><span class="line">                    _previewLeftOut = leftCheckLocalPoint.x &lt; leftCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y * <span class="number">0.5f</span> + Vector2.right * _targetSize.x + Vector2.right * _adaptionOffset.right);</span><br><span class="line">                    Vector2 rightCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 rightCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Right);</span><br><span class="line">                    _previewRightOut = rightCheckLocalPoint.x &gt; rightCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.right * _targetSize.x * <span class="number">0.5f</span> + Vector2.up * _adaptionOffset.top);</span><br><span class="line">                    Vector2 topCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 topCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Top);</span><br><span class="line">                    _previewTopOut = topCheckLocalPoint.y &gt; topCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y + Vector2.right * _targetSize.x * <span class="number">0.5f</span> + Vector2.down * _adaptionOffset.bottom);</span><br><span class="line">                    Vector2 bottomCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 bottomCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Bottom);</span><br><span class="line">                    _previewBottomOut = bottomCheckLocalPoint.y &lt; bottomCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (_adjustHorizontal)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (_previewLeftOut &amp;&amp; _previewRightOut)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// bound too small</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (_previewLeftOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> xDelta = leftCheckLocalPoint.x - leftCheckBoundPoint.x;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.x -= xDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (_previewRightOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> xDelta = rightCheckLocalPoint.x - rightCheckBoundPoint.x;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.x -= xDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (_adjustVertical)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (_previewTopOut &amp;&amp; _previewBottomOut)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// bound too small</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (_previewTopOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> yDelta = topCheckLocalPoint.y - topCheckBoundPoint.y;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.y -= yDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (_previewBottomOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> yDelta = bottomCheckLocalPoint.y - bottomCheckBoundPoint.y;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.y -= yDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            _checkResult.previewLeftOut = _previewLeftOut;</span><br><span class="line">            _checkResult.previewRightOut = _previewRightOut;</span><br><span class="line">            _checkResult.previewTopOut = _previewTopOut;</span><br><span class="line">            _checkResult.previewBottomOut = _previewBottomOut;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_doDrawAdaptionOffsetRect &amp;&amp; _defaultBoundsCanvasTransform != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Vector2 innerBoundLeftPos = GetLocalRectPosition(_defaultBoundsCanvasTransform, RectPositionType.TopLeft, <span class="keyword">new</span> Vector2(_adaptionOffset.left, -_adaptionOffset.top));</span><br><span class="line">                Vector2 size = _defaultBoundsCanvasTransform.rect.size;</span><br><span class="line">                size.x -= _adaptionOffset.horizontal;</span><br><span class="line">                size.y -= _adaptionOffset.vertical;</span><br><span class="line">                DrawBox(_defaultBoundsCanvasTransform, innerBoundLeftPos, size, Color.blue);</span><br><span class="line">            &#125;</span><br><span class="line">            DrawBox(self, topLeftPos, _targetSize, _previewColor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawBox</span>(<span class="params">RectTransform reference, Vector2 topLeftPos, Vector2 size, Color color</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Color cachedColor = Gizmos.color;</span><br><span class="line">            Gizmos.color = color;</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos), reference.TransformPoint(topLeftPos + Vector2.right * size.x));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos), reference.TransformPoint(topLeftPos + Vector2.down * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos + Vector2.right * size.x), reference.TransformPoint(topLeftPos + Vector2.right * size.x + Vector2.down * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos + Vector2.down * size.y), reference.TransformPoint(topLeftPos + Vector2.right * size.x + Vector2.down * size.y));</span><br><span class="line">            Gizmos.color = cachedColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/03/26/20230326-ui-element-positioning/20230326-pic002.gif" class="" title="split"><p>还是像以前一样，先在debug draw里把功能完成再给移到实际的物体上。<br>但这次还是很可惜没有把功能很好抽出成比较单独的数学运算，而且感觉要用到的参数好多也没法拆分，最后留了一个多参的入口。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在遇到了一个需求，要点击某个道具UI之后，显示一个小的关于该道具的信息框。&lt;br&gt;大概是入下图这个样子的。&lt;/p&gt;
&lt;img src=&quot;/2023/03/26/20230326-ui-element-positioning/20230326-pic001.png&quot; cl
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Rapid UI Creation Note</title>
    <link href="http://yoursite.com/2022/10/05/20221005-rapid-UGUI-creation-note/"/>
    <id>http://yoursite.com/2022/10/05/20221005-rapid-UGUI-creation-note/</id>
    <published>2022-10-05T02:55:21.000Z</published>
    <updated>2023-03-26T06:33:58.713Z</updated>
    
    <content type="html"><![CDATA[<p>When I searching some articles about MVC and MVVM, I see this talk.<br>Basiclly they does same stuff as my current project, but we still have some differences on our implementation.<br>I’d like to share it and take some notes :D</p><p>Here is the talk abour UGUI implementation.<br><a href="https://www.youtube.com/watch?v=uDQU_dlO-ZM" target="_blank" rel="noopener">video</a>.<br><a href="https://www.gdcvault.com/play/1024453/Data-Binding-Architectures-for-Rapid" target="_blank" rel="noopener">ppt</a>.<br><a href="https://stackoverflow.com/questions/667781/what-is-the-difference-between-mvc-and-mvvm" target="_blank" rel="noopener">temp</a>.</p><h1 id="Main-note"><a href="#Main-note" class="headerlink" title="Main note"></a>Main note</h1><h2 id="Architecture-in-lt-Lost-Survivor-gt"><a href="#Architecture-in-lt-Lost-Survivor-gt" class="headerlink" title="Architecture in &lt; Lost Survivor &gt;"></a>Architecture in &lt; Lost Survivor &gt;</h2><ul><li>Artist works directly in Unity (Creating prefabs, setup aniamtions; well that’s what I my current project does, so I guess they did the same)</li><li>Dev works on GameLogic and UILogic</li><li>Dev/Art work decoupled</li><li>Dev/Art work parallel (This happens a lot in iteration)</li></ul><h2 id="The-Pattern-used-in-lt-Lost-Survivor-gt"><a href="#The-Pattern-used-in-lt-Lost-Survivor-gt" class="headerlink" title="The Pattern used in &lt; Lost Survivor &gt;"></a>The Pattern used in &lt; Lost Survivor &gt;</h2><h3 id="MVCVM-they-choose-this"><a href="#MVCVM-they-choose-this" class="headerlink" title="MVCVM (they choose this)"></a>MVCVM (they choose this)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                               </span><br><span class="line">                                                        +---------------------------------------+                              </span><br><span class="line">                                                        |                data binding           |                              </span><br><span class="line">                                                        |                    &lt;-&gt;                |                              </span><br><span class="line">                                                        |                                       |                              </span><br><span class="line">                                                        |                                       |                              </span><br><span class="line">+------------------------------+                        |                                       |                              </span><br><span class="line">|                              | +----------------------|-------+    +------------------------------+ +-----------------------+</span><br><span class="line">----------Controller------------ |         Model                |    |        View Model            | |    View (UGUI View)   |</span><br><span class="line">|                              | --------------------------------    -------------------------------- -------------------------</span><br><span class="line">| void GainXP();               | |      int XP;                 |    |                              | | Text XP;              |</span><br><span class="line">| void LevelUp();              | |      int Level;              |    |                              | | Text Attribute;       |</span><br><span class="line">|                              | |                              |    |                              | | Button ReAllocate;    |</span><br><span class="line">|                              | +--------------&#x2F;---------------+    +---------------\--------------+ | int WeaponATK;        |</span><br><span class="line">+---------------\--------------+              &#x2F;-                                      -\              |                       |</span><br><span class="line">                 \                          &#x2F;-                                          -\            +-----------&#x2F;-----------+</span><br><span class="line">                  -\                      &#x2F;-                                              \                      |             </span><br><span class="line">                    \                   &#x2F;-                                                 -\                    &#x2F;             </span><br><span class="line">            +---------------------------------------------------------------------------------------------------|-------+      </span><br><span class="line">            |                                                                                                           |      </span><br><span class="line">            |                                               Message Bus                                                 |      </span><br><span class="line">            +-----------------------------------------------------|-----------------------------------------------------+      </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                    +-------------|------------+                                               </span><br><span class="line">                                                    |                          |                                               </span><br><span class="line">                                                    |      server backend      |                                               </span><br><span class="line">                                                    |                          |                                               </span><br><span class="line">                                                    +--------------------------+</span><br></pre></td></tr></table></figure><p>This is the pattern they use for their project.<br>The one thing that I cant understand is that the View will receive events from MessageBus. IDK why they did like this. For me, I prefer to let view only receive direct events from VM, bind to many stuff to MessageBus will make it slow.</p><h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                                                                                                   </span><br><span class="line">                                   +------------------------------+                                    </span><br><span class="line">                                   |          Controller          |                                    </span><br><span class="line">+---------------------------------------------------------------------------------------------+        </span><br><span class="line">|         user action -&gt;           |  void GainXp();              |       update -&gt;           |        </span><br><span class="line">|                                  |  Void LevelUp();             |                           |        </span><br><span class="line">|                                  |  int GetAttribute(type);     |                           |        </span><br><span class="line">|                                  |                              |                           |        </span><br><span class="line">|                                  |                              |                           |        </span><br><span class="line">|                                  +-------|--------------|-------+                           |        </span><br><span class="line">|                                          |              |                                   |        </span><br><span class="line">|------------------------------+           |              |            +----------------------|-------+</span><br><span class="line">|    Character View            |           |              |            |         Model                |</span><br><span class="line">--------------------------------           |              |            --------------------------------</span><br><span class="line">| Text XP;                     |           |              |            | int AmountXp;                |</span><br><span class="line">| Text Attribute;              ------------+              |            | int AttributeTypeA;          |</span><br><span class="line">| Button ReAllocate;           | &lt;- update                |            | int AttributeTypeB;          |</span><br><span class="line">|                              |                          +-------------                              |</span><br><span class="line">|                              |                     &lt;- notify change? |                              |</span><br><span class="line">+------------------------------+                                       +------------------------------+</span><br></pre></td></tr></table></figure><p>I’m sure this pattern is kind of useful. I use this a lot when I did the first version of some UI pages. But later the Controller become a giant class.<br>And also I think the View and Controller in this pattern is not very reusable.</p><h3 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                            </span><br><span class="line">                                                                                            +------------------------------+</span><br><span class="line">                                                                                            |         Model Character      |</span><br><span class="line">                                                                            +-----------------------------------------------</span><br><span class="line">                                                                            |               | int AmountXp;                |</span><br><span class="line">                                                                            |               | int AttributeTypeA;          |</span><br><span class="line">                                                                            |               | int AttributeTypeB;          |</span><br><span class="line">                                                                            |               |                              |</span><br><span class="line">                                                                            |               |                              |</span><br><span class="line">                                                                            |               +------------------------------+</span><br><span class="line">+------------------------------+                     +----------------------|-------+                                       </span><br><span class="line">|      Character View          |   data binding &lt;-&gt;  |        View Model            |                                       </span><br><span class="line">--------------------------------   notifications &lt;-  --------------------------------                                       </span><br><span class="line">| Text XP;                     |   command -&gt;        |int AmountXP;                 |                                       </span><br><span class="line">| Text Attribute;              ----------------------+int WeaponATK;                |                                       </span><br><span class="line">| Button ReAllocate;           |                     |int WeaponLevel;              |       +------------------------------+</span><br><span class="line">| int WeaponATK;               |                     |                              |       |         Model Weapon         |</span><br><span class="line">|                              |                     |                              |       --------------------------------</span><br><span class="line">+------------------------------+                     +----------------------|-------+       | int ATK;                     |</span><br><span class="line">                                                                            |               | int Level;                   |</span><br><span class="line">                                                                            +----------------                              |</span><br><span class="line">                                                                                            +------------------------------+</span><br></pre></td></tr></table></figure><ul><li>ViewModel serves the View</li><li>One ViewModel per View</li><li>Based on Data Binding</li></ul><p>After a few iterations, I find this pattern is also a good solutions. And I feel that we can even use CompositePattern in ViewModel to create big ViewModel for some big views(resuable).</p><p>In my current project, for the UI-View, we create some basic view that can receive similar types of data. And the good thing from this pattern is that the VM can send notificaiton to View to update, then I dun need to have lots of update method from Controller to update different data (cuz some data update need aniamtion, I cant just update all).</p><h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><p>Previously it says that separating UIPrefabs creation and UILogic code may solve “Not my problem attitude”. But actually not.<br>In production state, everyone is busy, and we are iterating View-Scripts and VM-Scripts together. Sometimes it is diffcult to tell that is code issues or setup issues. Unless we have solid View-Scripts.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>This talk has lots of similiar content as the DivisionUI talk. And I also realise that the game development has lots of unknow shit. It’s very difficult to have some resuable components that always works. Even the thougts are similar, the implementation can be different. A solution can be that having some solid, simple, basic and resuable compoents.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When I searching some articles about MVC and MVVM, I see this talk.&lt;br&gt;Basiclly they does same stuff as my current project, but we still 
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>查询Asset在工程中的引用(GUID)</title>
    <link href="http://yoursite.com/2022/09/12/20220912-unity-findref-guid/"/>
    <id>http://yoursite.com/2022/09/12/20220912-unity-findref-guid/</id>
    <published>2022-09-12T02:55:21.000Z</published>
    <updated>2023-05-01T06:22:03.532Z</updated>
    
    <content type="html"><![CDATA[<p>之前我用Unity自带的API去查询一些物体的引用，结果当然是超超超超超级慢，对于那些把项目工程放在辣鸡机械盘上的同事，这个工具根本是没法好好用的。而且因为要用Unity的APi，自然是没办法使用async的。</p><p>最近导师拿到QA那边提供的一个类似的工具，改了一下，做了一个超级快的版本。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>思路其实是非常简单的。我们知道Unity Asset会有一个唯一的GUID，那我们就可以用这个GUID去查询其引用。<br>查询的时候我们也不需要使用Unity API去检查引用，而是把我们的各种Asset都当成文本文件直接读取，然后直接在这些文本里去匹配我们需要查询的GUID。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// guidRegex just contains the asset guid</span></span><br><span class="line"><span class="function">List&lt;<span class="keyword">string</span>&gt; <span class="title">GetResult</span>(<span class="params"><span class="keyword">string</span>[] folders, Regex guidRegex</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span>[] files = folders.SelectMany(folder =&gt; Directory.GetFiles(folder, <span class="string">"*"</span>SearchOption.AllDirectories)).ToArray();</span><br><span class="line">    List&lt;<span class="keyword">string</span>&gt; result = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;(<span class="number">200</span>);</span><br><span class="line">    <span class="keyword">int</span> count = files.Length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> filePath = files[i];</span><br><span class="line">        <span class="keyword">if</span> (ChecKFile(filePath, guidRegex))</span><br><span class="line">        &#123;</span><br><span class="line">            result.Add(filePath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ChecKFile</span>(<span class="params"><span class="keyword">string</span> filepath, Regex fileContent</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> assetText = File.ReadAllText(filepath);</span><br><span class="line">    MatchCollection matches = fileContent.Matches(assetText);</span><br><span class="line">    <span class="keyword">return</span> matches.Count &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键代码和Unity API毫无关系，可以避免长时间的卡死，而且我们也能加入取消搜索的功能之类的。如果在乎性能的话可以还可以在读文件检查这边做优化。不过感觉这样已经比之前快了许多了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前我用Unity自带的API去查询一些物体的引用，结果当然是超超超超超级慢，对于那些把项目工程放在辣鸡机械盘上的同事，这个工具根本是没法好好用的。而且因为要用Unity的APi，自然是没办法使用async的。&lt;/p&gt;
&lt;p&gt;最近导师拿到QA那边提供的一个类似的工具，改了一
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>Unity RectTransform 小笔记</title>
    <link href="http://yoursite.com/2022/08/14/20220814-unity-recttransform/"/>
    <id>http://yoursite.com/2022/08/14/20220814-unity-recttransform/</id>
    <published>2022-08-14T02:55:21.000Z</published>
    <updated>2022-09-12T08:00:32.969Z</updated>
    
    <content type="html"><![CDATA[<p>之前看了一些关于RectTransform的文章，但是最终记忆都不是很深刻。而且要用的时候重新找还挺麻烦的。<br>干脆把别人的笔记抄来一些好了，以后也方便就着自己的笔记和UXUI同学解释。</p><h1 id="Pivot"><a href="#Pivot" class="headerlink" title="Pivot"></a>Pivot</h1><p>中心点，是UI元素旋转/缩放的中心点。使用归一化Vector2表示。</p><h1 id="Anchor"><a href="#Anchor" class="headerlink" title="Anchor"></a>Anchor</h1><p>其实是由两个点组成的(AnchorMin, AnchorMax)。并使用归一化Vector2来表示。<br>数值代表了在父类X轴和Y轴方向的百分比。</p><h2 id="绝对布局"><a href="#绝对布局" class="headerlink" title="绝对布局"></a>绝对布局</h2><blockquote><p>当anchorMax与anchorMin相等时，Anchor呈现为一个点，称之为锚点<br>在使用锚点的情况下，anchoredPosition是元素Pivot到Anchor的距离</p></blockquote><p>此时会有4个重要的属性。</p><ul><li>PosX, posY : 中心点到锚点的参数，实际像素值</li><li>Width, Height : UI 元素的尺寸</li></ul><p>绝对布局的情况下无论分辨率是多少，父物体多大，该UI元素的大小是恒定的。</p><h2 id="相对布局"><a href="#相对布局" class="headerlink" title="相对布局"></a>相对布局</h2><blockquote><p>当anchorMax与anchorMin不相等时，Anchor呈现为一个框，称之为锚框<br>在使用锚框的情况下，anchoredPosition是元素Pivot到锚框中心点的距离</p></blockquote><p>这种情况下UI元素的四个角，距离四个对应的锚点的距离是不变的，在这种情况下RectTransform的属性又变为了Left,Top,Right,Bottom。</p><ul><li>Left,Top,Right,Bottom : 四个点的数值分别是(Left,Top,Right,Bottom)锚点到实际的rect的这4个位置的点的距离。</li></ul><h1 id="SizeDelta"><a href="#SizeDelta" class="headerlink" title="SizeDelta"></a>SizeDelta</h1><h2 id="OffsetMin-OffsetMax"><a href="#OffsetMin-OffsetMax" class="headerlink" title="OffsetMin/OffsetMax"></a>OffsetMin/OffsetMax</h2><p>min是实际UI原素相对于AnchorMin的偏移，另外一个不言而喻.</p><p>sizeDelta就是offsetMax - offsetMin的值。</p><blockquote><p>所以这个属性之所以叫做sizeDelta，是因为在锚点情况下其表征的是size（大小），在锚框的情况下其表征的是Delta（UI元素实际的属性值与锚框的差值）</p></blockquote><h1 id="Rect"><a href="#Rect" class="headerlink" title="Rect"></a>Rect</h1><p>rect中的属性，不与UI元素所在的位置有关，只和其自身属性相关。根据rect中提供的width和height可以得到UI元素实际的尺寸大小。</p><p>rect.position指的是以Pivot为原点，UI元素左下角的坐标。(right,up 为正方向)</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://zhuanlan.zhihu.com/p/194317677" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/194317677</a><br><a href="https://blog.csdn.net/jmu201521121014/article/details/105725175" target="_blank" rel="noopener">https://blog.csdn.net/jmu201521121014/article/details/105725175</a></p><p>顺便推荐一下在线画图小工具，不方便贴图的时候用这个还挺不错的。<br><a href="https://asciiflow.com/#/" target="_blank" rel="noopener">https://asciiflow.com/#/</a><br><a href="https://textik.com/" target="_blank" rel="noopener">https://textik.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前看了一些关于RectTransform的文章，但是最终记忆都不是很深刻。而且要用的时候重新找还挺麻烦的。&lt;br&gt;干脆把别人的笔记抄来一些好了，以后也方便就着自己的笔记和UXUI同学解释。&lt;/p&gt;
&lt;h1 id=&quot;Pivot&quot;&gt;&lt;a href=&quot;#Pivot&quot; class
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity Video Url source 赋值小坑</title>
    <link href="http://yoursite.com/2022/08/10/20220810-unity-video-url-delay/"/>
    <id>http://yoursite.com/2022/08/10/20220810-unity-video-url-delay/</id>
    <published>2022-08-10T02:55:21.000Z</published>
    <updated>2022-08-11T14:12:40.314Z</updated>
    
    <content type="html"><![CDATA[<p>这周赶版本，接到了一个前同事留下来的bug。是说UI上的教程视频一直不播放。<br>我们的视频资源是在 StreamingAssets 下的，用path进行加载。<br>播放相关的代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_player.prepareCompleted += OnPrepareCompleted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnPrepareCompleted</span>(<span class="params">VideoPlayer source</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Debug.Log(<span class="string">"OnPrepareCompleted"</span>);</span><br><span class="line">    m_player.Play();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVideo</span>(<span class="params"><span class="keyword">string</span> path</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_player.source = VideoSource.Url;</span><br><span class="line">    <span class="comment">// I guess this process may not be finished now.</span></span><br><span class="line">    m_player.url = path;</span><br><span class="line">    m_player.Prepare();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查了一下，发现在调用了 SetVideo 之后，OnPrepareCompleted没有被调用，意思是 VideoPlayer的prepareCompleted事件没有触发。<br>我猜发生这个情况的原因是，当我们使用url来设置视频资源的那一帧，VideoPlayer还没能获取到视频资源的一些属性，或是上一个视频资源还在占用着当前的播放器，所以这个时候如果调用PrePare，其实是没有用的。</p><p>所以我使用的Hacky Fix是在设置完资源的URL之后，等一帧再调用Prepare，然后等待 prepareCompleted 事件。</p><p>顺便在网上查了一下，也有些人遇到类似的问题，说是赋值URL之后不知道视频资源什么时候才能正确播放。<br>论坛里有个人给出的解决方法是去检查 VideoPlayer.isPrepared 的这个属性。但赋值URL之后这个值并不会在某一时刻变成true。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这周赶版本，接到了一个前同事留下来的bug。是说UI上的教程视频一直不播放。&lt;br&gt;我们的视频资源是在 StreamingAssets 下的，用path进行加载。&lt;br&gt;播放相关的代码如下。&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;tab
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>notes dat I took from the Divsion UI talk</title>
    <link href="http://yoursite.com/2022/08/06/20220806-division-UI-talk-note/"/>
    <id>http://yoursite.com/2022/08/06/20220806-division-UI-talk-note/</id>
    <published>2022-08-06T02:55:21.000Z</published>
    <updated>2022-10-05T06:48:07.153Z</updated>
    
    <content type="html"><![CDATA[<p>Well just ignore dat weird tag. :D</p><p>Here is muy notes dat I learn from the Divsion UI talk.</p><p>The key is iteration, threading and data.</p><p>Iterate your stuff to make it better.</p><p>Threading and data driven make the work efficient.</p><p><a href="https://www.youtube.com/watch?v=H1MLtML0np0" target="_blank" rel="noopener">video</a>.</p><h1 id="Snow-drop-UI"><a href="#Snow-drop-UI" class="headerlink" title="Snow drop UI"></a>Snow drop UI</h1><ul><li>No canvas</li><li>Immediate Mode<ul><li>Constant cost (maybe it’s more statble?).</li></ul></li><li>Vector Graphics<ul><li>Shapes(scaling friendly, dun rely on resolution) over textures masks.</li><li>Save GPU load by only rendering the pixels gonna be used.</li><li>Artist can play with it.</li></ul></li></ul><h1 id="Game-Data-amp-Node-graph"><a href="#Game-Data-amp-Node-graph" class="headerlink" title="Game Data &amp; Node graph"></a>Game Data &amp; Node graph</h1><ul><li><p>Lots of data getter (get pure data?) (in graph node), used in UI and also game play.</p></li><li><p>Auto conversion to save some performance.</p></li><li><p>custom UI logic components.</p></li><li><p>custom reusable compounds.</p></li></ul><h1 id="Iteration"><a href="#Iteration" class="headerlink" title="Iteration"></a>Iteration</h1><h2 id="For-coder"><a href="#For-coder" class="headerlink" title="For coder"></a>For coder</h2><h3 id="Reduce-complie-time"><a href="#Reduce-complie-time" class="headerlink" title="Reduce complie time"></a>Reduce complie time</h3><ul><li>Blob builds(idk what is this).</li><li>Header file reduction.</li><li>Keep refactoring code to make it efficient.</li><li>Remove nolonger used code.</li></ul><h3 id="Reduce-startup-time-and-Load-time"><a href="#Reduce-startup-time-and-Load-time" class="headerlink" title="Reduce startup time and Load time"></a>Reduce startup time and Load time</h3><ul><li>Only load needed stuff.</li><li>UI preview with live data for easy iteration.</li><li>Well some debug UI will also help :).</li></ul><p>(for my unity project)</p><ul><li>Have a UI preview scene (UI only, we can preview states and transitions).</li><li>Have simple a gym dat provide gameplay with enough content.</li></ul><h3 id="Coder-to-Artist"><a href="#Coder-to-Artist" class="headerlink" title="Coder to Artist"></a>Coder to Artist</h3><ul><li><p>Coder work with artist (react fast to feedbacks).</p></li><li><p>Resable compounds, arist can directly use.</p></li></ul><h2 id="Drawback-of-iteration"><a href="#Drawback-of-iteration" class="headerlink" title="Drawback of iteration"></a>Drawback of iteration</h2><ul><li>Hard to stop.</li><li>Set clear goals and deadlines. (do not waste time)</li><li>Greate for prototyping, risk for delivering. (need a lead to shut down iteration, make the decision)</li></ul><h1 id="Building-blocks-of-UI"><a href="#Building-blocks-of-UI" class="headerlink" title="Building blocks of UI"></a>Building blocks of UI</h1><p>To let arist and designers to have full(or more) control?</p><h2 id="Widget-and-Graphics"><a href="#Widget-and-Graphics" class="headerlink" title="Widget and Graphics"></a>Widget and Graphics</h2><p>Widget define space, accept input. Graphic improve widget, relative size, also accept input?</p><h2 id="5-Basic-widgets-with-a-few-variations"><a href="#5-Basic-widgets-with-a-few-variations" class="headerlink" title="5 Basic widgets with a few variations."></a>5 Basic widgets with a few variations.</h2><p>Use basic widgets, and use them to build functionalities.</p><ul><li><p>Window</p><ul><li>2D and 3D (anchoring functionalities, pixels or percentage; prepare some options for different auto scaling and apply to different UI widgets/graphic and situations).</li><li>Vertical Stack (stack the (children)widgets)</li><li>Layering</li></ul></li><li><p>Text</p><ul><li>JIT font generaion (wtf, keep memory down)</li><li>Fich text formatting lib to build customize text(icon, color …).</li><li>Auto clip (no idea how to do it)</li></ul></li><li><p>Image</p><ul><li>Use color/gradient more. (looks good with vector graphic)</li><li>Texture and loose image(ikd this, no border image?) into sprite sheet.</li></ul></li><li><p>Stack container</p><ul><li>For sorting elements.</li><li>Spacing and padding (how to do it with stack)</li><li>Invert for quick right to left language fixes (wtf)</li></ul></li><li><p>Scroll Box</p><ul><li>Fixed size(viewport size) with a virtual inner space(content).</li></ul></li></ul><h2 id="7-Graphics-nodes"><a href="#7-Graphics-nodes" class="headerlink" title="7 Graphics (nodes)"></a>7 Graphics (nodes)</h2><ul><li>Text with effects.</li><li>Images(basic) with more shapes, flat or curved.</li><li>Lines(strait, curved list?, 3d)</li><li>Points, single point or large squares(for effects?)</li><li>Shapes </li><li>Sector (why? for their art style?)</li><li>Custom graphics</li></ul><h1 id="Simply-Ui-workflow"><a href="#Simply-Ui-workflow" class="headerlink" title="Simply Ui workflow"></a>Simply Ui workflow</h1><ul><li>Complex and powerful (lots of resuable compounds, and threading stuff)</li><li>Documentation and examples(I guess examples are better and save time)</li></ul><h2 id="For-coder-1"><a href="#For-coder-1" class="headerlink" title="For coder"></a>For coder</h2><ul><li>Simple code; Less code, less bugs </li><li>Simple Tools; Do not overthink. Simple base, complex behaviour.</li></ul><h2 id="For-UI-artist-designer"><a href="#For-UI-artist-designer" class="headerlink" title="For UI artist/designer"></a>For UI artist/designer</h2><ul><li>Communicate to avoid merge conflicts, get ahead of it (cuz yaml merge wont help u all the time).</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Well just ignore dat weird tag. :D&lt;/p&gt;
&lt;p&gt;Here is muy notes dat I learn from the Divsion UI talk.&lt;/p&gt;
&lt;p&gt;The key is iteration, threading 
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>使用 State Object 暂存 property drawer 的状态。</title>
    <link href="http://yoursite.com/2022/07/30/20220730-unity-editor-stateobj/"/>
    <id>http://yoursite.com/2022/07/30/20220730-unity-editor-stateobj/</id>
    <published>2022-07-30T09:55:21.000Z</published>
    <updated>2023-05-01T06:21:54.625Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做红点功能，path是用string挂在UI物体上的。UI同学那边想要一个按钮可以切换path在inspector是可编辑或不可编辑的状态。<br>最开始毫无思路，因为本身path是一个string，我自然不可以它身上记录这个编辑与否的状态。后来想着能不能把这个状态存在path的protperty drawer上。问了下导师，可行，但是没法直接存。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>创建一个object存储这个状态，这个object存入editor的state object里。<br>在Property drawer进行绘制的时候获取/更新这个object。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码很简单</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UITagDrawer</span> : <span class="title">PropertyDrawer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// the object for string state</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">EditingState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> IsEditing = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params">Rect position, SerializedProperty property, GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">/***/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// get state object</span></span><br><span class="line">        EditingState state = GUIUtility.GetStateObject(<span class="keyword">typeof</span>(EditingState), GUIUtility.GetControlID(FocusType.Passive)) <span class="keyword">as</span> EditingState;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope(style))</span><br><span class="line">        &#123;</span><br><span class="line">            Rect editButtonRect = <span class="keyword">new</span> Rect(position.x, position.y, <span class="number">16f</span>, <span class="number">16f</span>);</span><br><span class="line">            <span class="keyword">if</span> (GUI.Button(editButtonRect, <span class="string">"E"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// well since it's a class we dun need to set it back :&gt;</span></span><br><span class="line">                state.IsEditing = !state.IsEditing;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GUILayout.Button(<span class="string">"X"</span>, GUILayout.Width(<span class="number">18</span>)))</span><br><span class="line">            &#123;</span><br><span class="line">                state.IsEditing = !state.IsEditing;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (state.IsEditing)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// show text field</span></span><br><span class="line">                tagStr = EditorGUILayout.TextField(tagStr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// show lable</span></span><br><span class="line">                EditorGUILayout.LabelField(tagStr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做红点功能，path是用string挂在UI物体上的。UI同学那边想要一个按钮可以切换path在inspector是可编辑或不可编辑的状态。&lt;br&gt;最开始毫无思路，因为本身path是一个string，我自然不可以它身上记录这个编辑与否的状态。后来想着能不能把这个状态存
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>查询MonoBehaviour在工程中的引用</title>
    <link href="http://yoursite.com/2022/07/24/20220724-find-script-reference/"/>
    <id>http://yoursite.com/2022/07/24/20220724-find-script-reference/</id>
    <published>2022-07-24T09:55:21.000Z</published>
    <updated>2023-05-01T06:21:48.968Z</updated>
    
    <content type="html"><![CDATA[<p>以前弄过一个在项目中查找Asset引用的。虽然很泛用，但跑起来非常的慢。<br>其实我们实际使用的时候，我们会经常做某一种搜索(比如查找脚本在预制体上的引用)。对于这种需要使用的特定条件的查找，单独做一个小工具可能效率会更高。</p><p>本来还在烦恼怎么做，导师很快就做好了，跑起来很快。他告诉我，秘诀是 GetComponent。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>代码不方便直接贴出来，但还是想分享(记录)一下几个关键的步骤和思路~</p><h3 id="选择脚本"><a href="#选择脚本" class="headerlink" title="选择脚本"></a>选择脚本</h3><p>我们需要在编辑器上用一个 field 去放我们想要搜寻的脚本。<br>但是没办法是用在泛型类上。需要指定实际的类型。</p><p>Interface也可以查，放心用！</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">targetScript = EditorGUILayout.ObjectField(m_targetScript, <span class="keyword">typeof</span>(MonoScript), <span class="literal">false</span>) <span class="keyword">as</span> MonoScript;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class SomeMono&lt;TData&gt; : MonoBehaviour</span></span><br><span class="line"><span class="comment">doesnt work on this case, the result will be null     </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Type targetType = m_targetScript.GetClass();</span><br></pre></td></tr></table></figure><h3 id="获取预制体"><a href="#获取预制体" class="headerlink" title="获取预制体"></a>获取预制体</h3><p>从我们选择的目录下获取所有的prefab，相信Unity，这一步不会很慢的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// we can also set the folderPath to save our time :D </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> paths = AssetDatabase.FindAssets(<span class="string">$"t: prefab"</span>, <span class="keyword">new</span>[] &#123; folderPath &#125;);</span><br><span class="line">GameObject[] toCheck = <span class="keyword">new</span> GameObject[paths.Length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paths.Length; i++)</span><br><span class="line">    toCheck[i] = AssetDatabase.LoadAssetAtPath&lt;GameObject&gt;(AssetDatabase.GUIDToAssetPath(paths[i]));</span><br></pre></td></tr></table></figure><h3 id="查询引用"><a href="#查询引用" class="headerlink" title="查询引用"></a>查询引用</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Type targetType;</span><br><span class="line">GameObject prefab;</span><br><span class="line"><span class="keyword">var</span> components = prefab.GetComponents(targetType);</span><br><span class="line"><span class="comment">// if components is not empty, then you get your stuff :D</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果要说学到了什么的话，大概是做工具前要搞明白它的使用情景，不能太脱节Tw.T</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前弄过一个在项目中查找Asset引用的。虽然很泛用，但跑起来非常的慢。&lt;br&gt;其实我们实际使用的时候，我们会经常做某一种搜索(比如查找脚本在预制体上的引用)。对于这种需要使用的特定条件的查找，单独做一个小工具可能效率会更高。&lt;/p&gt;
&lt;p&gt;本来还在烦恼怎么做，导师很快就做
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2022/06/12/hello-world/"/>
    <id>http://yoursite.com/2022/06/12/hello-world/</id>
    <published>2022-06-11T16:43:52.482Z</published>
    <updated>2020-05-03T04:47:50.757Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hyperv 虚拟机共享VPN给宿主机</title>
    <link href="http://yoursite.com/2022/05/15/20220515-hyperv-vpn-inside/"/>
    <id>http://yoursite.com/2022/05/15/20220515-hyperv-vpn-inside/</id>
    <published>2022-05-15T09:55:21.000Z</published>
    <updated>2022-05-15T13:27:08.645Z</updated>
    
    <content type="html"><![CDATA[<p>被封在鼠窝里两个月了，一直都是在家用自己的老爷备用机做工作。但是老(项)爷(目)机的性(优)能(化)实在是太差了。<br>打开 Unity 需要5分钟，编译代码3分钟，点一下 play 又是2分钟。这段时间来回修各种BUG，切来切去浪费了很多时间。</p><p>决定还是用大奶机工作了，但又非常不愿意把公司的间谍全家桶装在电脑上，咋办呢？</p><p>上网查了一下，大家说可以把全家桶关在虚拟机里，然后再把网络分享给宿主机。</p><h2 id="Hyper-V"><a href="#Hyper-V" class="headerlink" title="Hyper-V"></a>Hyper-V</h2><p>最开始试用了 VirtualBox 无论是装32位还是64位的Win10或者 WinServer 都卡到飞起。即使把虚拟机的虚拟盘放在 SSD 上也还是卡。<br>了解到 Windows 有这个 Hyper-V 虚拟机就决定试用一下。</p><p>结果这个玩意儿性能超棒的哦！放在 SSD 上可以说是不怎么卡。而且也能直接读宿主机的硬盘或油盘，非常的方便，虽然读盘的时候硬盘使用率显示是拉满的。</p><p>我记得以前如果要要使用 VM 或者 VBox 的话需要关闭 Hyper-V 的功能，但是自从 Win10 20H2 还是某个版本之后就不需要这么做了。</p><h3 id="虚拟机启动小坑"><a href="#虚拟机启动小坑" class="headerlink" title="虚拟机启动小坑"></a>虚拟机启动小坑</h3><p>“Boot Issue: Start PXE over IPv4”</p><p>装好系统以后俺启动虚拟机就报这个错误。<br>把硬盘移动到第一位就好了。</p><img src="/2022/05/15/20220515-hyperv-vpn-inside/20220515-pic004.png" class="" title="split"><h2 id="配置虚拟网卡"><a href="#配置虚拟网卡" class="headerlink" title="配置虚拟网卡"></a>配置虚拟网卡</h2><p>参考了网上的通用方案，需要两张虚拟网卡，一张桥接用来上网，另一个接收全家桶的分享。</p><p>桥接</p><p>我这边选用的是有线网的接口</p><img src="/2022/05/15/20220515-hyperv-vpn-inside/20220515-pic001.png" class="" title="split"><p>内部网络</p><img src="/2022/05/15/20220515-hyperv-vpn-inside/20220515-pic002.png" class="" title="split"><p>ipconfig 结果</p><img src="/2022/05/15/20220515-hyperv-vpn-inside/20220515-pic003.png" class="" title="split"><h2 id="宿主机配置"><a href="#宿主机配置" class="headerlink" title="宿主机配置"></a>宿主机配置</h2><p>接下来就是配置宿主机，这又有一个不一样的情况出现了。</p><p>在 Hyper-V 那边添加了1个虚拟交换机以后, 宿主机这边会出现2个适配器。不知道是不是我这边特有的情况。<br>把内部网络适配器的IP地址设置到 192.168.137.0 网段，我这边修改的是这个名字相同的。</p><img src="/2022/05/15/20220515-hyperv-vpn-inside/20220515-pic005.png" class="" title="split"><p>然后宿主机添加转发就可以了，不过速度不够快，全家桶直接装宿主机上还是比较快的，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add x.y.0.0 mask 255.255.0.0 192.168.137.1</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://yidianyidi.fun/VirtualBox/yidianyidi-1708121150.html" target="_blank" rel="noopener">https://yidianyidi.fun/VirtualBox/yidianyidi-1708121150.html</a></p><p><a href="https://www.youtube.com/watch?v=9Hc-5EOtaJs" target="_blank" rel="noopener">https://www.youtube.com/watch?v=9Hc-5EOtaJs</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;被封在鼠窝里两个月了，一直都是在家用自己的老爷备用机做工作。但是老(项)爷(目)机的性(优)能(化)实在是太差了。&lt;br&gt;打开 Unity 需要5分钟，编译代码3分钟，点一下 play 又是2分钟。这段时间来回修各种BUG，切来切去浪费了很多时间。&lt;/p&gt;
&lt;p&gt;决定还是用
      
    
    </summary>
    
    
      <category term="VirtualMachine" scheme="http://yoursite.com/categories/VirtualMachine/"/>
    
    
      <category term="Misc" scheme="http://yoursite.com/tags/Misc/"/>
    
      <category term="VirtualMachine" scheme="http://yoursite.com/tags/VirtualMachine/"/>
    
  </entry>
  
  <entry>
    <title>Unity UGUI Ez Anchor</title>
    <link href="http://yoursite.com/2022/04/23/20220423-ez-anchor/"/>
    <id>http://yoursite.com/2022/04/23/20220423-ez-anchor/</id>
    <published>2022-04-23T06:12:23.000Z</published>
    <updated>2022-05-15T06:11:17.602Z</updated>
    
    <content type="html"><![CDATA[<p>经过了一次用户测试之后，拿到的反馈说我们很多页面的UX设计都不行，只能各种重做，不论是我程序这边还是UXUI组那边，我们都需要重新拼好一些 prefab。</p><p>然后还有一些旧的 prefab 我们需要换皮改尺寸之类的，这次就来分享一个简单的小工具，用来做一些简单的尺寸适配。</p><img src="/2022/04/23/20220423-ez-anchor/20220423-pic001.gif" class="" title="split"><p>RectTransform 上 anchor 的 Min, Max 都是已经做了归一化的值。依靠调整 anchor 的值就可以设置当前元素在父元素中的相对位置和面积占比。<br>具体参考下面这篇文章<br><a href="https://blog.csdn.net/ChinarCSDN/article/details/88983587" target="_blank" rel="noopener">https://blog.csdn.net/ChinarCSDN/article/details/88983587</a></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">InitializeOnLoad</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">RectTransformExtendedEditor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> EditContext</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> RectTransform Transform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> EditContext m_context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">bool</span> m_showTool;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="title">RectTransformExtendedEditor</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Selection.selectionChanged += OnSelectionChanged;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnSelectionChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        SceneView.duringSceneGui -= OnSceneGUI;</span><br><span class="line">        <span class="keyword">if</span> (Selection.activeTransform <span class="keyword">is</span> RectTransform rectTransform)</span><br><span class="line">        &#123;</span><br><span class="line">            m_context = <span class="keyword">new</span> EditContext()</span><br><span class="line">            &#123;</span><br><span class="line">                Transform = rectTransform</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            SceneView.duringSceneGui += OnSceneGUI;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnSceneGUI</span>(<span class="params">SceneView sceneView</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Handles.BeginGUI();</span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">20</span>), <span class="string">"T"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            m_showTool = !m_showTool;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m_showTool)</span><br><span class="line">        &#123;</span><br><span class="line">            GUILayout.BeginArea(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">20</span>, <span class="number">120</span>, <span class="number">320</span>));</span><br><span class="line">            <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Set Anchors"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                RectTransform rectTransform = m_context.Transform;</span><br><span class="line">                RectTransform parent = rectTransform.parent <span class="keyword">as</span> RectTransform;</span><br><span class="line"></span><br><span class="line">                Undo.RecordObject(rectTransform, <span class="string">"Set Anchors"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (parent != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector2 anchorMin = <span class="keyword">new</span> Vector2(</span><br><span class="line">                        rectTransform.anchorMin.x + rectTransform.offsetMin.x / parent.rect.width,</span><br><span class="line">                        rectTransform.anchorMin.y + rectTransform.offsetMin.y / parent.rect.height);</span><br><span class="line"></span><br><span class="line">                    Vector2 anchorMax = <span class="keyword">new</span> Vector2(</span><br><span class="line">                        rectTransform.anchorMax.x + rectTransform.offsetMax.x / parent.rect.width,</span><br><span class="line">                        rectTransform.anchorMax.y + rectTransform.offsetMax.y / parent.rect.height);</span><br><span class="line"></span><br><span class="line">                    rectTransform.anchorMin = anchorMin;</span><br><span class="line">                    rectTransform.anchorMax = anchorMax;</span><br><span class="line">                    rectTransform.offsetMin = rectTransform.offsetMax = Vector2.zero;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            GUILayout.EndArea();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Handles.EndGUI();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>有了这个 acnhor 适配真的方便不少。有时候我们做好一个 list element，但在不同的地方用到的时候大小可能不一样。<br>用这个适配调整以后可以防止各种奇妙出格，而且就点两下按钮，对于 UXUI 团队来说也是非常容易上手的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;经过了一次用户测试之后，拿到的反馈说我们很多页面的UX设计都不行，只能各种重做，不论是我程序这边还是UXUI组那边，我们都需要重新拼好一些 prefab。&lt;/p&gt;
&lt;p&gt;然后还有一些旧的 prefab 我们需要换皮改尺寸之类的，这次就来分享一个简单的小工具，用来做一些简单的
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity Odin CustomValueDrawer 小坑</title>
    <link href="http://yoursite.com/2022/04/16/20220416-odin-custom-value-drawer/"/>
    <id>http://yoursite.com/2022/04/16/20220416-odin-custom-value-drawer/</id>
    <published>2022-04-16T02:20:26.000Z</published>
    <updated>2022-05-15T06:11:17.602Z</updated>
    
    <content type="html"><![CDATA[<p>为了方便策划在 scriptable object 上配置我们的任务以及事件相关的文本，我做了一个简单的 struct 。里面包含了 I2 的 Lockey 和一个参数数组。<br>既然要方便策划配置，那肯定要做一个简单的预览，这样策划就能知道自己配置的文本参数是否正确。</p><p>既然要做预览，那肯定得得自己复写一下他的 property drawer了。对一个字段的编辑器绘制重写有两种方式，一种是继承 OdinValueDrawer class， 还有一种是 CustomValueDrawer Attribute.</p><p><a href="https://odininspector.com/tutorials/how-to-create-custom-drawers-using-odin/how-to-create-a-custom-value-drawer" target="_blank" rel="noopener">https://odininspector.com/tutorials/how-to-create-custom-drawers-using-odin/how-to-create-a-custom-value-drawer</a><br><a href="https://odininspector.com/attributes/custom-value-drawer-attribute" target="_blank" rel="noopener">https://odininspector.com/attributes/custom-value-drawer-attribute</a></p><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>我定义的结构是这样的。</p><p>在默认情况下他已经能在 inspector上画出我的 Lockey 和我的参数数组。<br>因为考虑到给整个结构做 OdinValueDrawer 需要自己画数组有点麻烦，所以我选择用 CustomValueDrawer 只重新画 LocalizedString。</p><p>LocalizedString 的重画我直接照搬了同事的，但是我发现了一个非常奇怪的问题。</p><p>我创建了一个下拉选框，然后在用户选中一个新的 lockey 的时候我对结构体中的 lockey 进行更新。但我发现在下拉选框的选中事件触发后进行赋值，绘制完成再返回新的结构，得到的是没有被更改的结果。<br>但是同样的绘制代码，在 OdinValueDrawer 中却能得到正确的结果！！！CustomValueDrawer 和 OdinValueDrawer 的原理是不一样的。</p><p>OdinValueDrawer 就是相当于一个更先进的 Property Drawer, 在这个绘制器里是可以获取到原本的实际的字段值的。</p><p>CustomValueDrawer 则像是一个函数，里面包含了绘制的方法，但是不能够直接操作原本的字段，需要最后把你更新到的值返回出去，这才能够赋值给实际的那个字段。</p><p>代码给出，有问题的地方使用注释标明了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> LocalizationStringParmPack</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CustomValueDrawer(<span class="meta-string">"DrawPreviewText"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> LocalizedString TextLoc;</span><br><span class="line">    <span class="keyword">public</span> LocalizationParamsManager.ParamValue[] ParmsArray;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.GetRawEnglishString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> GUIStyle m_previewStyle;</span><br><span class="line">    <span class="keyword">static</span> GUIStyle PreviewStyle</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_previewStyle == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m_previewStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.textArea);</span><br><span class="line">                m_previewStyle.wordWrap = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> m_previewStyle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// use hacky stuff to get selected new lockey</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">string</span> s_wtfKey = <span class="keyword">string</span>.Empty;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">bool</span> s_hasChanged = <span class="literal">false</span>;</span><br><span class="line">    <span class="function">LocalizedString <span class="title">DrawPreviewText</span>(<span class="params">LocalizedString <span class="keyword">value</span>, GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.VerticalScope(UnityEditor.EditorStyles.helpBox))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// draw lockey</span></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (label != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorGUILayout.LabelField(label, GUILayout.Width(EditorGUIUtility.labelWidth));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// weird stuff happin in dropdown</span></span><br><span class="line">                <span class="keyword">if</span> (EditorGUILayout.DropdownButton(<span class="keyword">new</span> GUIContent(<span class="keyword">value</span>.mTerm), FocusType.Keyboard))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> terms = LocalizationManager.GetTermsList();</span><br><span class="line">                    <span class="keyword">var</span> selector = <span class="keyword">new</span> GenericSelector&lt;<span class="keyword">string</span>&gt;(<span class="string">"Select Term"</span>, terms);</span><br><span class="line">                    selector.EnableSingleClickToSelect();</span><br><span class="line">                    selector.SelectionConfirmed += s =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (s.Any())</span><br><span class="line">                        &#123;</span><br><span class="line">                            s_wtfKey = s.First();</span><br><span class="line">                            <span class="comment">// WEIRD STUFF HERE</span></span><br><span class="line">                            <span class="comment">/* if I do  </span></span><br><span class="line"><span class="comment">                            LocalizedString next = new LocalizedString(s.First());</span></span><br><span class="line"><span class="comment">                            and return 'next' and the end of method, it just doesnt work!!!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                            cuz the GenericSelector is actually a editor window, and</span></span><br><span class="line"><span class="comment">                            */</span></span><br><span class="line">                            s_hasChanged = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;;</span><br><span class="line">                    selector.ShowInPopup();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> mask = (<span class="keyword">value</span>.mRTL_IgnoreArabicFix ? <span class="number">0</span> : <span class="number">1</span>) +</span><br><span class="line">                           (<span class="keyword">value</span>.mRTL_ConvertNumbers ? <span class="number">0</span> : <span class="number">2</span>) +</span><br><span class="line">                           (<span class="keyword">value</span>.m_DontLocalizeParameters ? <span class="number">0</span> : <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">using</span> (<span class="keyword">var</span> changed = <span class="keyword">new</span> EditorGUI.ChangeCheckScope())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> newMask = EditorGUILayout.MaskField(mask, <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"Arabic Fix"</span>, <span class="string">"Ignore Numbers in RTL"</span>, <span class="string">"Localize Parameters"</span> &#125;, GUILayout.Width(<span class="number">30</span>));</span><br><span class="line">                    <span class="keyword">if</span> (newMask != mask)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">value</span>.mRTL_IgnoreArabicFix = (newMask &amp; <span class="number">1</span>) == <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">value</span>.mRTL_ConvertNumbers = (newMask &amp; <span class="number">2</span>) == <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">value</span>.m_DontLocalizeParameters = (newMask &amp; <span class="number">4</span>) == <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (GUILayout.Button(<span class="string">$"Clear"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* this will also work</span></span><br><span class="line"><span class="comment">                    LocalizedString next = new LocalizedString("[NULL]");</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                    s_wtfKey = <span class="string">"[NULL]"</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            LocalizedString next = s_hasChanged ? <span class="keyword">new</span> LocalizedString(s_wtfKey) : <span class="keyword">value</span>;</span><br><span class="line">            s_hasChanged = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            draw preview</span></span><br><span class="line"><span class="comment">            draw preview</span></span><br><span class="line"><span class="comment">            draw preview</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">return</span> next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">string</span> <span class="title">GetParamValue</span>(<span class="params"><span class="keyword">string</span> key</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ParmsArray.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ParmsArray[i].Name == key)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">string</span>.IsNullOrEmpty(ParmsArray[i].Value) ? key : ParmsArray[i].Value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="又踩坑"><a href="#又踩坑" class="headerlink" title="又踩坑"></a>又踩坑</h1><p>因为这边使用了静态字段，所以如果需要同时绘制这个字段两次，那就会出问题。所以最后我还是换回OdinValueDrawer。<br>静态字段最好还是别在这种情况下使用吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为了方便策划在 scriptable object 上配置我们的任务以及事件相关的文本，我做了一个简单的 struct 。里面包含了 I2 的 Lockey 和一个参数数组。&lt;br&gt;既然要方便策划配置，那肯定要做一个简单的预览，这样策划就能知道自己配置的文本参数是否正确。&lt;
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>Unity InputSystem 简单保存按键rebind</title>
    <link href="http://yoursite.com/2022/04/05/20220404-input-sys-save-rebind-01/"/>
    <id>http://yoursite.com/2022/04/05/20220404-input-sys-save-rebind-01/</id>
    <published>2022-04-05T04:35:12.000Z</published>
    <updated>2022-04-05T05:57:58.512Z</updated>
    
    <content type="html"><![CDATA[<p>Unity 的 InputSystem 正式发布也好一段时间了。本来这边也想自己做一套输入处理但是看 Unity 这个官方的还挺方便就打算直接用。</p><h1 id="InputAction"><a href="#InputAction" class="headerlink" title="InputAction"></a>InputAction</h1><p>说下我对这个 InputAction 的简单理解。</p><p>InputAction</p><pre><code>- Composite    - Binding- Binding</code></pre><ul><li>Interaction</li><li>Processor</li></ul><p>InputAction 是定义的最上层的交互事件，我认为他是直接和 gameplay 层面交互的，提供响应事件和输入设备的数据(比如鼠标的位置，或是线性按钮的数值)</p><p>Binding 是具体到输入设备上按键，线性输入的一个数据结构</p><p>Composite 是把 Binding 提供的直接输入数据处理成我们想要的数据并提供给 InputAction。</p><p>另外两个可以应用于InputAction，Composite 和 Binding 的组件</p><p>Interaction 是用来规定当前的 输入/行为 触发的机制。</p><p>Processor 是用来对当前的输入数据做追加处理的。</p><h1 id="rebind"><a href="#rebind" class="headerlink" title="rebind"></a>rebind</h1><p>我在官方的tank example中做的 rebind save</p><p>对于简单的 Button Action 里的 Binding, rebind 的时候我们是追加了 OverridePath 给这个 Button Action 下面的 Binding。</p><p>Path 是一个字符串, 大概是这样的 “<Gamepad>/buttonSouth”。 里面包含了输入设备类型和具体的按钮名。(其实我觉得， <Gamepad> 这样的文本可以提供成一个Const string ，会好用很多)</p><p>对于简单的 rebind 存储，我们只需要找到所有的 Binding 里的 override path 保存下来，下次启动游戏加载了原本的 Action Map 之后再把 Override Path 给赋值上去。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputBindSaveHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> s_keyMappingPreferKey = <span class="string">"KeyMapping"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveActionMapRebinding</span>(<span class="params">InputActionMap actionMap</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Dictionary&lt;Guid, <span class="keyword">string</span>&gt; overridedActionPathDict = <span class="keyword">new</span> Dictionary&lt;Guid, <span class="keyword">string</span>&gt;();</span><br><span class="line">        UnityEngine.InputSystem.Utilities.ReadOnlyArray&lt;InputAction&gt; actions = actionMap.actions;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; actions.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            InputAction action = actions[i];</span><br><span class="line">            UnityEngine.InputSystem.Utilities.ReadOnlyArray&lt;InputBinding&gt; actionBindings = action.bindings;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; actionBindings.Count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                InputBinding actionBinding = actionBindings[j];</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(actionBinding.overridePath))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                overridedActionPathDict.Add(actionBinding.id, actionBinding.overridePath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        BinaryFormatter binFormatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">        MemoryStream mStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">        binFormatter.Serialize(mStream, overridedActionPathDict);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] byteArr = mStream.ToArray();</span><br><span class="line">        <span class="comment">// idk why [Encoding.UTF8.GetString()] just doesnt work</span></span><br><span class="line">        <span class="keyword">string</span> encodingString = Convert.ToBase64String(byteArr, Base64FormattingOptions.InsertLineBreaks);</span><br><span class="line">        PlayerPrefs.SetString(s_keyMappingPreferKey, encodingString);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LoadActionMapRebinding</span>(<span class="params">InputActionMap actionMap</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> encodingString = PlayerPrefs.GetString(s_keyMappingPreferKey);</span><br><span class="line">        <span class="keyword">byte</span>[] byteArr = Convert.FromBase64String(encodingString);</span><br><span class="line"></span><br><span class="line">        BinaryFormatter binFormatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">        MemoryStream mStream = <span class="keyword">new</span> MemoryStream(byteArr);</span><br><span class="line">        Dictionary&lt;Guid, <span class="keyword">string</span>&gt; rebindSavePairDict = binFormatter.Deserialize(mStream) <span class="keyword">as</span> Dictionary&lt;Guid, <span class="keyword">string</span>&gt;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rebindSavePairDict != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            UnityEngine.InputSystem.Utilities.ReadOnlyArray&lt;InputAction&gt; actions = actionMap.actions;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; actions.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                InputAction action = actions[i];</span><br><span class="line">                UnityEngine.InputSystem.Utilities.ReadOnlyArray&lt;InputBinding&gt; actionBindings = action.bindings;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; actionBindings.Count; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    InputBinding actionBinding = actionBindings[j];</span><br><span class="line">                    <span class="comment">// override</span></span><br><span class="line">                    <span class="keyword">if</span> (rebindSavePairDict.ContainsKey(actionBinding.id))</span><br><span class="line">                    &#123;</span><br><span class="line">                        actionBinding.overridePath = rebindSavePairDict[actionBinding.id];</span><br><span class="line">                        action.ApplyBindingOverride(actionBinding);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当前因为项目里的存档相关的功能还没做完，结构还没定下来，所以我只能把 rebind 存在PlayerPrefs里。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我也只是大概看了一下 Unity 的这个 InputSystem，没有很深的去使用。但是初步上手的时候就感觉他的封装和扩展性对于那些操作要求不高的游戏是已经够用的了。<br>比较麻烦的一个点就是他的 Interaction, Processor 和 Binding 的覆盖全都需要用 string。直接写的 string 会非常不方便，估计使用者得自己总结一些其常用的 const string 写进变量直接调用。<br>这样才能比较好的维持代码可读性。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Unity 的 InputSystem 正式发布也好一段时间了。本来这边也想自己做一套输入处理但是看 Unity 这个官方的还挺方便就打算直接用。&lt;/p&gt;
&lt;h1 id=&quot;InputAction&quot;&gt;&lt;a href=&quot;#InputAction&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity UGUI 简单循环滚动列表</title>
    <link href="http://yoursite.com/2022/03/13/20220313-recycle-grid-scrollview/"/>
    <id>http://yoursite.com/2022/03/13/20220313-recycle-grid-scrollview/</id>
    <published>2022-03-13T15:35:12.000Z</published>
    <updated>2022-03-13T16:44:18.099Z</updated>
    
    <content type="html"><![CDATA[<p>之前做了一个自带简单 GridLayout 的循环滚动列表。但是基于继承的思路做的。导师指出了其不便指出，而且Unity其实是比较提倡大家使用组合模式的，所以我决定修改一下。</p><h1 id="循环滚动"><a href="#循环滚动" class="headerlink" title="循环滚动"></a>循环滚动</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>和在网上能搜索到的大多数循环滚动列表一样，我有一个空的 Content，调整其尺寸来模拟列表的滚动，再根据滚动的当前位置在视口里把UI组件都摆放好。</p><p>我需要使用Unity自带的滚动视外，并且我还定义了简单的 ListElement, ListView, ScrollrectController 这三个类。</p><p>ListElement 就是实际需要被操作的列表组件，这个组件负责提供 RectTransform 和一个 index， 保证其能被我的 ScrollrectController 操作。</p><p>ListView 负责管理 ListElement，生成销魂都可以。同时还提供直接拿取所有 ListElement 的接口。</p><p>ScrollrectController 持有 ListView，并且根据用户传入的一个数据个数来进行循环滚动的管理。同时有事件告知每次的布局刷新的完成。</p><p>为了方便，我还做了一个比较简单的 GridLayout 给 ScrollrectController 控制。</p><p>至于视图内的最大可视条目数，老实说我感觉我没有特别好的方法去计算一个准确的值。所以就按着 (row + 2) <em> (column </em> 2) 来计算了，虽然有一点浪费内存，但在我当前设置的滚动速度下是够用的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TempListElementUI</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="meta-string">"must have"</span>), Tooltip(<span class="meta-string">"should inherit from ISetupable"</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    Component m_dataReceiver;</span><br><span class="line">    [<span class="meta">SerializeField, Tooltip(<span class="meta-string">"better to manual drag it in"</span>)</span>]</span><br><span class="line">    RectTransform m_elementTransform;</span><br><span class="line">    [<span class="meta">SerializeField, ReadOnly</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> m_index = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ElementIndex =&gt; m_index;</span><br><span class="line">    <span class="keyword">public</span> RectTransform ElementRectTransform</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_elementTransform == <span class="literal">null</span>)</span><br><span class="line">                m_elementTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">            <span class="keyword">return</span> m_elementTransform;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> Setup&lt;TData&gt;(TData data)</span><br><span class="line">    &#123;</span><br><span class="line">        SomeUtils.ISetup&lt;Component, TData&gt;(m_dataReceiver, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.gameObject.activeSelf)</span><br><span class="line">            <span class="keyword">this</span>.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Hide</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.gameObject.activeSelf)</span><br><span class="line">            <span class="keyword">this</span>.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetIndex</span>(<span class="params"><span class="keyword">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_elementTransform == <span class="literal">null</span>)</span><br><span class="line">            m_elementTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Reset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_elementTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TempListView</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="comment">// check when prefab change</span></span><br><span class="line">    <span class="comment">// [OnValueChanged("OnPrefabChanged")]</span></span><br><span class="line">    [<span class="meta">SerializeField, Header(<span class="meta-string">"place holder, the listview should only contains one type of element"</span>)</span>]</span><br><span class="line">    TempListElementUI m_elementPrefab;</span><br><span class="line">    RectTransform Container =&gt; transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">    [<span class="meta">SerializeField, ReadOnly</span>]</span><br><span class="line">    List&lt;TempListElementUI&gt; m_actualUsedComponents = <span class="keyword">new</span> List&lt;TempListElementUI&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Count =&gt; m_actualUsedComponents.Count;</span><br><span class="line">    <span class="keyword">public</span> TempListElementUI <span class="keyword">this</span>[<span class="keyword">int</span> index] =&gt; m_actualUsedComponents[index];</span><br><span class="line">    <span class="keyword">public</span> IReadOnlyList&lt;TempListElementUI&gt; ElementList =&gt; m_actualUsedComponents;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TempListElementUI <span class="title">Add</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        TempListElementUI element = InternalAdd();</span><br><span class="line">        m_actualUsedComponents.Add(element);</span><br><span class="line">        element.Show();</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        TempListElementUI element = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (m_actualUsedComponents.Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            element = m_actualUsedComponents[m_actualUsedComponents.Count - <span class="number">1</span>];</span><br><span class="line">            m_actualUsedComponents.RemoveAt(m_actualUsedComponents.Count - <span class="number">1</span>);</span><br><span class="line">            InternalRemove(element);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Remove</span>(<span class="params">TempListElementUI instance</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_actualUsedComponents.Remove(instance))</span><br><span class="line">        &#123;</span><br><span class="line">            instance.Hide();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$"listview_<span class="subst">&#123;<span class="keyword">this</span>.gameObject.name&#125;</span> does not contains <span class="subst">&#123;instance.ElementRectTransform.name&#125;</span>, remove failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RemoveAt</span>(<span class="params"><span class="keyword">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= m_actualUsedComponents.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$"<span class="subst">&#123;index&#125;</span> is invalid for SimpleListView"</span>, <span class="keyword">this</span>.gameObject);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TempListElementUI toRemove = m_actualUsedComponents[index];</span><br><span class="line">        m_actualUsedComponents.RemoveAt(index);</span><br><span class="line">        InternalRemove(toRemove);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InnerSwap</span>(<span class="params"><span class="keyword">int</span> indexA, <span class="keyword">int</span> indexB</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (indexA &lt; <span class="number">0</span> || indexA &gt; m_actualUsedComponents.Count - <span class="number">1</span> || indexB &lt; <span class="number">0</span> || indexB &gt; m_actualUsedComponents.Count - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TempListElementUI temp = m_actualUsedComponents[indexA];</span><br><span class="line">        <span class="keyword">int</span> transformIndexA = temp.ElementRectTransform.GetSiblingIndex();</span><br><span class="line">        <span class="keyword">int</span> transformIndexB = m_actualUsedComponents[indexB].ElementRectTransform.GetSiblingIndex();</span><br><span class="line">        m_actualUsedComponents[indexA] = m_actualUsedComponents[indexB];</span><br><span class="line">        m_actualUsedComponents[indexB] = temp;</span><br><span class="line">        m_actualUsedComponents[indexA].ElementRectTransform.SetSiblingIndex(transformIndexA);</span><br><span class="line">        m_actualUsedComponents[indexB].ElementRectTransform.SetSiblingIndex(transformIndexB);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>-1 means element is not in the list<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">IndexOf</span>(<span class="params">TempListElementUI instance</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_actualUsedComponents.IndexOf(instance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ArgumentOutOfRangeException)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> TempListElementUI <span class="title">InternalAdd</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// can apply object pool here</span></span><br><span class="line">        <span class="keyword">if</span> (Application.isEditor &amp;&amp; !Application.isPlaying)</span><br><span class="line">            <span class="keyword">return</span> UnityEditor.PrefabUtility.InstantiatePrefab(m_elementPrefab, Container) <span class="keyword">as</span> TempListElementUI;</span><br><span class="line">        <span class="keyword">return</span> Instantiate(m_elementPrefab, Container);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">InternalRemove</span>(<span class="params">TempListElementUI element</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// can apply object pool here</span></span><br><span class="line">        <span class="keyword">if</span> (element == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">        element.Hide();</span><br><span class="line">        <span class="keyword">if</span> (Application.isEditor &amp;&amp; !Application.isPlaying)</span><br><span class="line">            GameObject.DestroyImmediate(element.ElementRectTransform.gameObject);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            GameObject.Destroy(element.ElementRectTransform.gameObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTransformChildrenChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Application.isEditor &amp;&amp; !Application.isPlaying)</span><br><span class="line">            FindPrefabInstances();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnPrefabChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// remove pre objects</span></span><br><span class="line">        <span class="keyword">int</span> amount = m_actualUsedComponents.Count;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_actualUsedComponents.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject.DestroyImmediate(m_actualUsedComponents[i].ElementRectTransform.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m_elementPrefab != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; amount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                RectTransform rectTransform = (RectTransform)UnityEditor.PrefabUtility.InstantiatePrefab(m_elementPrefab, Container);</span><br><span class="line">                m_actualUsedComponents[i] = (rectTransform.GetComponent&lt;TempListElementUI&gt;());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_actualUsedComponents.Clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieves prefab instances in the transform</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    [<span class="meta">ContextMenu(<span class="meta-string">"find prefab instances"</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindPrefabInstances</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">bool</span> hasPrefab = !(m_elementPrefab == <span class="literal">null</span>);</span><br><span class="line">        TempListElementUI elementPrefab = m_elementPrefab.GetComponent&lt;TempListElementUI&gt;();</span><br><span class="line">        m_actualUsedComponents.Clear();</span><br><span class="line">        List&lt;GameObject&gt; toDeleteObjectList = <span class="keyword">new</span> List&lt;GameObject&gt;();</span><br><span class="line">        <span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> Container)</span><br><span class="line">        &#123;</span><br><span class="line">            TempListElementUI childElement = child.GetComponent&lt;TempListElementUI&gt;();</span><br><span class="line">            <span class="keyword">if</span> (childElement == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                toDeleteObjectList.Add(child.gameObject);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (hasPrefab)</span><br><span class="line">            &#123;</span><br><span class="line">                GameObject detectPrefabGo = UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(child.gameObject);</span><br><span class="line">                TempListElementUI detectPrefab = (detectPrefabGo == <span class="literal">null</span>) ? <span class="literal">null</span> : detectPrefabGo.GetComponent&lt;TempListElementUI&gt;();</span><br><span class="line">                <span class="keyword">if</span> (elementPrefab == detectPrefab)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// same source prefab</span></span><br><span class="line">                    m_actualUsedComponents.Add(childElement);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// different source prefab, delete this one</span></span><br><span class="line">                    toDeleteObjectList.Add(child.gameObject);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (UnityEditor.PrefabUtility.IsAnyPrefabInstanceRoot(child.gameObject))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// find the first prefab</span></span><br><span class="line">                GameObject prefab = UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(child.gameObject);</span><br><span class="line">                m_elementPrefab = prefab.GetComponent&lt;TempListElementUI&gt;();</span><br><span class="line">                m_actualUsedComponents.Add(childElement);</span><br><span class="line">                hasPrefab = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; toDeleteObjectList.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">                GameObject.Destroy(toDeleteObjectList[i]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                GameObject.DestroyImmediate(toDeleteObjectList[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">ContextMenu(<span class="meta-string">"editor time add"</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">EditorTimeAdd</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Application.isPlaying) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (m_elementPrefab == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">"listview is missing element prefab"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TempListElementUI spawnObject = (TempListElementUI)UnityEditor.PrefabUtility.InstantiatePrefab(m_elementPrefab, Container);</span><br><span class="line">        m_actualUsedComponents.Add(spawnObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">ContextMenu(<span class="meta-string">"editor time clear"</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">EditorTimeClear</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Application.isPlaying) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">// remove pre objects</span></span><br><span class="line">        TempListElementUI[] preObjects = Container.GetComponentsInChildren&lt;TempListElementUI&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; preObjects.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject.DestroyImmediate(preObjects[i].ElementRectTransform.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        m_actualUsedComponents.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">ContextMenu(<span class="meta-string">"test print elements"</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">TestPrintListElements</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_actualUsedComponents != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder printText = <span class="keyword">new</span> StringBuilder(<span class="string">$"temp list view children_<span class="subst">&#123;m_actualUsedComponents.Count&#125;</span> :\n"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_actualUsedComponents.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                printText.AppendLine(m_actualUsedComponents[i].ElementRectTransform.name);</span><br><span class="line">            &#125;</span><br><span class="line">            Debug.Log(printText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BoundlessScrollRectController</span> : <span class="title">UIBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    too much code, I will just show the draw</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawContentItem</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        IReadOnlyList&lt;TempListElementUI&gt; elementList = ElementList;</span><br><span class="line">        <span class="keyword">int</span> dataCount = m_simulatedDataCount;</span><br><span class="line">        <span class="comment">// TODO @Hiko use a general calculation later</span></span><br><span class="line">        <span class="keyword">bool</span> test = m_content.anchorMin != Vector2.up || m_content.anchorMax != Vector2.up || m_content.pivot != Vector2.up;</span><br><span class="line">        <span class="keyword">if</span> (test)</span><br><span class="line">        &#123;</span><br><span class="line">            m_content.anchorMin = Vector2.up;</span><br><span class="line">            m_content.anchorMax = Vector2.up;</span><br><span class="line">            m_content.pivot = Vector2.up;</span><br><span class="line">        &#125;</span><br><span class="line">        Vector3 dragContentAnchorPostion = m_content.anchoredPosition;</span><br><span class="line">        Vector3 contentMove = dragContentAnchorPostion - SomeUtils.GetOffsetLocalPosition(m_content, SomeUtils.UIOffsetType.TopLeft);</span><br><span class="line">        Vector2 itemSize = m_gridLayoutGroup.CellSize, spacing = m_gridLayoutGroup.Spacing;</span><br><span class="line"></span><br><span class="line">        RectOffset padding = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != m_gridLayoutGroup)</span><br><span class="line">            padding = m_gridLayoutGroup.RectPadding;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// need to know the moving direction, then adjust it to prevent wrong draw</span></span><br><span class="line">        <span class="keyword">float</span> xMove = contentMove.x &lt; <span class="number">0</span> ? (-contentMove.x - padding.horizontal) : <span class="number">0</span>;</span><br><span class="line">        xMove = Mathf.Clamp(xMove, <span class="number">0.0f</span>, Mathf.Abs(xMove));</span><br><span class="line">        <span class="keyword">float</span> yMove = contentMove.y &gt; <span class="number">0</span> ? (contentMove.y - padding.vertical) : <span class="number">0</span>;</span><br><span class="line">        yMove = Mathf.Clamp(yMove, <span class="number">0.0f</span>, Mathf.Abs(yMove));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// the column index of the top left item</span></span><br><span class="line">        <span class="keyword">int</span> tempColumnIndex = Mathf.FloorToInt((xMove + spacing.x) / (itemSize.x + spacing.x));</span><br><span class="line">        <span class="keyword">if</span> (xMove % (itemSize.x + spacing.x) - itemSize.x &gt; spacing.x)</span><br><span class="line">            tempColumnIndex = Mathf.Clamp(tempColumnIndex - <span class="number">1</span>, <span class="number">0</span>, tempColumnIndex);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// the row index of the top left item</span></span><br><span class="line">        <span class="keyword">int</span> tempRowIndex = Mathf.FloorToInt((yMove + spacing.y) / (itemSize.y + spacing.y));</span><br><span class="line">        <span class="keyword">if</span> (yMove % (itemSize.y + spacing.y) - itemSize.y &gt; spacing.y)</span><br><span class="line">            tempRowIndex = Mathf.Clamp(tempRowIndex - <span class="number">1</span>, <span class="number">0</span>, tempRowIndex);</span><br><span class="line"></span><br><span class="line">        Vector2Int rowTopLeftItemIndex = <span class="keyword">new</span> Vector2Int(tempRowIndex, tempColumnIndex);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> rowDataCount = <span class="number">0</span>, columnDataCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (BoundlessGridLayoutData.Constraint.FixedColumnCount == m_gridLayoutGroup.constraint)</span><br><span class="line">        &#123;</span><br><span class="line">            rowDataCount = m_gridLayoutGroup.constraintCount;</span><br><span class="line">            columnDataCount = Mathf.CeilToInt((<span class="keyword">float</span>)dataCount / rowDataCount);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            columnDataCount = m_gridLayoutGroup.constraintCount;</span><br><span class="line">            rowDataCount = Mathf.CeilToInt((<span class="keyword">float</span>)dataCount / columnDataCount);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// x -&gt; element amount on horizontal axis</span></span><br><span class="line">        <span class="comment">// y -&gt; element amount on vertical axis</span></span><br><span class="line">        Vector2Int contentRowColumnSize = <span class="keyword">new</span> Vector2Int(rowDataCount, columnDataCount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// deal with content from left to right (simple case)</span></span><br><span class="line">        <span class="keyword">int</span> dataIndex = <span class="number">0</span>, uiItemIndex = <span class="number">0</span>;</span><br><span class="line">        Vector3 rowTopLeftPosition = <span class="keyword">new</span> Vector3(padding.left, -padding.top, <span class="number">0.0f</span>), itemTopLeftPosition = Vector3.zero;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> columnIndex = <span class="number">0</span>; columnIndex &lt; m_viewItemCountInColumn; columnIndex++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (columnIndex + rowTopLeftItemIndex.x == columnDataCount)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            rowTopLeftPosition = <span class="keyword">new</span> Vector3(padding.left, -padding.top, <span class="number">0.0f</span>) + Vector3.down * (columnIndex + rowTopLeftItemIndex.x) * (itemSize.y + spacing.y);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> rowIndex = <span class="number">0</span>; rowIndex &lt; m_viewItemCountInRow; rowIndex++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (rowIndex + rowTopLeftItemIndex.y == rowDataCount)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                Vector2Int elementIndex = <span class="keyword">new</span> Vector2Int(rowIndex + rowTopLeftItemIndex.y, columnIndex + rowTopLeftItemIndex.x);</span><br><span class="line">                dataIndex = CaculateDataIndex(elementIndex, contentRowColumnSize, GridLayoutData.startAxis, GridLayoutData.startCorner);</span><br><span class="line">                itemTopLeftPosition = rowTopLeftPosition + Vector3.right * (rowIndex + rowTopLeftItemIndex.y) * (itemSize.x + spacing.x);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// TODO @Hiko avoid overdraw</span></span><br><span class="line">                <span class="keyword">if</span> (uiItemIndex &gt; <span class="number">0</span> &amp;&amp; elementList[uiItemIndex - <span class="number">1</span>].ElementIndex == dataIndex)</span><br><span class="line">                    <span class="keyword">continue</span>; <span class="comment">// over draw case</span></span><br><span class="line">                <span class="keyword">if</span> (dataIndex &gt; <span class="number">-1</span> &amp;&amp; dataIndex &lt; dataCount)</span><br><span class="line">                &#123;</span><br><span class="line">                    elementList[uiItemIndex].ElementRectTransform.localPosition = itemTopLeftPosition;</span><br><span class="line">                    elementList[uiItemIndex].SetIndex(dataIndex);</span><br><span class="line">                    elementList[uiItemIndex].Show();</span><br><span class="line">                    uiItemIndex++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (uiItemIndex &lt; elementList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            elementList[uiItemIndex].SetIndex(<span class="number">-1</span>);</span><br><span class="line">            elementList[uiItemIndex].Hide();</span><br><span class="line">            elementList[uiItemIndex].ElementRectTransform.position = Vector3.zero;</span><br><span class="line">            uiItemIndex++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        NotifyOnContentItemFinishDrawing();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样写可以保证我的这个循环滚动的逻辑与实际的UI需要显示的逻辑尽可能地分开。需要使用循环滚动功能的时候，再添加这些组件即可。</p><img src="/2022/03/13/20220313-recycle-grid-scrollview/20210131-scrollrect01.gif" class="" title="split"><h1 id="配合实际显示组件使用"><a href="#配合实际显示组件使用" class="headerlink" title="配合实际显示组件使用"></a>配合实际显示组件使用</h1><p>在滚动视图摆放好位置后，我们可以通过 ListElement 提供的索引知道其对应数据集里数据索引。所以需要使用这个滚动视图的UI，要同时管理 ListView 和 ScrollrectController。</p><p>我整了一个接口和一个扩展方法，用于显示数据的UI组件需要继承这个接口。因为按照我的写法，从 ListView 中只能拿到 ListElement 没法拿到实际用于表现的 UI 组件。但是通过这个接口和 ListElement 中的一个泛型方法就可以把内容传进去。虽然需要做一次类型检查，但也应该还好。毕竟不需要GetComponent也不需要单独维护一个关于实际显示组件的数组，用起来还是挺方便的呀。</p><p>除此之外比较坑的就是这样写导致 Unity 的 Component 都能调用这个Setup的方法，还挺危险的，所以加了个注释。实际使用的时候一定记得让用于表现的 UI 组件继承这个接口。</p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// apply this on the target shows actual data</span></span><br><span class="line">public interface ISetupable&lt;TData&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Setup</span>(<span class="params">TData data</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> target component should inherit from ISetupable</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="component"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;typeparam name="TData"&gt;</span><span class="doctag">&lt;/typeparam&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> ISetup&lt;TComponent, TData&gt;(<span class="keyword">this</span> Component component, TData data) <span class="keyword">where</span> TComponent : Component</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// I guess this check should be fine  :(</span></span><br><span class="line">    <span class="keyword">if</span> (component <span class="keyword">is</span> ISetupable&lt;TData&gt; target)</span><br><span class="line">    &#123;</span><br><span class="line">        target.Setup(data);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    UnityEngine.Debug.LogError(<span class="string">$"component_<span class="subst">&#123;component.name&#125;</span> is not a setupable"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实这个功能丢尽项目里后用的地方不是特别多，所以都是隔几个月修一下，每次都要看自己写的垃圾代码好久，属实头痛了。<br>总算是用起来比以前方便不少了。接下来就把一些小问题修一修好了。</p><p>回头再看已经和自己做的那个初版完全不一样了，个人认为思路比以前那个好多了。</p><p>全部代码：<br><a href="https://github.com/2C2C2C/MuyScrollRect" target="_blank" rel="noopener">https://github.com/2C2C2C/MuyScrollRect</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前做了一个自带简单 GridLayout 的循环滚动列表。但是基于继承的思路做的。导师指出了其不便指出，而且Unity其实是比较提倡大家使用组合模式的，所以我决定修改一下。&lt;/p&gt;
&lt;h1 id=&quot;循环滚动&quot;&gt;&lt;a href=&quot;#循环滚动&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Games101 作业windows环境配置</title>
    <link href="http://yoursite.com/2021/10/04/20211004-games101-env/"/>
    <id>http://yoursite.com/2021/10/04/20211004-games101-env/</id>
    <published>2021-10-04T07:18:50.000Z</published>
    <updated>2021-10-04T07:55:29.482Z</updated>
    
    <content type="html"><![CDATA[<p>终于开始学习 Games101了。除了听课以外还想做他的作业多巩固一下。</p><p>但我实在是不想用虚拟机(菜，想调试)，所以想整个windows这边的环境。<br>最开始按照一些教程配Cmake啥的，结果作业1编译就疯狂报错实在受不了。群友推荐了 vcpkg+vs 俺马上来试试。</p><h1 id="vcpkg"><a href="#vcpkg" class="headerlink" title="vcpkg"></a>vcpkg</h1><p><a href="https://github.com/microsoft/vcpkg/blob/master/README_zh_CN.md" target="_blank" rel="noopener">https://github.com/microsoft/vcpkg/blob/master/README_zh_CN.md</a></p><p>安装并不难，找到了官方的简中手册，照着跑一轮就行。</p><h1 id="安装作业依赖包"><a href="#安装作业依赖包" class="headerlink" title="安装作业依赖包"></a>安装作业依赖包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># install latest packages :D</span></span><br><span class="line">.\vcpkg.exe install opencv:x64-windows</span><br><span class="line">.\vcpkg.exe install eigen3:x64-windows</span><br><span class="line"></span><br><span class="line"><span class="comment"># install for all users</span></span><br><span class="line">vcpkg integrate install</span><br></pre></td></tr></table></figure><p>结果这个时候遇到了个天坑，eigen3这边的gitlab 仓库跑路了(不是)。</p><img src="/2021/10/04/20211004-games101-env/20211004-pic000.png" class="" title="split"><p><a href="https://gitlab.com/libeigen/eigen/-/issues/2336" target="_blank" rel="noopener">https://gitlab.com/libeigen/eigen/-/issues/2336</a></p><p>于是乎去暂存的仓库下载源码，然后放进 “vcpkg\downloads” 中，在执行之前的安装命令就好了</p><p><a href="https://gitlab.com/cantonios/eigen/-/tree/3.3.9" target="_blank" rel="noopener">https://gitlab.com/cantonios/eigen/-/tree/3.3.9</a></p><h1 id="作业框架设置"><a href="#作业框架设置" class="headerlink" title="作业框架设置"></a>作业框架设置</h1><p>我是自己NEW了一个C++的空vs工程，把作业代码都丢进去。</p><p>目标平台选择x64</p><p>右键 项目 属性 -&gt; c/c++ -&gt; 语言 -&gt; c++ 标准这边选择 c++17 (作业要求)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;终于开始学习 Games101了。除了听课以外还想做他的作业多巩固一下。&lt;/p&gt;
&lt;p&gt;但我实在是不想用虚拟机(菜，想调试)，所以想整个windows这边的环境。&lt;br&gt;最开始按照一些教程配Cmake啥的，结果作业1编译就疯狂报错实在受不了。群友推荐了 vcpkg+vs 俺
      
    
    </summary>
    
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Unity2020 Graphic 小坑</title>
    <link href="http://yoursite.com/2021/08/31/20210831-raycast-padding/"/>
    <id>http://yoursite.com/2021/08/31/20210831-raycast-padding/</id>
    <published>2021-08-31T13:45:42.000Z</published>
    <updated>2021-08-31T15:22:23.272Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目升级了2020.3，Graphic这边多给了一个Raycast Padding的设置。<br>我们有在用一些完全空白的图片来接受UI的点击响应，同时也有一些用图片接收点击的按钮。</p><p>但很坑爹的是，我发现无论怎么设置Raycast Padding的值，场景预览中都没有显示框框，所以我其实是完全不知道这玩意儿到底怎么用的。<br>搜索一下才知道原来是padding的数值是负数的时候才是往外扩张。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RaycastTarget</span> : <span class="title">Graphic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Additionally, If you need a Raycast target that is not a rectangle, you can implement bool Raycast(Vector2 sp, Camera eventCamera) method from Graphic.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetMaterialDirty</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetVerticesDirty</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Probably not necessary since the chain of calls `Rebuild()`-&gt;`UpdateGeometry()`-&gt;`DoMeshGeneration()`-&gt;`OnPopulateMesh()` won't happen; so here really just as a fail-safe.</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnPopulateMesh</span>(<span class="params">VertexHelper vh</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        vh.Clear();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.enabled)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        RectTransform rectTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">        Color wireColor = Color.yellow;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isActiveAndEnabled)</span><br><span class="line">            wireColor.a *= <span class="number">0.7f</span></span><br><span class="line">        <span class="comment">// Padding to be applied to the masking</span></span><br><span class="line">        <span class="comment">// X = Left, Y = Bottom, Z = Right, W = Top</span></span><br><span class="line">        <span class="comment">// if you wanna make it bigger, then the all value shouble be negative</span></span><br><span class="line">        Vector4 padding = <span class="keyword">this</span>.raycastPadding * <span class="number">-1.0f</span>;</span><br><span class="line">        Matrix4x4 localToWorld = rectTransform.localToWorldMatrix</span><br><span class="line">        Vector3 topLeft = SomeUtils.GetOffsetLocalPosition(rectTransform, SomeUtils.UIOffsetType.TopLeft);</span><br><span class="line">        Vector3 topRight = SomeUtils.GetOffsetLocalPosition(rectTransform, SomeUtils.UIOffsetType.TopRight);</span><br><span class="line">        Vector3 bottomLeft = SomeUtils.GetOffsetLocalPosition(rectTransform, SomeUtils.UIOffsetType.BottomLeft);</span><br><span class="line">        Vector3 bottomRight = SomeUtils.GetOffsetLocalPosition(rectTransform, SomeUtils.UIOffsetType.BottomRight)</span><br><span class="line">        topLeft = localToWorld.MultiplyPoint(topLeft + (Vector3.left * padding.x) + (Vector3.up * padding.w));</span><br><span class="line">        topRight = localToWorld.MultiplyPoint(topRight + (Vector3.right * padding.z) + (Vector3.up * padding.w));</span><br><span class="line">        bottomLeft = localToWorld.MultiplyPoint(bottomLeft + (Vector3.left * padding.x) + (Vector3.down * padding.y));</span><br><span class="line">        bottomRight = localToWorld.MultiplyPoint(bottomRight + (Vector3.right * padding.z) + (Vector3.down * padding.y))</span><br><span class="line">        Color tempColor = Gizmos.color;</span><br><span class="line">        Gizmos.color = wireColor</span><br><span class="line">        Gizmos.DrawLine(topLeft, topRight);</span><br><span class="line">        Gizmos.DrawLine(topLeft, bottomLeft);</span><br><span class="line">        Gizmos.DrawLine(bottomRight, topRight);</span><br><span class="line">        Gizmos.DrawLine(bottomRight, bottomLeft);</span><br><span class="line">        Gizmos.color = tempColor</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空白raycast target的可以在Gizmo里画，但是Image本身的不是那么好画，因为无法直接覆写原本的Editor。<br>一个笨办法就是做一个自己的Iamge然后也在Gizmo里画。<br>但其实这个是Graphic的property 不知道怎么做通用解决方案。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近项目升级了2020.3，Graphic这边多给了一个Raycast Padding的设置。&lt;br&gt;我们有在用一些完全空白的图片来接受UI的点击响应，同时也有一些用图片接收点击的按钮。&lt;/p&gt;
&lt;p&gt;但很坑爹的是，我发现无论怎么设置Raycast Padding的值，场景
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
</feed>
