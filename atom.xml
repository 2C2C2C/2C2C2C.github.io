<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FishPlayer</title>
  
  <subtitle>一个喜欢摸鱼的废物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2025-08-31T08:54:53.339Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>2C2C2C2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UGUI不规则形状按钮</title>
    <link href="http://yoursite.com/2025/08/24/20250824-ugui-polygon-button/"/>
    <id>http://yoursite.com/2025/08/24/20250824-ugui-polygon-button/</id>
    <published>2025-08-24T08:16:16.000Z</published>
    <updated>2025-08-31T08:54:53.339Z</updated>
    
    <content type="html"><![CDATA[<p>最近几个月都是猛猛加班和服务器兄弟联调做系统。工作确实重复又无趣。最近周末不用强制加班了，于是用省下时间把以前UI那边的一个人认为还算有点意思的小需求做了。<br>今天的主题是 UGUI不规则形按钮！</p><h1 id="UGUI射线点击流程"><a href="#UGUI射线点击流程" class="headerlink" title="UGUI射线点击流程"></a>UGUI射线点击流程</h1><p>既然要做一个和UI点击相关的功能，那就就得先看一看UI这部分的点击检测是如何实现的。<br>我只是大概看了一下源码，简化着说一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">EventSystem 每一帧驱动当前的 InputModule 处理当前的输入</span><br><span class="line">                ↓</span><br><span class="line">InputModule 从输入中捕获到点击信息，以点击信息调用EventSystem对所有附带了Raycaster的Canvas发起对点击点的检测</span><br><span class="line">                ↓</span><br><span class="line">InputModule 收集所有Raycaster得到的结果，进行排序，得到最终的发送点击信息的目标物体</span><br><span class="line">                ↓</span><br><span class="line">让目标物体执行对应的点击回调 (IPointerClickHandler)</span><br></pre></td></tr></table></figure><p>对于今天的这个功能，我们需要关注的是 <code>InputModule 从输入中捕获到点击信息，以点击信息调用EventSystem对所有附带了Raycaster的Canvas发起对点击点的检测</code> 这一步。</p><h1 id="UI物体的Raycast点击检测"><a href="#UI物体的Raycast点击检测" class="headerlink" title="UI物体的Raycast点击检测"></a>UI物体的Raycast点击检测</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Raycast</span>(<span class="params">Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList&lt;Graphic&gt; foundGraphics, List&lt;Graphic&gt; results</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Necessary for the event system</span></span><br><span class="line">    <span class="keyword">int</span> totalCount = foundGraphics.Count;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalCount; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Graphic graphic = foundGraphics[i];</span><br><span class="line">        <span class="comment">// -1 means it hasn't been processed by the canvas, which means it isn't actually drawn</span></span><br><span class="line">        <span class="keyword">if</span> (!graphic.raycastTarget || graphic.canvasRenderer.cull || graphic.depth == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">// The 1st check</span></span><br><span class="line">        <span class="keyword">if</span> (!RectTransformUtility.RectangleContainsScreenPoint(graphic.rectTransform, pointerPosition, eventCamera, graphic.raycastPadding))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (eventCamera != <span class="literal">null</span> &amp;&amp; eventCamera.WorldToScreenPoint(graphic.rectTransform.position).z &gt; eventCamera.farClipPlane)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (graphic.Raycast(pointerPosition, eventCamera))</span><br><span class="line">        &#123;</span><br><span class="line">            s_SortedGraphics.Add(graphic);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    s_SortedGraphics.Sort((g1, g2) =&gt; g2.depth.CompareTo(g1.depth));</span><br><span class="line">    totalCount = s_SortedGraphics.Count;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalCount; ++i)</span><br><span class="line">        results.Add(s_SortedGraphics[i]);</span><br><span class="line">    s_SortedGraphics.Clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">Raycast</span>(<span class="params">Vector2 sp, Camera eventCamera</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isActiveAndEnabled)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> t = transform;</span><br><span class="line">    <span class="keyword">var</span> components = ListPool&lt;Component&gt;.Get();</span><br><span class="line">    <span class="keyword">bool</span> ignoreParentGroups = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> continueTraversal = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (t != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t.GetComponents(components);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; components.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> canvas = components[i] <span class="keyword">as</span> Canvas;</span><br><span class="line">            <span class="keyword">if</span> (canvas != <span class="literal">null</span> &amp;&amp; canvas.overrideSorting)</span><br><span class="line">                continueTraversal = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> filter = components[i] <span class="keyword">as</span> ICanvasRaycastFilter;</span><br><span class="line">            <span class="keyword">if</span> (filter == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">var</span> raycastValid = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">var</span> <span class="keyword">group</span> = components[i] <span class="keyword">as</span> CanvasGroup;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">group</span> != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">group</span>.enabled)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (ignoreParentGroups == <span class="literal">false</span> &amp;&amp; <span class="keyword">group</span>.ignoreParentGroups)</span><br><span class="line">                &#123;</span><br><span class="line">                    ignoreParentGroups = <span class="literal">true</span>;</span><br><span class="line">                    raycastValid = filter.IsRaycastLocationValid(sp, eventCamera);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!ignoreParentGroups)</span><br><span class="line">                    raycastValid = filter.IsRaycastLocationValid(sp, eventCamera);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                raycastValid = filter.IsRaycastLocationValid(sp, eventCamera);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!raycastValid)</span><br><span class="line">            &#123;</span><br><span class="line">                ListPool&lt;Component&gt;.Release(components);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        t = continueTraversal ? t.parent : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ListPool&lt;Component&gt;.Release(components);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从源码中得知，在判断了点击位置是在Graphic的RectTranform范围里之后，会让graphic根据点击位置做自定义的点击检查(我说自定义是因为这个函数是可以被覆写的)。<br>graphic 对于点击的检查也没有想象中的那么简单，大概内容是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 获取当前自己身上的与点击检测相关的额外检查组件，如果有，就让和它们来判断这个点击是否合法</span><br><span class="line">2 如果上一步判断合法，那么就持续对父级物体做这样的判断直到父级&#x2F;当前物体身上有Canvas</span><br><span class="line">3 如果上一步判断合法，那么这个点击就成立！</span><br></pre></td></tr></table></figure></p><p>这个所谓的“额外检查组件”实际上是一个接口(ICanvasRaycastFilter)，这个接口就是今天这个功能的重点。通过源码能清楚看到，如果没有这个额外的检查，点击检测的结果会沿用之前的结果(点击位置是否在RectTransfrom范围内)。</p><h1 id="简易UI多边形点击范围"><a href="#简易UI多边形点击范围" class="headerlink" title="简易UI多边形点击范围"></a>简易UI多边形点击范围</h1><p>交互同学想要的自定义点击范围，其实可以简单的认为是要规划一个简单多边形。<br>为了描述这个多边形，我决定以顺时针记录描述这个多边形的点(便于gizmo绘制也方便做点击检测)。</p><p>判断点击位置是否在自定义的多边形内，就用比较简单的射线法来判断。<br>射线法：</p><ul><li>从需要检测的点引出一条射线</li><li>计算射线和多边形的交点数量</li><li>交点数如果是奇数，说明点在多边形内；如果是偶数，则点不在多边形内</li></ul><p>当然这个做法会遇到一些需要处理的边界状况(射线刚好与若干条边重合或者点就在多边形的点上)。</p><p>于是实际检测的步骤就是对每条边都先检查特殊情况，不符合特殊情况的时候再做常规的涉嫌检查。<br>在检测代码中，我每次取到多边形的点都会根据实际情况排上，下两个点。原因也很简单，检测是否相交用的是向量的叉乘只能判断是否会相交，但是不能明确相交的位置。<br>这个时候我还需要判断一下这个理论交点是否存在，因为检测边的点已经明确了上下，再根据向量的叉乘就可以明确对于检测边(从下往上方向)，需要检测的点在左侧(理论交点有效)还是右侧(理论交点无效)。</p><img src="/2025/08/24/20250824-ugui-polygon-button/20250824-pic001.png" class="" title="split"><img src="/2025/08/24/20250824-ugui-polygon-button/20250824-pic002.png" class="" title="split"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UnityEngine.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">RequireComponent(typeof(CanvasRenderer))</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">RaycastOnlyPolygonGraphic</span> : <span class="title">MaskableGraphic</span>, <span class="title">ICanvasRaycastFilter</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Use normalized value, must be clockwise :)</span></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> List&lt;Vector2&gt; m_innerPoints;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> IReadOnlyList&lt;Vector2&gt; PointList =&gt; m_innerPoints;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> PointCount =&gt; <span class="literal">null</span> == m_innerPoints ? <span class="number">0</span> : m_innerPoints.Count;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetMaterialDirty</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetVerticesDirty</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">IsRaycastLocationValid</span>(<span class="params">Vector2 screenPoint, Camera eventCamera</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// Point in rect</span></span><br><span class="line">            <span class="keyword">if</span> (RectTransformUtility.ScreenPointToLocalPointInRectangle(rectTransform, screenPoint, eventCamera, <span class="keyword">out</span> Vector2 local))</span><br><span class="line">            &#123;</span><br><span class="line">                Vector2 bottomLeft = GetLocalRectPosition(rectTransform, Vector2.zero);</span><br><span class="line">                Vector2 localDelta = <span class="keyword">new</span>(local.x - bottomLeft.x, local.y - bottomLeft.y);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">                Debug.DrawLine(rectTransform.TransformPoint(bottomLeft), rectTransform.TransformPoint(local), Color.red);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">                Rect rect = rectTransform.rect;</span><br><span class="line">                Vector2 normalizedLocalPoint = <span class="keyword">new</span>(localDelta.x / rect.width, localDelta.y / rect.height);</span><br><span class="line">                <span class="keyword">bool</span> result = RaycastCheckPointInPolygon(normalizedLocalPoint);</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// TODO let them choose where to create de new point</span></span><br><span class="line">        [<span class="meta">ContextMenu(nameof(CreateNewPoint))</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CreateNewPoint</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_innerPoints ??= <span class="keyword">new</span> List&lt;Vector2&gt;();</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> &gt; m_innerPoints.Count)</span><br><span class="line">            &#123;</span><br><span class="line">                m_innerPoints.Add(Vector2.zero);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> pointCount = m_innerPoints.Count;</span><br><span class="line">            Vector2 newPoint = m_innerPoints[pointCount - <span class="number">1</span>];</span><br><span class="line">            Vector2 tempDir = m_innerPoints[<span class="number">0</span>] - m_innerPoints[pointCount - <span class="number">1</span>];</span><br><span class="line">            newPoint += <span class="number">0.5f</span> * tempDir;</span><br><span class="line">            m_innerPoints.Add(newPoint);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Vector2 <span class="title">GetPoint</span>(<span class="params"><span class="keyword">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == m_innerPoints)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> Vector2.zero;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> m_innerPoints[index];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetPoint</span>(<span class="params"><span class="keyword">int</span> index, Vector2 point</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> &gt; index || m_innerPoints.Count &lt;= index)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">$"Index <span class="subst">&#123;index&#125;</span> is out of range for points list."</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            m_innerPoints[index] = point;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnPopulateMesh</span>(<span class="params">VertexHelper vh</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            vh.Clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Bottom left as (0,0)</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="target"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="normalizedRectPosition"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">RectTransform target, Vector2 normalizedRectPosition</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 result = Vector2.zero;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Vector2 targetPivot = target.pivot;</span><br><span class="line"></span><br><span class="line">            Vector2 pivotOffset = Vector2.one * <span class="number">0.5f</span> - targetPivot;</span><br><span class="line">            pivotOffset.x *= targetSize.x;</span><br><span class="line">            pivotOffset.y *= targetSize.y;</span><br><span class="line"></span><br><span class="line">            result += pivotOffset;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// start from bottom left</span></span><br><span class="line">            result.x -= targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">            result.y -= targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">            result.x += normalizedRectPosition.x * targetSize.x;</span><br><span class="line">            result.y += normalizedRectPosition.y * targetSize.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">RaycastCheckPointInPolygon</span>(<span class="params">Vector2 normalizedPoint</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> pointCount = m_innerPoints.Count;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">3</span> &gt; pointCount)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">3</span> == pointCount)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> PointInTriangle</span><br><span class="line">                (</span><br><span class="line">                    normalizedPoint,</span><br><span class="line">                    m_innerPoints[<span class="number">0</span>],</span><br><span class="line">                    m_innerPoints[<span class="number">1</span>],</span><br><span class="line">                    m_innerPoints[<span class="number">2</span>]</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> intersectionCount = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = pointCount; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Vector2 upPoint = m_innerPoints[i];</span><br><span class="line">                Vector2 downPoint = m_innerPoints[(i + <span class="number">1</span>) % length];</span><br><span class="line">                <span class="keyword">if</span> (upPoint.y &lt; downPoint.y)</span><br><span class="line">                &#123;</span><br><span class="line">                    (upPoint, downPoint) = (downPoint, upPoint);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Right edge-point</span></span><br><span class="line">                Vector2 edge = <span class="keyword">new</span>(<span class="number">1f</span>, normalizedPoint.y);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// First check</span></span><br><span class="line">                <span class="keyword">if</span> (Mathf.Max(upPoint.x, downPoint.x) &lt; normalizedPoint.x ||</span><br><span class="line">                    upPoint.y &lt; normalizedPoint.y ||</span><br><span class="line">                    downPoint.y &gt; normalizedPoint.y)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">continue</span>; <span class="comment">// Wont collide with this segment</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Vector2 p2up = upPoint - normalizedPoint;</span><br><span class="line">                Vector2 down2up = upPoint - downPoint;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Point is the same as upPoint or downPoint or the point is on the segment or point is</span></span><br><span class="line">                <span class="keyword">if</span> ((Mathf.Approximately(upPoint.x, normalizedPoint.x) &amp;&amp; Mathf.Approximately(upPoint.y, normalizedPoint.y)) ||</span><br><span class="line">                    (Mathf.Approximately(downPoint.x, normalizedPoint.x) &amp;&amp; Mathf.Approximately(downPoint.y, normalizedPoint.y)) ||</span><br><span class="line">                    <span class="number">0</span> == Vector3.Cross(p2up, down2up).z)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Vector2 p2edge = edge - normalizedPoint;</span><br><span class="line">                Vector2 p2down = downPoint - normalizedPoint;</span><br><span class="line"></span><br><span class="line">                Vector3 cross1 = Vector3.Cross(p2up, p2edge);</span><br><span class="line">                Vector3 cross2 = Vector3.Cross(p2down, p2edge);</span><br><span class="line"></span><br><span class="line">                Vector2 edge2p = normalizedPoint - edge;</span><br><span class="line">                Vector2 edge2up = upPoint - edge;</span><br><span class="line">                Vector2 edge2down = downPoint - edge;</span><br><span class="line"></span><br><span class="line">                Vector3 cross3 = Vector3.Cross(edge2up, edge2p);</span><br><span class="line">                Vector3 cross4 = Vector3.Cross(edge2down, edge2p);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Lines are intersecting</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &gt;= cross1.z * cross2.z &amp;&amp;</span><br><span class="line">                    <span class="number">0</span> &gt;= cross3.z * cross4.z &amp;&amp;</span><br><span class="line">                    <span class="number">0</span> &lt; Vector3.Cross(p2down, p2up).z) <span class="comment">// Check if point is at the left side of current segment</span></span><br><span class="line">                &#123;</span><br><span class="line">                    intersectionCount++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> intersectionCount % <span class="number">2</span> == <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">PointInTriangle</span>(<span class="params">Vector2 p, Vector2 a, Vector2 b, Vector2 c</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 p2a = a - p;</span><br><span class="line">            Vector3 p2b = b - p;</span><br><span class="line">            Vector3 p2c = c - p;</span><br><span class="line"></span><br><span class="line">            Vector3 cross1 = Vector3.Cross(p2a, p2b);</span><br><span class="line">            Vector3 cross2 = Vector3.Cross(p2b, p2c);</span><br><span class="line">            Vector3 cross3 = Vector3.Cross(p2c, p2a);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> dot1 = Vector3.Dot(cross1, cross2);</span><br><span class="line">            <span class="keyword">float</span> dot2 = Vector3.Dot(cross2, cross3);</span><br><span class="line">            <span class="keyword">float</span> dot3 = Vector3.Dot(cross3, cross1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dot1 &gt;= <span class="number">0</span> &amp;&amp;</span><br><span class="line">                   dot2 &gt;= <span class="number">0</span> &amp;&amp;</span><br><span class="line">                   dot3 &gt;= <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一些编辑器的绘制，凑合用的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">CanEditMultipleObjects</span>]</span><br><span class="line">[<span class="meta">CustomEditor(typeof(RaycastOnlyPolygonGraphic), true)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RaycastOnlyIrregularGraphicEditor</span> : <span class="title">Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> RaycastOnlyPolygonGraphic m_target;</span><br><span class="line">    <span class="keyword">private</span> SerializedProperty m_pointsProperty;</span><br><span class="line">    <span class="keyword">private</span> ReorderableList m_pointList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> m_normalized;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_target = target <span class="keyword">as</span> RaycastOnlyPolygonGraphic;</span><br><span class="line">        m_pointsProperty = serializedObject.FindProperty(<span class="string">"m_innerPoints"</span>);</span><br><span class="line"></span><br><span class="line">        m_normalized = <span class="literal">true</span>;</span><br><span class="line">        m_pointList = CreatePointList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_target = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnInspectorGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// TODO draw only raycast target field and readonly points, triangles</span></span><br><span class="line">        <span class="keyword">base</span>.OnInspectorGUI();</span><br><span class="line"></span><br><span class="line">        serializedObject.Update();</span><br><span class="line">        EditorGUILayout.Space();</span><br><span class="line">        m_pointList.DoLayoutList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Create New Point"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            m_target.CreateNewPoint();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Create Convex Hull"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            m_target.CreateConvexHullFromPoints();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        serializedObject.ApplyModifiedProperties();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ReorderableList <span class="title">CreatePointList</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ReorderableList reorderableList = <span class="keyword">new</span>(serializedObject, m_pointsProperty, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">        reorderableList.drawElementCallback = (rect, index, isActive, isFocused) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">float</span> spacing = <span class="number">2</span>, fieldWidth = <span class="number">10</span>;</span><br><span class="line">            rect.y += spacing; rect.height = EditorGUIUtility.singleLineHeight;</span><br><span class="line">            SerializedProperty pointProp = m_pointsProperty.GetArrayElementAtIndex(index);</span><br><span class="line">            Vector2 pointValue = pointProp.vector2Value;</span><br><span class="line">            rect.width = (rect.width - spacing) / <span class="number">2</span>;</span><br><span class="line">            EditorGUIUtility.labelWidth = fieldWidth;</span><br><span class="line">            OnNormalizeFloatField(rect, <span class="string">"X"</span>, <span class="keyword">ref</span> pointValue.x, <span class="number">0</span>);</span><br><span class="line">            rect.x += rect.width + spacing;</span><br><span class="line">            OnNormalizeFloatField(rect, <span class="string">"Y"</span>, <span class="keyword">ref</span> pointValue.y, <span class="number">1</span>);</span><br><span class="line">            EditorGUIUtility.labelWidth = <span class="number">0</span>;</span><br><span class="line">            pointProp.vector2Value = pointValue;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        reorderableList.onAddCallback = list =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            ReorderableList.defaultBehaviours.DoAddButton(list);</span><br><span class="line">            <span class="keyword">if</span> (m_pointsProperty.arraySize &lt;= <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            SerializedProperty startPointProp = m_pointsProperty.GetArrayElementAtIndex(<span class="number">0</span>);</span><br><span class="line">            SerializedProperty newPointProp = m_pointsProperty.GetArrayElementAtIndex(m_pointsProperty.arraySize - <span class="number">1</span>);</span><br><span class="line">            newPointProp.vector2Value = (newPointProp.vector2Value + startPointProp.vector2Value) / <span class="number">2</span>;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        reorderableList.onRemoveCallback = list =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_pointsProperty.arraySize &lt;= <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ReorderableList.defaultBehaviours.DoRemoveButton(list);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        reorderableList.drawHeaderCallback = rect =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">int</span> buttonWidth = <span class="number">75</span>;</span><br><span class="line">            rect.width -= buttonWidth;</span><br><span class="line">            EditorGUI.LabelField(rect, <span class="string">"Points"</span>);</span><br><span class="line">            rect.x += rect.width;</span><br><span class="line">            rect.width = buttonWidth;</span><br><span class="line">            m_normalized = GUI.Toggle(rect, m_normalized, <span class="string">"Normalize"</span>, EditorStyles.miniButton);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> reorderableList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnNormalizeFloatField</span>(<span class="params">Rect rect, <span class="keyword">string</span> label, <span class="keyword">ref</span> <span class="keyword">float</span> <span class="keyword">value</span>, <span class="keyword">int</span> axis</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_normalized)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">value</span> = Mathf.Clamp01(EditorGUI.FloatField(rect, label, <span class="keyword">value</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Vector2 size = ((target <span class="keyword">as</span> RaycastOnlyPolygonGraphic).transform <span class="keyword">as</span> RectTransform).rect.size;</span><br><span class="line">            <span class="keyword">value</span> = Mathf.Clamp01(EditorGUI.FloatField(rect, label, <span class="keyword">value</span> * size[axis]) / size[axis]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnSceneGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_target == <span class="literal">null</span> || !m_target.enabled)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        DrawPointHandles();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawPointHandles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Color beforeColor = Handles.color;</span><br><span class="line">        Matrix4x4 beforeMatrix = Handles.matrix;</span><br><span class="line">        RectTransform rectTransform = m_target.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line"></span><br><span class="line">        Handles.color = Color.blue;</span><br><span class="line">        Handles.matrix = m_target.transform.localToWorldMatrix;</span><br><span class="line"></span><br><span class="line">        Vector3 moveHandle = Vector3.zero;</span><br><span class="line">        Vector3 moveSnap = Vector3.one * <span class="number">0.5f</span>;</span><br><span class="line">        <span class="keyword">float</span> moveSize = HandleUtility.GetHandleSize(m_target.transform.position) * <span class="number">0.1f</span>;</span><br><span class="line"></span><br><span class="line">        EditorGUI.BeginChangeCheck();</span><br><span class="line">        <span class="keyword">int</span> pointCount = m_target.PointCount;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pointCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            moveHandle = (m_target.GetPoint(i) - rectTransform.pivot) * rectTransform.rect.size;</span><br><span class="line">            moveHandle = Handles.FreeMoveHandle(moveHandle, moveSize, moveSnap, Handles.CircleHandleCap);</span><br><span class="line">            m_target.SetPoint(i, Clamp01(moveHandle / rectTransform.rect.size + rectTransform.pivot));</span><br><span class="line">            Handles.Label(moveHandle, <span class="string">$"<span class="subst">&#123;i&#125;</span>"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (EditorGUI.EndChangeCheck())</span><br><span class="line">        &#123;</span><br><span class="line">            EditorUtility.SetDirty(m_target);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Handles.color = beforeColor;</span><br><span class="line">        Handles.matrix = beforeMatrix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vector2 <span class="title">Clamp01</span>(<span class="params">Vector2 vector</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        vector.x = Mathf.Clamp01(vector.x);</span><br><span class="line">        vector.y = Mathf.Clamp01(vector.y);</span><br><span class="line">        <span class="keyword">return</span> vector;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除开射线法，还可以用回转法：</p><ul><li>检测点与多边形的每一个点连线</li><li>算出每两个相邻点之间的夹角旋转角度</li><li>角度总和为0时点在多边形外,和为360则点在多边形内</li></ul><p>没有选择这个方法是因为该方法设计开方运算，而这个检测需要每一帧跑，感觉上用射线法的消耗会少一些。</p><h1 id="根据点集生成简单多边形"><a href="#根据点集生成简单多边形" class="headerlink" title="根据点集生成简单多边形"></a>根据点集生成简单多边形</h1><p>为了方便交互同学编辑点击区域，我加了一个简单的凸多边形生成(并保证缓存下来的点是按照顺时针排布的)。<br>这样交互同学就无需花时间去手动排序点集，编辑耗时更短，也方便直接从大改的形状进行进一步修改。<br>凸多边形生成的算法也是使用最简单的 Gift Wrapping 算法，网上一搜就有思路。因为这项操作是编辑器时进行，所以我没有在意性能。</p><p>算法流程大概就是这样的:</p><ul><li>遍历所有点，找到极左点</li><li>以极左点开始从剩下的点中，找对于自己来说，角度最大的在顺时针方向的凸点</li><li>再以找到的凸点作为起始寻找下一个凸点</li><li>最后直到下一个凸点是最开始找到的极左点时，退出循环</li><li>得到顺时针排布的凸包点集</li></ul><img src="/2025/08/24/20250824-ugui-polygon-button/20250824-pic003.gif" class="" title="split"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Vector2&gt; <span class="title">GenerateConvexHull</span>(<span class="params">IReadOnlyList&lt;Vector2&gt; points</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">    List&lt;Vector2&gt; result = <span class="keyword">new</span>();</span><br><span class="line">    <span class="comment">// Find left most point</span></span><br><span class="line">    <span class="keyword">int</span> leftMostIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, length = points.Count; i &lt; length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (points[leftMostIndex].x &gt; points[i].x)</span><br><span class="line">        &#123;</span><br><span class="line">             leftMostIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     result.Add(points[leftMostIndex]);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Start from leftmost point, then find rest points</span></span><br><span class="line">     List&lt;Vector2&gt; collinearPoints = <span class="keyword">new</span>();</span><br><span class="line">     Vector2 current = points[leftMostIndex];</span><br><span class="line">     <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         Vector2 nextTarget = points[<span class="number">0</span>];</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, length = points.Count; i &lt; length; i++)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span> (points[i] == current)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Vector2 tempPoint = points[i];</span><br><span class="line">            <span class="keyword">float</span> x1, x2, y1, y2;</span><br><span class="line">            x1 = current.x - nextTarget.x;</span><br><span class="line">            x2 = current.x - tempPoint.x;</span><br><span class="line"></span><br><span class="line">            y1 = current.y - nextTarget.y;</span><br><span class="line">            y2 = current.y - tempPoint.y;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Magnitude of the cross product</span></span><br><span class="line">            <span class="keyword">float</span> val = (y2 * x1) - (y1 * x2);</span><br><span class="line">            <span class="keyword">if</span> (val &gt; <span class="number">0</span>) <span class="comment">// Find a farther point that makes a convex angle</span></span><br><span class="line">            &#123;</span><br><span class="line">                nextTarget = tempPoint;</span><br><span class="line">                collinearPoints = <span class="keyword">new</span> List&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (val == <span class="number">0</span>) <span class="comment">// Handle collinear points(with current target)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((current - nextTarget).sqrMagnitude &lt; (current - tempPoint).sqrMagnitude)</span><br><span class="line">                &#123;</span><br><span class="line">                    collinearPoints.Add(nextTarget); <span class="comment">// Add and move to farther collinear point</span></span><br><span class="line">                    nextTarget = tempPoint;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    collinearPoints.Add(tempPoint); <span class="comment">// Add a closer collinear point</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Ah this point would make prev-target point into a concave point, do not add it :(</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = collinearPoints.Count; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Add(collinearPoints[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (nextTarget == points[leftMostIndex])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result.Add(nextTarget);</span><br><span class="line">        current = nextTarget;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近几个月都是猛猛加班和服务器兄弟联调做系统。工作确实重复又无趣。最近周末不用强制加班了，于是用省下时间把以前UI那边的一个人认为还算有点意思的小需求做了。&lt;br&gt;今天的主题是 UGUI不规则形按钮！&lt;/p&gt;
&lt;h1 id=&quot;UGUI射线点击流程&quot;&gt;&lt;a href=&quot;#UG
      
    
    </summary>
    
    
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>TextMeshPro图标笔记+简易图集工具</title>
    <link href="http://yoursite.com/2025/06/22/20250622-tmpspriteassetpacker/"/>
    <id>http://yoursite.com/2025/06/22/20250622-tmpspriteassetpacker/</id>
    <published>2025-06-22T10:39:35.000Z</published>
    <updated>2025-06-29T08:26:29.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>交互希望能在界面上比较方便的显示 <code>🍌*5</code> 这样的效果。好在当前的项目使用TMP，只需要把图标打成一个资源赋给TMP文本组件，就可以在文本中显示图标。</p><p>为了让交互策划能够自行调整图标使用的范围以及质量，我随手搓了一个小配置来做到这个事情。<br>当前我们的美术资源还没有做规范整理，所以项目中存在着尺寸不一致的图标，但对于文本上使用的图标来说，尺寸大概是固定的，所以图集里的图标尺寸也应该要固定下来。<br>最最开始的时候想的是直接写一个双线性采样线跑跑，做个可以用的程度，但是不是因为我对需求的描述不太好，问Copilot并没有给出我要的做法，我又懒得自己写(其实是加班加傻了，用<code>Texture2D.GetPixelBilinear()</code>可以)，于是又开谷歌搜一下，很快就在论坛里找到一个比较有趣的做法。</p><p>这个思路是这样的:<br>1 以我们缩放的目标尺寸创建RT，作为渲染目标<br>2 把需要缩放的贴图用这个RT渲染一次<br>3 新的贴图直接从渲染结果中取色<br>4 非常方便，而且渲染时可以指定贴图filter模式，便于得到质量OK的图图</p><p>这些其实都不难，东西交手给交互那边以后才发现一个真正的难题，那就是要教会他们如何去调整这个图标在文本里的对其方式和尺寸。<br>这部分工作以前是导师做的，没想到现在也轮到我了，快速查阅资料后，算是大概明白了。</p><h1 id="图标在文本中的显示与对其"><a href="#图标在文本中的显示与对其" class="headerlink" title="图标在文本中的显示与对其"></a>图标在文本中的显示与对其</h1><p>我比较偷懒，没有找到官中的解说，所以用自己的话来大概描述一下，可能会有错，但是能够大概讲明如何调整(这部分笔记我会同步到项目的笔记中给交互同学看)。</p><h2 id="基准线"><a href="#基准线" class="headerlink" title="基准线"></a>基准线</h2><p>任何的字形，图标，对于TMP来说，都是一小块网格。所以他们的摆放的方式都是一致的。<br>TMP使用文本“基准线(baseline)”来作为字形(也包括图标，后面就不多区分了)摆放位置的参照。基准线可以认为是个桌面，大多数东西都应该“放在”桌面上。<br>当然，实际上并不是所有的字形都会很刚好的底部紧贴基准线。</p><img src="/2025/06/22/20250622-tmpspriteassetpacker/20250622-pic001.png" class="" title="split"><p>以这张图为例，能很明显看到文本以及图标下方有一条线，这个就是基准线。除了基准线以外，还有上升线(ascentline)和下降线(descentline)。<br>可以粗略的认为，上升线可以粗略认为是字形可以达到的最高点，下降线是可以达到的最低点。</p><h2 id="FaceInfo"><a href="#FaceInfo" class="headerlink" title="FaceInfo"></a>FaceInfo</h2><img src="/2025/06/22/20250622-tmpspriteassetpacker/20250622-pic002.png" class="" title="split"><p>FaceInfo 的作用就是告知一些用于计算字形的度量值。<br>其中比较重要的属性：</p><ul><li>PointSize 告知用于采样图标的尺寸(只有这个数值有效时，其它属性值才有效)</li><li>BaseLine 用于修改图标实际的baseline</li></ul><p>通过以下的代码可以知道，当pointSize未被正确设置时，TMP组件会采用当前文本组件字体配置里的PointSize来计算图标显示的大小。<br>为了图标显示的质量以及方便后续的调整，我强烈建议填写FaceInfo。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (m_currentSpriteAsset.m_FaceInfo.pointSize &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">float</span> spriteScale = m_currentFontSize / m_currentSpriteAsset.m_FaceInfo.pointSize * m_currentSpriteAsset.m_FaceInfo.scale * (m_isOrthographic ? <span class="number">1</span> : <span class="number">0.1f</span>);</span><br><span class="line">    currentElementScale = sprite.m_Scale * sprite.m_Glyph.scale * spriteScale;</span><br><span class="line">    elementAscentLine = m_currentSpriteAsset.m_FaceInfo.ascentLine;</span><br><span class="line">    baselineOffset = m_currentSpriteAsset.m_FaceInfo.baseline * fontScale * m_fontScaleMultiplier * m_currentSpriteAsset.m_FaceInfo.scale;</span><br><span class="line">    elementDescentLine = m_currentSpriteAsset.m_FaceInfo.descentLine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">float</span> spriteScale = m_currentFontSize / m_currentFontAsset.m_FaceInfo.pointSize * m_currentFontAsset.m_FaceInfo.scale * (m_isOrthographic ? <span class="number">1</span> : <span class="number">0.1f</span>);</span><br><span class="line">    currentElementScale = m_currentFontAsset.m_FaceInfo.ascentLine / sprite.m_Glyph.metrics.height * sprite.m_Scale * sprite.m_Glyph.scale * spriteScale;</span><br><span class="line">    <span class="keyword">float</span> scaleDelta = spriteScale / currentElementScale;</span><br><span class="line">    elementAscentLine = m_currentFontAsset.m_FaceInfo.ascentLine * scaleDelta;</span><br><span class="line">    baselineOffset = m_currentFontAsset.m_FaceInfo.baseline * fontScale * m_fontScaleMultiplier * m_currentFontAsset.m_FaceInfo.scale;</span><br><span class="line">    elementDescentLine = m_currentFontAsset.m_FaceInfo.descentLine * scaleDelta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字形属性"><a href="#字形属性" class="headerlink" title="字形属性"></a>字形属性</h2><img src="/2025/06/22/20250622-tmpspriteassetpacker/20250622-pic003.png" class="" title="split"><p>字形的本质也可以粗略地认为就是一张图(贴图上的某一块)。<br>所以其属性大概包括以下地信息：</p><ul><li>如何在自行贴图中获取这一块图</li><li>字形的布局度量，关系着显示的尺寸(并不是贴图中那一块的大小！！！)</li><li>额外方位参数(BX,BY,ADV)，关系着字形在文本中排布时的尺寸和空间</li></ul><h2 id="图标的摆放"><a href="#图标的摆放" class="headerlink" title="图标的摆放"></a>图标的摆放</h2><img src="/2025/06/22/20250622-tmpspriteassetpacker/20250622-pic004.png" class="" title="split"><p>最后就是实际图标地摆放了，还要了解的一个概念就是枢轴点(pivot)，这个是图标摆放的关键。<br>枢轴位置定义了图标的原点。字形显示时，在垂直为位置会把枢轴稳放在基准线的高度上，在水平位置上则是放在 前一个 字形定义的尾部。<br>我强烈建议把图标的枢轴点设置为左下角，这是为了方便调整。</p><p>然后这里就发生了我们最终会遇到的问题了。图标往往看起来没有居中。<br>这个时候，结合上面的信息我们知道，图标拜访时会把轴枢点放在基准线上，把轴枢点设为左下角，图标的底部就会在基准线上。<br>为了让图标居中，我们可以在FaceInfo中直接调整该图标集的基准线偏移，又或是在字形表底部的全局偏移输入框中调整Y偏移让其直接把偏移值应用到每一个图标字形上。</p><h1 id="图集生成代码"><a href="#图集生成代码" class="headerlink" title="图集生成代码"></a>图集生成代码</h1><p>最后就是代码了，不太完整，凑合能用吧</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">UI.Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span> A shortcut to creatre TMP sprite asset <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TextMeshProIconPacker</span> : <span class="title">ScriptableObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Result Config"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField,</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> _textureOutPutName = <span class="string">"TempIconAtlas"</span>;</span><br><span class="line">        [<span class="meta">SerializeField,</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> m_spawnedAtlasPath;</span><br><span class="line">        [<span class="meta">SerializeField,</span>]</span><br><span class="line">        <span class="keyword">private</span> TMP_SpriteAsset m_target;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Sprite Pack"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Sprite[] _spriteToPack;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _maxSize = <span class="number">512</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _iconSize = <span class="number">64</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _padding = <span class="number">2</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _iconScale = <span class="number">1.2f</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> SpriteRect[] m_spriteRects;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">MenuItem(<span class="meta-string">"Assets/UI/CreateTMPSpriteConfigTemplate"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InternalCreateTestAsset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TextMeshProIconPacker asset = ScriptableObject.CreateInstance&lt;TextMeshProIconPacker&gt;();</span><br><span class="line">            <span class="comment">// TODO Change this path</span></span><br><span class="line">            <span class="keyword">string</span> assetPath = <span class="string">"Assets/TMPSpriteConfig/TMPSpriteConfigTemplate.asset"</span>;</span><br><span class="line">            UnityEditor.AssetDatabase.CreateAsset(asset, assetPath);</span><br><span class="line">            UnityEditor.AssetDatabase.SaveAssets();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"Create Sprite Atlas"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PackSpritesForTMP_EditorOnly</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == _spriteToPack || <span class="number">0</span> == _spriteToPack.Length)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// grab all sprite as textures</span></span><br><span class="line">            Texture2D[] sourceTextures = GatherTextures();</span><br><span class="line">            FixImportSettings(sourceTextures, <span class="literal">true</span>);</span><br><span class="line">            Texture2D[] texture2Pack = GetAdjustedT2D(sourceTextures);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// create sprite rects for atlas</span></span><br><span class="line">            Texture2D texture = <span class="keyword">new</span> Texture2D(_maxSize, _maxSize, TextureFormat.RGBA32, <span class="literal">false</span>);</span><br><span class="line">            Rect[] rects = texture.PackTextures(texture2Pack, _padding, _maxSize);</span><br><span class="line">            m_spriteRects = <span class="keyword">new</span> SpriteRect[rects.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rects.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                m_spriteRects[i] = <span class="keyword">new</span> SpriteRect()</span><br><span class="line">                &#123;</span><br><span class="line">                    name = texture2Pack[i].name,</span><br><span class="line">                    spriteID = GUID.Generate(),</span><br><span class="line">                    rect = ConvertToPixelRect(texture.width, texture.height, rects[i]),</span><br><span class="line">                    alignment = SpriteAlignment.BottomLeft, <span class="comment">// it's fine to put it here, cuz we gonna manulla adjust it later :D</span></span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            EditorUtility.SetDirty(<span class="keyword">this</span>);</span><br><span class="line">            AssetDatabase.SaveAssetIfDirty(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> path = AssetDatabase.GetAssetPath(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">string</span> folderPath = Path.GetDirectoryName(path);</span><br><span class="line">            <span class="keyword">string</span> pngPath = <span class="string">$"<span class="subst">&#123;folderPath&#125;</span>/<span class="subst">&#123;_textureOutPutName&#125;</span>Atlas.png"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// save sprite atlas</span></span><br><span class="line">            Texture2D decopmpresseTex = DeCompress(texture);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = decopmpresseTex.EncodeToPNG();</span><br><span class="line">            File.WriteAllBytes(pngPath, bytes);</span><br><span class="line">            <span class="keyword">int</span> temp = name.Length + <span class="number">6</span>;</span><br><span class="line">            m_spawnedAtlasPath = path.Substring(<span class="number">0</span>, path.Length - temp) + <span class="string">$"<span class="subst">&#123;_textureOutPutName&#125;</span>Atlas.png"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// revert sprite readable</span></span><br><span class="line">            FixImportSettings(sourceTextures, <span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = texture2Pack.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Texture.DestroyImmediate(texture2Pack[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            texture2Pack = <span class="literal">null</span>;</span><br><span class="line">            AssetDatabase.Refresh();</span><br><span class="line"></span><br><span class="line">            TextureImporter textureImporter = AssetImporter.GetAtPath(pngPath) <span class="keyword">as</span> TextureImporter;</span><br><span class="line">            textureImporter.textureType = TextureImporterType.Sprite;</span><br><span class="line">            textureImporter.spriteImportMode = SpriteImportMode.Multiple;</span><br><span class="line">            textureImporter.SaveAndReimport();</span><br><span class="line"></span><br><span class="line">            textureImporter = AssetImporter.GetAtPath(pngPath) <span class="keyword">as</span> TextureImporter;</span><br><span class="line">            SpriteDataProviderFactories factory = <span class="keyword">new</span>();</span><br><span class="line">            factory.Init();</span><br><span class="line">            ISpriteEditorDataProvider dataProvider = factory.GetSpriteEditorDataProviderFromObject(textureImporter);</span><br><span class="line">            dataProvider.InitSpriteEditorDataProvider();</span><br><span class="line">            dataProvider.SetSpriteRects(m_spriteRects);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Note: This section is only for Unity 2021.2 and newer</span></span><br><span class="line">            <span class="comment">// Register the new Sprite Rect's name and GUID with the ISpriteNameFileIdDataProvider</span></span><br><span class="line">            ISpriteNameFileIdDataProvider spriteNameFileIdDataProvider = dataProvider.GetDataProvider&lt;ISpriteNameFileIdDataProvider&gt;();</span><br><span class="line">            List&lt;SpriteNameFileIdPair&gt; nameFileIdPairs = spriteNameFileIdDataProvider.GetNameFileIdPairs().ToList();</span><br><span class="line">            nameFileIdPairs.AddRange(m_spriteRects.Select(spriteRect =&gt; <span class="keyword">new</span> SpriteNameFileIdPair(spriteRect.name, spriteRect.spriteID)));</span><br><span class="line">            spriteNameFileIdDataProvider.SetNameFileIdPairs(nameFileIdPairs);</span><br><span class="line"></span><br><span class="line">            dataProvider.Apply();</span><br><span class="line">            textureImporter.SaveAndReimport();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"Generate asset by sprite atlas"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ApplyAtlasToAsset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = AssetDatabase.GetAssetPath(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">string</span> folderPath = Path.GetDirectoryName(path);</span><br><span class="line">            <span class="keyword">string</span> pngPath = <span class="string">$"<span class="subst">&#123;folderPath&#125;</span>/<span class="subst">&#123;_textureOutPutName&#125;</span>Atlas.png"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == m_target)</span><br><span class="line">            &#123;</span><br><span class="line">                m_target = ScriptableObject.CreateInstance&lt;TMP_SpriteAsset&gt;();</span><br><span class="line">                m_target.name = _textureOutPutName;</span><br><span class="line">                m_target.spriteInfoList = <span class="keyword">new</span>();</span><br><span class="line">                AssetDatabase.CreateAsset(m_target, <span class="string">$"<span class="subst">&#123;folderPath&#125;</span>/<span class="subst">&#123;_textureOutPutName&#125;</span>.asset"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// seens like we dun need to destroy it</span></span><br><span class="line">                <span class="comment">//Material matToDestroy = m_target.material;</span></span><br><span class="line">                <span class="comment">//m_target.material = null;</span></span><br><span class="line">                <span class="comment">//Material.DestroyImmediate(matToDestroy);</span></span><br><span class="line">            &#125;</span><br><span class="line">            m_target.spriteSheet = AssetDatabase.LoadAssetAtPath&lt;Texture2D&gt;(pngPath);</span><br><span class="line">            AddDefaultMaterial(m_target);</span><br><span class="line"></span><br><span class="line">            Type hackType = <span class="keyword">typeof</span>(TMP_SpriteAssetMenu);</span><br><span class="line">            MethodInfo[] hackMethods = hackType.GetMethods(BindingFlags.NonPublic | BindingFlags.Static);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = hackMethods.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                MethodInfo hackMethod = hackMethods[i];</span><br><span class="line">                ParameterInfo[] paramInfos = hackMethod.GetParameters();</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">1</span> == paramInfos.Length &amp;&amp; <span class="keyword">typeof</span>(TMP_SpriteAsset) == paramInfos[<span class="number">0</span>].ParameterType)</span><br><span class="line">                &#123;</span><br><span class="line">                    hackMethod.Invoke(<span class="literal">null</span>, <span class="keyword">new</span> <span class="keyword">object</span>[] &#123; m_target &#125;); <span class="comment">// actually this wont work, I have to manully press "Update info" on the TextMeshProSpriteAsset :D</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            List&lt;TMP_SpriteCharacter&gt; characters = m_target.spriteCharacterTable;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = characters.Count; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                TMP_SpriteCharacter character = characters[i];</span><br><span class="line">                character.scale = _iconScale;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            EditorUtility.SetDirty(m_target);</span><br><span class="line">            AssetDatabase.SaveAssetIfDirty(m_target);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"Clear result"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != m_target)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> taragetath = AssetDatabase.GetAssetPath(m_target);</span><br><span class="line">                AssetDatabase.DeleteAsset(taragetath);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(m_spawnedAtlasPath))</span><br><span class="line">            &#123;</span><br><span class="line">                AssetDatabase.DeleteAsset(m_spawnedAtlasPath);</span><br><span class="line">            &#125;</span><br><span class="line">            m_target = <span class="literal">null</span>;</span><br><span class="line">            m_spawnedAtlasPath = <span class="keyword">string</span>.Empty;</span><br><span class="line">            m_spriteRects = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Texture2D[] <span class="title">GatherTextures</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;Texture2D&gt; resultTexture = <span class="keyword">new</span> List&lt;Texture2D&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = _spriteToPack.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Sprite existSprite = _spriteToPack[i];</span><br><span class="line">                <span class="keyword">string</span> assetPath = AssetDatabase.GetAssetPath(existSprite);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(assetPath))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Texture2D loadedT2D = AssetDatabase.LoadAssetAtPath&lt;Texture2D&gt;(assetPath);</span><br><span class="line">                resultTexture.Add(loadedT2D);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> resultTexture.ToArray();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixImportSettings</span>(<span class="params">Texture2D[] textures, <span class="keyword">bool</span> readable</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = textures.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Texture2D texture = textures[i];</span><br><span class="line">                <span class="keyword">string</span> path = AssetDatabase.GetAssetPath(texture);</span><br><span class="line">                TextureImporter importer = AssetImporter.GetAtPath(path) <span class="keyword">as</span> TextureImporter;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (importer == <span class="literal">null</span>) <span class="keyword">continue</span>;</span><br><span class="line">                importer.isReadable = readable;</span><br><span class="line">                importer.SaveAndReimport();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Rect <span class="title">ConvertToPixelRect</span>(<span class="params"><span class="keyword">int</span> width, <span class="keyword">int</span> height, Rect uvRect</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> pixelLeft = uvRect.x * width;</span><br><span class="line">            <span class="keyword">float</span> pixelTop = uvRect.y * height;</span><br><span class="line">            <span class="keyword">float</span> pixelWidth = uvRect.width * width;</span><br><span class="line">            <span class="keyword">float</span> pixelHeight = uvRect.height * height;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Rect(pixelLeft, pixelTop, pixelWidth, pixelHeight);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Texture2D <span class="title">DeCompress</span>(<span class="params">Texture2D source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RenderTexture renderTex = RenderTexture.GetTemporary(</span><br><span class="line">                source.width,</span><br><span class="line">                source.height,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                RenderTextureFormat.Default,</span><br><span class="line">                RenderTextureReadWrite.Linear);</span><br><span class="line"></span><br><span class="line">            Graphics.Blit(source, renderTex);</span><br><span class="line">            RenderTexture previous = RenderTexture.active;</span><br><span class="line">            RenderTexture.active = renderTex;</span><br><span class="line">            Texture2D readableText = <span class="keyword">new</span> Texture2D(source.width, source.height);</span><br><span class="line">            readableText.ReadPixels(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, renderTex.width, renderTex.height), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            readableText.Apply();</span><br><span class="line">            RenderTexture.active = previous;</span><br><span class="line">            RenderTexture.ReleaseTemporary(renderTex);</span><br><span class="line">            <span class="keyword">return</span> readableText;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddDefaultMaterial</span>(<span class="params">TMP_SpriteAsset spriteAsset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Shader shader = Shader.Find(<span class="string">"TextMeshPro/Sprite"</span>);</span><br><span class="line">            Material material = <span class="keyword">new</span> Material(shader);</span><br><span class="line">            material.SetTexture(ShaderUtilities.ID_MainTex, spriteAsset.spriteSheet);</span><br><span class="line"></span><br><span class="line">            spriteAsset.material = material;</span><br><span class="line">            material.hideFlags = HideFlags.HideInHierarchy;</span><br><span class="line">            AssetDatabase.AddObjectToAsset(material, spriteAsset);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Texture2D[] <span class="title">GetAdjustedT2D</span>(<span class="params">Texture2D[] source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Texture2D[] result = <span class="keyword">new</span> Texture2D[source.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = source.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Texture2D after = GPUTextureScaler.GetScaledResult(source[i], _iconSize, _iconSize);</span><br><span class="line">                result[i] = after;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// from https://discussions.unity.com/t/how-to-resize-scale-down-texture-without-losing-quality/810223/14</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GPUTextureScaler</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Returns a scaled copy of given texture.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="tex"&gt;</span>Source texure to scale<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="width"&gt;</span>Destination texture width<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="height"&gt;</span>Destination texture height<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="mode"&gt;</span>Filtering mode<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Texture2D <span class="title">GetScaledResult</span>(<span class="params">Texture2D src, <span class="keyword">int</span> width, <span class="keyword">int</span> height, FilterMode mode = FilterMode.Trilinear</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rect texR = <span class="keyword">new</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">            DoGPUScale(src, width, height, mode);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Get rendered data back to a new texture</span></span><br><span class="line">            Texture2D result = <span class="keyword">new</span>(width, height, TextureFormat.ARGB32, <span class="literal">true</span>);</span><br><span class="line">            result.Reinitialize(width, height);</span><br><span class="line">            result.ReadPixels(texR, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">            result.name = src.name;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Scales the texture data of the given texture.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="tex"&gt;</span>Texure to scale<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="width"&gt;</span>New width<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="height"&gt;</span>New height<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="mode"&gt;</span>Filtering mode<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Scale</span>(<span class="params">Texture2D tex, <span class="keyword">int</span> width, <span class="keyword">int</span> height, FilterMode mode = FilterMode.Trilinear</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rect texR = <span class="keyword">new</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">            DoGPUScale(tex, width, height, mode);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Update new texture</span></span><br><span class="line">            tex.Reinitialize(width, height);</span><br><span class="line">            tex.ReadPixels(texR, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">            tex.Apply(<span class="literal">true</span>); <span class="comment">//Remove this if you hate us applying textures for you :)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Internal unility that renders the source texture into the RTT - the scaling method itself.</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoGPUScale</span>(<span class="params">Texture2D src, <span class="keyword">int</span> width, <span class="keyword">int</span> height, FilterMode fmode</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//We need the source texture in VRAM because we render with it</span></span><br><span class="line">            src.filterMode = fmode;</span><br><span class="line">            src.Apply(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Using RTT for best quality and performance. Thanks, Unity 5</span></span><br><span class="line">            RenderTexture rtt = <span class="keyword">new</span>(width, height, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Set the RTT in order to render to it</span></span><br><span class="line">            Graphics.SetRenderTarget(rtt);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Setup 2D matrix in range 0..1, so nobody needs to care about sized</span></span><br><span class="line">            GL.LoadPixelMatrix(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Then clear &amp; draw the texture to fill the entire RTT.</span></span><br><span class="line">            GL.Clear(<span class="literal">true</span>, <span class="literal">true</span>, <span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">            Graphics.DrawTexture(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), src);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>查了好一些资料，其实都没有完全看完，相信看完之后对字形会有更多的了解</p><p><a href="https://zhuanlan.zhihu.com/p/627054602" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/627054602</a><br><a href="https://discussions.unity.com/t/scaling-inline-sprites-using-rich-text-tags-causes-weird-alignment/752114/4" target="_blank" rel="noopener">https://discussions.unity.com/t/scaling-inline-sprites-using-rich-text-tags-causes-weird-alignment/752114/4</a><br><a href="https://discussions.unity.com/t/understanding-baseline-alignment-in-textmesh-pro/836821" target="_blank" rel="noopener">https://discussions.unity.com/t/understanding-baseline-alignment-in-textmesh-pro/836821</a><br><a href="https://discussions.unity.com/t/misaligned-emojis-sprites/688473" target="_blank" rel="noopener">https://discussions.unity.com/t/misaligned-emojis-sprites/688473</a><br><a href="https://www.youtube.com/watch?app=desktop&amp;v=hlatyQC-xIg&amp;t=5m" target="_blank" rel="noopener">https://www.youtube.com/watch?app=desktop&amp;v=hlatyQC-xIg&amp;t=5m</a><br><a href="https://menma.top/unity/2161.html" target="_blank" rel="noopener">https://menma.top/unity/2161.html</a><br><a href="https://docs.unity3d.com/Packages/com.unity.textmeshpro@3.2/manual/FontAssetsLineMetrics.html" target="_blank" rel="noopener">https://docs.unity3d.com/Packages/com.unity.textmeshpro@3.2/manual/FontAssetsLineMetrics.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;交互希望能在界面上比较方便的显示 &lt;code&gt;🍌*5&lt;/code&gt; 这样的效果。好在当前的项目使用TMP，只需要把图标打成一个资源赋给TM
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity资源链接</title>
    <link href="http://yoursite.com/2025/05/10/20250510-assetpath/"/>
    <id>http://yoursite.com/2025/05/10/20250510-assetpath/</id>
    <published>2025-05-10T03:11:11.000Z</published>
    <updated>2025-08-24T08:14:33.873Z</updated>
    
    <content type="html"><![CDATA[<p>在实际项目中，我们很多资源都是打到AB里了，这个情况下很多Prefab,Scriptable上想要配置一些资源只能填资源的路径。但是填路径真的很麻烦，万一资源发生位置变更就麻烦了。<br>在这个情况下想到的一个方案就是做一个 “资源链接” 对象，在面板上仍然绘制UnityObject，但是实际存储的是路径。</p><p>结合之前的项目里的需求大概看了下，具体的实现思路真的挺简单的，在编辑器时存放资源引用和资源的guid，资源构建时通过guid补充资源的实际路径。<br>这个思路下有两个痛点:<br>1 无法处理资源重命名时候会 偶尔 导致的guid变更情况<br>2 构建时的路径补充实现麻烦</p><p>第1个痛点其实是实现完成了才发现的，暂时还没想清楚怎么处理，因为一旦guid发生变更那其实这份资源的缓存可能已经无效了，找回会比较麻烦，除非监听更多的资源变更事件以及构建自己的资源数据库。</p><p>关于第2个痛点的路径补充，我有两种方法：<br>1 无论如何这个 资源链接 对象总需要一个宿主。这个宿主最终会是一个UnityObject或能继续在父级上找到一个UnityObject。那么只需要在宿主上实现一个<strong>资源构建前</strong>会调用的方法，在这个方法里完成路径的补充就好。<br>2 或者用我<a href="https://2c2c2c.github.io/2025/02/21/20250221-unity-findref-guid/" target="_blank" rel="noopener">之前的笔记</a>提到的，做文本的匹配再替换</p><p>在下面我会选择第2种方式来简单实现以下，实际工程中最好是先实现第1种比较好，因为有可能永远也不会遇到需要用到第2种方法解决的情形。</p><h4 id="资源链接对象"><a href="#资源链接对象" class="headerlink" title="资源链接对象"></a>资源链接对象</h4><p>首先是资源链接对象本身，做了一个泛型基类，对于目标的资源类型，需要新实现一个空子类而已，行为在基类已经都达成了。<br>这个泛型基类是为了之后的编辑器绘制而使用的妥协方案。</p><p>真机运行时只需要path，guid和资源缓存都是编辑器时才有的字段</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityObject = UnityEngine.Object;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line">public abstract class AssetPath&lt;T&gt; where T : UnityObject</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">implicit</span> <span class="keyword">operator</span> <span class="title">string</span>(<span class="params">AssetPath&lt;T&gt; p</span>)</span> =&gt; p.Pathlink;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">string</span> m_path;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">string</span> m_guid;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> UnityObject m_assetCache;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Pathlink</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR // in editor time, it is no need to save the actual path, just use guid to get the path</span></span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                m_path = AssetDatabase.GUIDToAssetPath(m_guid);</span><br><span class="line">                <span class="keyword">return</span> m_path;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">string</span> path = AssetDatabase.GUIDToAssetPath(m_guid);</span><br><span class="line">            <span class="keyword">return</span> path;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> // in build, just return path</span></span><br><span class="line">            <span class="keyword">return</span> m_path;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line">public class PrefabPath : AssetPath&lt;GameObject&gt; &#123; &#125;</span><br><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line">public class MaterialPath : AssetPath&lt;Material&gt; &#123; &#125;</span><br><span class="line">[<span class="meta">Serializable</span>]</span><br><span class="line">public class ScriptableObjectPath : AssetPath&lt;ScriptableObject&gt; &#123; &#125;</span><br></pre></td></tr></table></figure><h4 id="资源链接相关的编辑器绘制"><a href="#资源链接相关的编辑器绘制" class="headerlink" title="资源链接相关的编辑器绘制"></a>资源链接相关的编辑器绘制</h4><p>这边就没什么难度的，获取到序列化的字段然后画出来就好了！<br>刚才提到的泛型只是为了在下面绘制 ObjectField 时用来便捷获取资源类型的。</p><img src="/2025/05/10/20250510-assetpath/20250510-assetpath-pic001.png" class="" title="split"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">CustomPropertyDrawer(typeof(AssetPath&lt;&gt;), true)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AssetPathDrawer</span> : <span class="title">PropertyDrawer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">float</span> <span class="title">GetPropertyHeight</span>(<span class="params">SerializedProperty property, GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> baseHeight = <span class="keyword">base</span>.GetPropertyHeight(property, label);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3f</span> * baseHeight; <span class="comment">// we need 3 line to show stuff</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params">Rect position, SerializedProperty property, GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorGUI.BeginProperty(position, label, property);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Draw label</span></span><br><span class="line">        position = EditorGUI.PrefixLabel(position, GUIUtility.GetControlID(FocusType.Passive), label);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">float</span> elementHeight = <span class="keyword">base</span>.GetPropertyHeight(property, label);</span><br><span class="line">        SerializedProperty guidProperty = property.FindPropertyRelative(<span class="string">"m_guid"</span>);</span><br><span class="line">        SerializedProperty pathProperty = property.FindPropertyRelative(<span class="string">"m_path"</span>);</span><br><span class="line"></span><br><span class="line">        GUIStyle buttonStyle = <span class="keyword">new</span> GUIStyle(GUI.skin.button);</span><br><span class="line">        buttonStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">        Rect rect = <span class="keyword">new</span> Rect(position.x, position.y, position.width, elementHeight);</span><br><span class="line">        <span class="keyword">string</span> guidText = guidProperty.stringValue;</span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(rect, <span class="keyword">new</span> GUIContent(<span class="string">$"Guid: <span class="subst">&#123;guidText&#125;</span>"</span>), buttonStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            GUIUtility.systemCopyBuffer = guidText; <span class="comment">// copy to clipboard</span></span><br><span class="line">            Debug.Log(<span class="string">$"Copy guid text '<span class="subst">&#123;guidText&#125;</span>' to clipboard"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rect = <span class="keyword">new</span> Rect(position.x, position.y + elementHeight, position.width, elementHeight);</span><br><span class="line">        <span class="keyword">string</span> pathText = pathProperty.stringValue;</span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(rect, <span class="keyword">new</span> GUIContent(<span class="string">$"Path: <span class="subst">&#123;pathText&#125;</span>"</span>), buttonStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            GUIUtility.systemCopyBuffer = pathText; <span class="comment">// copy to clipboard</span></span><br><span class="line">            Debug.Log(<span class="string">$"Copy path text '<span class="subst">&#123;guidText&#125;</span>' to clipboard"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rect = <span class="keyword">new</span> Rect(position.x, position.y + elementHeight * <span class="number">2</span>, position.width, elementHeight);</span><br><span class="line">        SerializedProperty assetProperty = property.FindPropertyRelative(<span class="string">"m_assetCache"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != assetProperty)</span><br><span class="line">        &#123;</span><br><span class="line">            UnityObject assetValue = assetProperty.objectReferenceValue;</span><br><span class="line">            Type assetType;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == assetValue)</span><br><span class="line">            &#123;</span><br><span class="line">                Type fieldType = fieldInfo.FieldType;</span><br><span class="line">                Type[] genericTypes = fieldType.BaseType.GenericTypeArguments;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> == genericTypes || <span class="number">0</span> == genericTypes.Length)</span><br><span class="line">                &#123;</span><br><span class="line">                    assetType = <span class="keyword">typeof</span>(UnityObject);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    assetType = genericTypes[<span class="number">0</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                assetType = assetValue.GetType();</span><br><span class="line">            &#125;</span><br><span class="line">            UnityObject next = EditorGUI.ObjectField(rect, assetValue, assetType, <span class="literal">false</span>); <span class="comment">// do not allow scene obj so it will actually be asset</span></span><br><span class="line">            <span class="keyword">if</span> (next != assetValue) <span class="comment">// value has changed, set guid and path</span></span><br><span class="line">            &#123;</span><br><span class="line">                pathText = AssetDatabase.GetAssetPath(next);</span><br><span class="line">                guidText = AssetDatabase.AssetPathToGUID(pathText);</span><br><span class="line">                pathProperty.stringValue = pathText;</span><br><span class="line">                guidProperty.stringValue = guidText;</span><br><span class="line">                assetProperty.objectReferenceValue = next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        EditorGUI.EndProperty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="资源构建前的路径补充"><a href="#资源构建前的路径补充" class="headerlink" title="资源构建前的路径补充"></a>资源构建前的路径补充</h4><p>在构建前通过guid或缓存的资源，去把路径刷新，然后就可以安心打构建了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">BundlePreprocess_AssetPath</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PreProcess_AssetPathSoftLink</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * @Hiko</span></span><br><span class="line"><span class="comment">        * </span></span><br><span class="line"><span class="comment">        * Need to match case below, then we get guid, parse actual path</span></span><br><span class="line"><span class="comment">        * m_path: Assets/XX/resource.xx</span></span><br><span class="line"><span class="comment">        * m_guid: 382c74c3721d4f3480e557657b6cbc27</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">DoTextReplace</span>(<span class="params"><span class="keyword">string</span>[] assetGUIDs</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// I have 0 knowledge of Regex, so I ask AI do it :)</span></span><br><span class="line">            <span class="comment">// HACK put 4 space here is becuz there is at least 4 spc before the field name if you take a look into asset yaml file</span></span><br><span class="line">            <span class="keyword">string</span> patternAsSingleField = <span class="string">@"\s*\s\s\s\s\m_path:\s*(?&lt;path&gt;.*)?\s*m_guid:\s*(?&lt;guid&gt;[a-fA-F0-9]*)?"</span>;</span><br><span class="line">            <span class="comment">// if it is a array element, there should be a '-'</span></span><br><span class="line">            <span class="keyword">string</span> patternAsArrayElement = <span class="string">@"\s*-\m_path:\s*(?&lt;path&gt;.*)?\s*m_guid:\s*(?&lt;guid&gt;[a-fA-F0-9]*)?"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, assetCount = assetGUIDs.Length; i &lt; assetCount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> assetGuid = assetGUIDs[i];</span><br><span class="line">                <span class="keyword">string</span> assetPath = AssetDatabase.GUIDToAssetPath(assetGuid);</span><br><span class="line">                <span class="keyword">if</span> (assetPath.StartsWith(<span class="string">"Packages"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">continue</span>; <span class="comment">// dun know hot to use asset search fitler, skip asset in package here</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">string</span> assetFullpath = Application.dataPath + assetPath.Substring(<span class="string">"Assets"</span>.Length);</span><br><span class="line">                <span class="keyword">string</span> assetText = File.ReadAllText(assetFullpath);</span><br><span class="line">                <span class="keyword">string</span> resultText = assetText;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// AssetPath as normal field</span></span><br><span class="line">                MatchCollection matchCollection = Regex.Matches(assetText, patternAsSingleField, RegexOptions.Multiline);</span><br><span class="line">                <span class="keyword">ulong</span> execCount = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> matchCount = matchCollection.Count;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &lt; matchCount)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> matchIndex = <span class="number">0</span>; matchIndex &lt; matchCount; matchIndex++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Match match = matchCollection[matchIndex];</span><br><span class="line">                        <span class="keyword">if</span> (match.Success)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">string</span> matchContent = match.Value;</span><br><span class="line">                            <span class="keyword">int</span> spaceCount = matchContent.IndexOf(<span class="string">"p"</span>) - <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">string</span> guidString = match.Groups[<span class="string">"guid"</span>].Value;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(guidString) || <span class="number">36</span> &gt; guidString.Length) <span class="comment">// invalid guid</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">string</span> space = <span class="keyword">new</span> <span class="keyword">string</span>(<span class="string">' '</span>, spaceCount); <span class="comment">// add space</span></span><br><span class="line">                            <span class="keyword">string</span> path = AssetDatabase.GUIDToAssetPath(guidString);</span><br><span class="line">                            <span class="keyword">string</span> result1 = <span class="string">$"m_path: <span class="subst">&#123;path&#125;</span>"</span>;</span><br><span class="line">                            <span class="keyword">string</span> result2 = <span class="string">$"m_guid: <span class="subst">&#123;guidString&#125;</span>"</span>;</span><br><span class="line">                            <span class="keyword">string</span> result = <span class="string">$"\n<span class="subst">&#123;space&#125;</span><span class="subst">&#123;result1&#125;</span>\n<span class="subst">&#123;space&#125;</span><span class="subst">&#123;result2&#125;</span>"</span>;</span><br><span class="line">                            resultText = resultText.Replace(matchContent, result);</span><br><span class="line">                            ++execCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Asset Path as array element</span></span><br><span class="line">                assetText = resultText;</span><br><span class="line">                matchCollection = Regex.Matches(assetText, patternAsArrayElement, RegexOptions.Multiline);</span><br><span class="line">                matchCount = matchCollection.Count;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &lt; matchCount)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> matchIndex = <span class="number">0</span>; matchIndex &lt; matchCount; matchIndex++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Match match = matchCollection[matchIndex];</span><br><span class="line">                        <span class="keyword">if</span> (match.Success)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">string</span> matchContent = match.Value;</span><br><span class="line">                            <span class="keyword">int</span> spaceCount = matchContent.IndexOf(<span class="string">"p"</span>) - <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">string</span> guidString = match.Groups[<span class="string">"guid"</span>].Value;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(guidString) || <span class="number">36</span> &gt; guidString.Length) <span class="comment">// invalid guid</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">string</span> space = <span class="keyword">new</span> <span class="keyword">string</span>(<span class="string">' '</span>, spaceCount); <span class="comment">// add space</span></span><br><span class="line">                            <span class="keyword">string</span> path = AssetDatabase.GUIDToAssetPath(guidString);</span><br><span class="line">                            <span class="keyword">string</span> result1 = <span class="string">$"- m_path: <span class="subst">&#123;path&#125;</span>"</span>;</span><br><span class="line">                            <span class="keyword">string</span> result2 = <span class="string">$"m_guid: <span class="subst">&#123;guidString&#125;</span>"</span>;</span><br><span class="line">                            <span class="keyword">string</span> result = <span class="string">$"\n<span class="subst">&#123;new <span class="keyword">string</span>(<span class="string">' '</span>, spaceCount - <span class="number">2</span>)&#125;</span><span class="subst">&#123;result1&#125;</span>\n<span class="subst">&#123;space&#125;</span><span class="subst">&#123;result2&#125;</span>"</span>;</span><br><span class="line">                            resultText = resultText.Replace(matchContent, result);</span><br><span class="line">                            ++execCount;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &lt; execCount) <span class="comment">// has changes</span></span><br><span class="line">                &#123;</span><br><span class="line">                    File.WriteAllText(assetFullpath, resultText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// do stuff for SO first</span></span><br><span class="line">        <span class="keyword">string</span>[] guids = AssetDatabase.FindAssets(<span class="string">$"t: <span class="subst">&#123;<span class="keyword">nameof</span>(ScriptableObject)&#125;</span>"</span>);</span><br><span class="line">        DoTextReplace(guids);</span><br><span class="line">        <span class="comment">// then prefab</span></span><br><span class="line">        guids = AssetDatabase.FindAssets(<span class="string">$"t: prefab"</span>);</span><br><span class="line">        DoTextReplace(guids);</span><br><span class="line">        <span class="comment">// finally scenes</span></span><br><span class="line">        guids = AssetDatabase.FindAssets(<span class="string">$"t: scene"</span>);</span><br><span class="line">        DoTextReplace(guids);</span><br><span class="line">        <span class="comment">// refresh assets</span></span><br><span class="line">        AssetDatabase.Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边如果使用的让宿主来刷新的方法，那我觉得会有一个需要注意的小点。<br>这个情况下刷新操作其实应该注意对资源处理的顺序，比如先处理 ScriptableObject 再到 Prefab，最后才是 Scene<br>这个操作的实质是修改 asset 然后再把修改结果写回磁盘，宿主对修改的处理方式可能会和我们想的不太一样。</p><p>比如说 Scene 中很可能会包含 prefab，如果先让 Scene 文件执行这个刷新，如果监测和检查没有做充分的情况下会抓到 Scene 里的 Prefab 然后让其在 Scene 里做了更改，并因此在 Scene 文件了多写了一行 override 信息。<br>同样的，Nested Prefab 也会遇到同样的问题。至于如何排布资源处理的顺序可能还得根据实际项目的情况来指定具体的规则。</p><p>但是！！！如果用第二种方法就不会有这个问题，因为仅匹配目标文本的情况下，不会产生多余的修改，所有匹配到的位置都是这个资源链接直接的宿主。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在实际项目中，我们很多资源都是打到AB里了，这个情况下很多Prefab,Scriptable上想要配置一些资源只能填资源的路径。但是填路径真的很麻烦，万一资源发生位置变更就麻烦了。&lt;br&gt;在这个情况下想到的一个方案就是做一个 “资源链接” 对象，在面板上仍然绘制UnityO
      
    
    </summary>
    
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>TextMeshPro 富文文本自定义颜色</title>
    <link href="http://yoursite.com/2025/02/23/20250223-tmp-custom-richtext-color/"/>
    <id>http://yoursite.com/2025/02/23/20250223-tmp-custom-richtext-color/</id>
    <published>2025-02-23T15:33:33.000Z</published>
    <updated>2025-03-03T13:44:38.901Z</updated>
    
    <content type="html"><![CDATA[<p>TextMeshPro 支持富文本，富文本有颜色标签。对于一些武器/技能描述里的关键字，在文本表里我们都会用 <code>&lt;color=#FFFFFF&gt;</code> 这样的标记去给文本换色。<br>但是这样会有一些比较麻烦的问题，比如当美术希望全部把颜色换掉时，这再去表格里做替换就比较麻烦了，而且也无法区分两种用途不同但是数值一样的颜色。</p><p>于是乎交互和策划那边提来了需求希望能在富文本里使用自定义的颜色tag，为了方便做效果的测试和迭代。</p><p>当前我们已经在使用自定义的继承TMP的文本组件了，达成这个功能就会比较简单，只需要对TMP的代码做一些小修改然后再根据他的规则续写一下我们的自定义的颜色获取就好了。</p><h2 id="TextMeshPro-源码获取"><a href="#TextMeshPro-源码获取" class="headerlink" title="TextMeshPro 源码获取"></a>TextMeshPro 源码获取</h2><p>现在我们都是从 PackageManager 中下载的 TMP，一般是无法直接修改的。需要按照以下步骤才能修改：</p><ul><li>从 <code>PROJECT_ROOT/Library/PackageCache/</code> 中找到 TMP 的包，名字应该是 <code>com.unity.textmeshpro@x.x.x</code></li><li>把整个包拖到 <code>PROJECT_ROOT/Packages/</code> 这个目录下，重启 Unity 工程</li><li>从 <code>PROJECT_ROOT/Packages/com.unity.textmeshpro@x.x.x/</code> 的目录下随意修改源码</li></ul><h2 id="修改思路"><a href="#修改思路" class="headerlink" title="修改思路"></a>修改思路</h2><p><code>TMP_Asset.cs</code> 这个文件有差不多9000行，非常庞大。其中有一大部分是关于富文本标签的解析的。</p><p>我看到的大概的文本渲染的流程大概是这样的:</p><ul><li>文本赋值(从属性或面板上赋值)</li><li>标记需要重建网格</li><li>(重建网格) 使用一个 uint 数组备份当前输入的文本。如果文本长于数组，那扩容到目标长度，如果文本短于数组，空位填0。</li><li>(重建网格) 准备一个 UnicodeChar(编码，原长度等)。如果文本长于数组，那扩容到2的n次幂，如果文本短于数组，空位填0。</li><li>(重建网格) 填充 UnicodeChar 数组，缓存准备操作的文本(会区分换行符和不同字符以及 br, style 标签)。</li><li>(重建网格) 遍历 UnicodeChar 数组以构建网格。</li><li>(重建网格) (遍历 UnicodeChar 数组) 检查每一个 UnicodeChar，如果是可以直接展示的字符，则根据当前的富文本标签区间和其它显示相关的参数来给 m_textInfo 里的 characterInfo(缓存需要绘制的字符的网格相关的信息) 数组中的元素赋值。</li><li>(重建网格) (遍历 UnicodeChar 数组) 检查每一个 UnicodeChar，根据组件上的大小写风格定义来换算当前实际需要使用的 char UnicodeChar。</li><li>(重建网格) (遍历 UnicodeChar 数组) 根据实际使用的 char code 去查询字形(如果是动态的贴图，查不到的会创建并写入贴图)。</li><li>(重建网格) (遍历 UnicodeChar 数组) 根据各种效果处理后的结果，更新m_textInfo 里的 characterInfo(缓存需要绘制的字符的网格相关的信息) 数组中的元素。</li><li>(重建网格) 根据整体的对齐模式计算整体的偏移，之后用于重新更新m_textInfo 里的 characterInfo。</li><li>(重建网格) 接下来还有一系列处理我头大了看不下去了 :)</li></ul><p>整个流程很长我没看完，但还是看到了我需要的关键部分。<code>internal bool ValidateHtmlTag(UnicodeChar[] chars, int startIndex, out int endIndex)</code> 这个函数中就有富文本标签的解析而且正好有根据颜色标签来计算颜色的部分。再这个部分(TMP_Text.cs line 7766)中就正好是根据颜色名字来赋颜色，在这里我们加上用于解析自定义颜色的函数就可以了</p><h2 id="TextMeshPro-超链接点击"><a href="#TextMeshPro-超链接点击" class="headerlink" title="TextMeshPro 超链接点击"></a>TextMeshPro 超链接点击</h2><p>这个功能也是我最开始提到的对于武器/技能描述里的关键字会需要的一个功能，点击超链接文本打开某某界面展示下详情。配合 TMP 也非常好好完成。<br>需要一个响应点击的脚本挂在有 TMP 的物体上或者直接继承 TMP 然后也继承响应点击的这个接口。</p><p>我们可以明确得到点击的富文本链接内容，需要打开界面的情况就自己切割参数解析即可。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TempTMP</span> : <span class="title">TextMeshProUGUI</span>, <span class="title">IPointerClickHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerClick</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">int</span> linkIndex = TMP_TextUtilities.FindIntersectingLink(<span class="keyword">this</span>, eventData.position, eventData.pressEventCamera);</span><br><span class="line">        <span class="keyword">if</span> (linkIndex != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * e.g. &lt;link="a2,b2"&gt;Mesh&lt;/link&gt;</span></span><br><span class="line"><span class="comment">            * linkInfo.GetLinkID() will "get a2,b2"</span></span><br><span class="line"><span class="comment">            * linkInfo.GetLinkText() will get "Mesh"</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            TMP_LinkInfo linkInfo = <span class="keyword">this</span>.textInfo.linkInfo[linkIndex];</span><br><span class="line">            Debug.Log(<span class="string">$"linkId <span class="subst">&#123;linkInfo.GetLinkID()&#125;</span> / linkText <span class="subst">&#123;linkInfo.GetLinkText()&#125;</span>"</span>);</span><br><span class="line">            <span class="comment">// Do stuff u want here :D</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TextMeshPro 支持富文本，富文本有颜色标签。对于一些武器/技能描述里的关键字，在文本表里我们都会用 &lt;code&gt;&amp;lt;color=#FFFFFF&amp;gt;&lt;/code&gt; 这样的标记去给文本换色。&lt;br&gt;但是这样会有一些比较麻烦的问题，比如当美术希望全部把颜色换掉时
      
    
    </summary>
    
    
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>查询Asset在工程中的引用(GUID)</title>
    <link href="http://yoursite.com/2025/02/21/20250221-unity-findref-guid/"/>
    <id>http://yoursite.com/2025/02/21/20250221-unity-findref-guid/</id>
    <published>2025-02-21T13:55:21.000Z</published>
    <updated>2025-02-21T15:36:45.687Z</updated>
    
    <content type="html"><![CDATA[<p>之前我用Unity自带的API去查询一些物体的引用，结果当然是超超超超超级慢，对于那些把项目工程放在辣鸡机械盘上的同事，这个工具根本是没法好好用的。而且因为要用Unity的APi，自然是没办法使用async的。</p><p>最近导师拿到QA那边提供的一个类似的工具，改了一下，做了一个超级快的版本。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>思路其实是非常简单的。我们知道Unity Asset会有一个唯一的GUID，那我们就可以用这个GUID去查询其引用。<br>查询的时候我们也不需要使用Unity API去检查引用，而是把我们的各种Asset都当成文本文件直接读取，然后直接在这些文本里去匹配我们需要查询的GUID。</p><h1 id="特殊用途"><a href="#特殊用途" class="headerlink" title="特殊用途"></a>特殊用途</h1><p>最近给项目里导入了一些新的UI组件，其中包含一个继承TMP后拓展的好用的UXTMP(继承于TMP)。交互那边提了个需求是要求把当前UI Prefab里所有的TMP换成UXTMP。没想到这个时候我们的这个工具又有了大用了。<br>我们用文本的方式打开prefab，然年后找到对应节点里的这一行 <code>m_Script: {fileID: xxxxxxxx, guid: f46886236gsd6437aeb418b961at14c5, type: 3}</code> 把guid改成UXTMP的guid就好了，<a href="https://2c2c2c.github.io/2024/07/14/20240714-unity-serialization-1/" target="_blank" rel="noopener">详情参考着一篇笔记</a>。这一行是描述某个组件对应的类的类型。既然UXTMP继承自TMP，那我们也不需要调整序列化的字段赋值。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>实际执行的文件操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public interface IFileOperation&lt;T&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> FileCount &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">int</span> Operated &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    Task&lt;T&gt; OperationTask &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">float</span> PercentCompletion &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">string</span> CurrentOperationMessage &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">bool</span> Running &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Cancel</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class FileAnalysis : IFileOperation&lt;string[]&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span>[] m_folders;</span><br><span class="line">    <span class="keyword">private</span> Predicate&lt;<span class="keyword">string</span>&gt; m_fileFilter;</span><br><span class="line">    <span class="keyword">private</span> Regex m_regexCheck;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CancellationTokenSource m_tokenSource;</span><br><span class="line">    <span class="keyword">private</span> CancellationToken m_cachedToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Task&lt;<span class="keyword">string</span>[]&gt; OperationTask &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> PercentCompletion &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> CurrentOperationMessage &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> FileCount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Operated &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> Running =&gt; OperationTask.Status <span class="keyword">switch</span></span><br><span class="line">    &#123;</span><br><span class="line">        TaskStatus.RanToCompletion =&gt; <span class="literal">false</span>,</span><br><span class="line">        TaskStatus.Faulted =&gt; <span class="literal">false</span>,</span><br><span class="line">        TaskStatus.Canceled =&gt; <span class="literal">false</span>,</span><br><span class="line">        _ =&gt; <span class="literal">true</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CancellationToken Token =&gt; m_cachedToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IFileOperation&lt;<span class="keyword">string</span>[]&gt; AnalyzeFolders(<span class="keyword">string</span>[] folders, Predicate&lt;<span class="keyword">string</span>&gt; fileFilter, Regex regexCheck)</span><br><span class="line">    &#123;</span><br><span class="line">        FileAnalysis operation = <span class="keyword">new</span> FileAnalysis(folders, fileFilter, regexCheck);</span><br><span class="line">        operation.DoOperation();</span><br><span class="line">        <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileAnalysis</span>(<span class="params"><span class="keyword">string</span>[] folders, Predicate&lt;<span class="keyword">string</span>&gt; fileFilter, Regex regexCheck</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_folders = folders;</span><br><span class="line">        m_fileFilter = fileFilter;</span><br><span class="line">        m_regexCheck = regexCheck;</span><br><span class="line">        m_tokenSource = <span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Cancel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != m_tokenSource)</span><br><span class="line">        &#123;</span><br><span class="line">            m_tokenSource.Cancel();</span><br><span class="line">            m_tokenSource.Dispose();</span><br><span class="line">            m_tokenSource = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoOperation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == OperationTask)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                OperationTask = Task.Factory.StartNew&lt;<span class="keyword">string</span>[]&gt;(CheckFolders, cancellationToken: m_cachedToken = m_tokenSource.Token);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception _) &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span>[] <span class="title">CheckFolders</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] files = m_folders.SelectMany(folder =&gt; Directory.GetFiles(folder, <span class="string">"*"</span>, SearchOption.AllDirectories)).ToArray();</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; result = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;(<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">int</span> count = files.Length;</span><br><span class="line">        FileCount = count;</span><br><span class="line">        Operated = <span class="number">0</span>;</span><br><span class="line">        PercentCompletion = <span class="number">0f</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Token.ThrowIfCancellationRequested();</span><br><span class="line">            <span class="keyword">string</span> filePath = files[i];</span><br><span class="line">            <span class="keyword">if</span> (m_fileFilter(filePath))</span><br><span class="line">            &#123;</span><br><span class="line">                CurrentOperationMessage = filePath;</span><br><span class="line">                <span class="keyword">if</span> (CheckFile(filePath, m_regexCheck))</span><br><span class="line">                &#123;</span><br><span class="line">                    result.Add(filePath.Replace(<span class="string">'\\'</span>, <span class="string">'/'</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                Operated++;</span><br><span class="line">                PercentCompletion = (i / (<span class="keyword">float</span>)count) * <span class="number">100f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.ToArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">CheckFile</span>(<span class="params"><span class="keyword">string</span> filepath, Regex check</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> assetText = File.ReadAllText(filepath);</span><br><span class="line">        MatchCollection matches = check.Matches(assetText);</span><br><span class="line">        <span class="keyword">bool</span> result = matches.Count &gt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class FileTextReplace : IFileOperation&lt;string[]&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span>[] m_fullPaths;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> m_prevText;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> m_nextText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CancellationTokenSource m_tokenSource;</span><br><span class="line">    <span class="keyword">private</span> CancellationToken m_cachedToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Task&lt;<span class="keyword">string</span>[]&gt; OperationTask &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> PercentCompletion &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> CurrentOperationMessage &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> FileCount &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Operated &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> Running =&gt; OperationTask.Status <span class="keyword">switch</span></span><br><span class="line">    &#123;</span><br><span class="line">        TaskStatus.RanToCompletion =&gt; <span class="literal">false</span>,</span><br><span class="line">        TaskStatus.Faulted =&gt; <span class="literal">false</span>,</span><br><span class="line">        TaskStatus.Canceled =&gt; <span class="literal">false</span>,</span><br><span class="line">        _ =&gt; <span class="literal">true</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CancellationToken Token =&gt; m_cachedToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IFileOperation&lt;<span class="keyword">string</span>[]&gt; ReplaceText(<span class="keyword">string</span>[] fullpaths, <span class="keyword">string</span> prevText, <span class="keyword">string</span> nextText)</span><br><span class="line">    &#123;</span><br><span class="line">        FileTextReplace operation = <span class="keyword">new</span> FileTextReplace(fullpaths, prevText, nextText);</span><br><span class="line">        operation.DoOperation();</span><br><span class="line">        <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileTextReplace</span>(<span class="params"><span class="keyword">string</span>[] fullpaths, <span class="keyword">string</span> prevText, <span class="keyword">string</span> nextText</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_fullPaths = fullpaths;</span><br><span class="line">        m_prevText = prevText;</span><br><span class="line">        m_nextText = nextText;</span><br><span class="line">        m_tokenSource = <span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoOperation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == OperationTask)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                OperationTask = Task.Factory.StartNew&lt;<span class="keyword">string</span>[]&gt;(DoReplaceToFiles, cancellationToken: m_cachedToken = m_tokenSource.Token);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception _) &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Cancel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != m_tokenSource)</span><br><span class="line">        &#123;</span><br><span class="line">            m_tokenSource.Cancel();</span><br><span class="line">            m_tokenSource.Dispose();</span><br><span class="line">            m_tokenSource = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span>[] <span class="title">DoReplaceToFiles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; temp = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">        Operated = <span class="number">0</span>;</span><br><span class="line">        FileCount = m_fullPaths.Length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = m_fullPaths.Length; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Token.ThrowIfCancellationRequested();</span><br><span class="line">            <span class="keyword">string</span> assetFullPath = m_fullPaths[i];</span><br><span class="line">            <span class="keyword">string</span> assetText = File.ReadAllText(assetFullPath);</span><br><span class="line">            <span class="keyword">string</span> nextAssetText = assetText.Replace(m_prevText, m_nextText);</span><br><span class="line">            File.WriteAllText(assetFullPath, nextAssetText);</span><br><span class="line">            temp.Add(assetFullPath);</span><br><span class="line">            Operated++;</span><br><span class="line">            CurrentOperationMessage = assetFullPath;</span><br><span class="line">            PercentCompletion = (i / (<span class="keyword">float</span>)length) * <span class="number">100f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt; temp.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> temp.ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AssetUsageSearchWindow</span> : <span class="title">EditorWindow</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Flags</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">enum</span> AssetFilter</span><br><span class="line">    &#123;</span><br><span class="line">        Asset = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,</span><br><span class="line">        Material = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,</span><br><span class="line">        Prefab = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,</span><br><span class="line">        Scene = <span class="number">1</span> &lt;&lt; <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">struct</span> SearchRequest</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> searchTextOnly;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> targetString;</span><br><span class="line">        <span class="keyword">public</span> UnityObject Asset</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> path = AssetPath;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(path))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> AssetDatabase.LoadAssetAtPath&lt;UnityObject&gt;(path);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> != <span class="keyword">value</span> &amp;&amp; AssetDatabase.TryGetGUIDAndLocalFileIdentifier&lt;UnityObject&gt;(<span class="keyword">value</span>, <span class="keyword">out</span> <span class="keyword">string</span> guid, <span class="keyword">out</span> _))</span><br><span class="line">                &#123;</span><br><span class="line">                    targetString = guid;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> AssetPath =&gt; searchTextOnly ? <span class="keyword">string</span>.Empty : AssetDatabase.GUIDToAssetPath(targetString);</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">long</span> FileID</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                UnityObject asset = Asset;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> != asset &amp;&amp; AssetDatabase.TryGetGUIDAndLocalFileIdentifier(asset, <span class="keyword">out</span> _, <span class="keyword">out</span> <span class="keyword">long</span> fileId))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> fileId;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">struct</span> AssetResult</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> fullPath;</span><br><span class="line">        <span class="keyword">public</span> UnityObject asset;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>// used to ping the actual asset dat has the direct reference</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment">//public UnityObject subAssetIfNeed;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> only search specify text from asset</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> m_searchTextOnly = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AssetFilter m_filter = (AssetFilter)~<span class="number">0</span>; <span class="comment">// Everything by default</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;<span class="keyword">string</span>&gt; m_searchFolders = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">    <span class="keyword">private</span> SearchRequest m_search;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IFileOperation&lt;<span class="keyword">string</span>[]&gt; m_operationTask = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> m_waitForResult = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> AssetResult[] m_assetResults = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> Regex m_pathFilterRegex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector2 m_scrollPos;</span><br><span class="line">    <span class="keyword">private</span> Stopwatch m_processTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> m_searchReplaceText = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> IsBusy =&gt; <span class="literal">null</span> != m_operationTask &amp;&amp; m_operationTask.Running;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">MenuItem(<span class="meta-string">"Tools/Temp Asset Usage Search"</span>, priority = 4)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OpenWindowLah</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (EditorWindow.HasOpenInstances&lt;AssetUsageSearchWindow&gt;())</span><br><span class="line">        &#123;</span><br><span class="line">            UnityDebug.LogError(<span class="string">$"Editor window <span class="subst">&#123;<span class="keyword">nameof</span>(AssetUsageSearchWindow)&#125;</span> can only have 1 instance."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        AssetUsageSearchWindow window = CreateWindow&lt;AssetUsageSearchWindow&gt;();</span><br><span class="line">        window.Show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// init</span></span><br><span class="line">        window.titleContent = <span class="keyword">new</span> GUIContent(<span class="string">"Asset Usage Search"</span>);</span><br><span class="line">        window.RefreshPathFilter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.VerticalScope(EditorStyles.helpBox))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> isSearching = <span class="literal">null</span> != m_operationTask &amp;&amp; m_operationTask.OperationTask.Status == TaskStatus.Running;</span><br><span class="line">            <span class="keyword">bool</span> isFaulted = <span class="literal">null</span> != m_operationTask &amp;&amp; m_operationTask.OperationTask.Status == TaskStatus.Faulted;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUI.DisabledGroupScope(IsBusy))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// draw search info</span></span><br><span class="line">                m_searchTextOnly = EditorGUILayout.Toggle(<span class="string">"Search Text Only"</span>, m_searchTextOnly);</span><br><span class="line">                <span class="keyword">string</span> searchLable = m_searchTextOnly ? <span class="string">"Search for string (Text)"</span> : <span class="string">"Search for Asset (GUID)"</span>;</span><br><span class="line">                SearchRequest request = m_search;</span><br><span class="line">                <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope())</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorGUILayout.PrefixLabel(searchLable);</span><br><span class="line">                    <span class="keyword">if</span> (m_searchTextOnly)</span><br><span class="line">                    &#123;</span><br><span class="line">                        request.targetString = EditorGUILayout.TextField(request.targetString);</span><br><span class="line">                        m_searchReplaceText = EditorGUILayout.TextField(<span class="string">"Replace Text"</span>, m_searchReplaceText);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">bool</span> prev = GUI.enabled;</span><br><span class="line">                        GUI.enabled = <span class="literal">false</span>;</span><br><span class="line">                        request.targetString = EditorGUILayout.TextField(request.targetString);</span><br><span class="line">                        GUI.enabled = prev;</span><br><span class="line">                        request.Asset = EditorGUILayout.ObjectField(request.Asset, <span class="keyword">typeof</span>(UnityObject), <span class="literal">false</span>);</span><br><span class="line">                        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUI.DisabledGroupScope(<span class="literal">true</span>))</span><br><span class="line">                        &#123;</span><br><span class="line">                            EditorGUILayout.TextField(<span class="string">"FileID: "</span>, request.FileID.ToString());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                m_search = request;</span><br><span class="line">                m_filter = (AssetFilter)EditorGUILayout.EnumFlagsField(<span class="string">"Asset Filter"</span>, m_filter);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Draw folder</span></span><br><span class="line">                EditorGUILayout.LabelField(<span class="string">"Target folders:"</span>);</span><br><span class="line">                <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.VerticalScope(EditorStyles.helpBox))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Add Folder"</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        m_searchFolders.Add(Application.dataPath);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_searchFolders.Count; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope())</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (GUILayout.Button(<span class="string">"X"</span>, EditorStyles.miniButton, GUILayout.Width(<span class="number">26</span>)))</span><br><span class="line">                            &#123;</span><br><span class="line">                                m_searchFolders.RemoveAt(i);</span><br><span class="line">                                i--;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">string</span> folderResult = DrawSelectFolder(m_searchFolders[i]);</span><br><span class="line">                            m_searchFolders[i] = <span class="keyword">string</span>.IsNullOrEmpty(folderResult) ? m_searchFolders[i] : folderResult;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// search button</span></span><br><span class="line">                <span class="keyword">if</span> (GUILayout.Button(<span class="string">$"Search References for  \"<span class="subst">&#123;m_search.targetString&#125;</span>\""</span>) &amp;&amp; !<span class="keyword">string</span>.IsNullOrEmpty(m_search.targetString))</span><br><span class="line">                &#123;</span><br><span class="line">                    DoSearch();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// replace button</span></span><br><span class="line">                <span class="keyword">if</span> (!IsBusy &amp;&amp; !isSearching &amp;&amp; !isFaulted &amp;&amp; m_searchTextOnly &amp;&amp; (<span class="literal">null</span> != m_assetResults &amp;&amp; <span class="number">0</span> &lt; m_assetResults.Length))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (GUILayout.Button(<span class="string">$"Replace Text"</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        DoTextReplace(); <span class="comment">// TODO @Hiko use task to prevent editor window STUCK :(</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isSearching) DrawOperatingGUI();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (isFaulted) EditorGUILayout.HelpBox(<span class="string">$"Error while running search:\n<span class="subst">&#123;m_operationTask.OperationTask.Exception&#125;</span>"</span>, MessageType.Error);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (m_assetResults != <span class="literal">null</span>) DrawOperationResultGUI();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">DrawSelectFolder</span>(<span class="params"><span class="keyword">string</span> folderPath</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> prev = GUI.enabled;</span><br><span class="line">            GUI.enabled = <span class="literal">false</span>;</span><br><span class="line">            EditorGUILayout.TextField(folderPath);</span><br><span class="line">            GUI.enabled = prev;</span><br><span class="line">            <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Select"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                folderPath = EditorUtility.OpenFolderPanel(<span class="string">"Select target folder"</span>, Application.dataPath, <span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> folderPath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoTextReplace</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; pathList = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;(m_assetResults.Length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = m_assetResults.Length; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            AssetResult searchResult = m_assetResults[i];</span><br><span class="line">            <span class="comment">//if (searchResult.subAssetIfNeed)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    continue;</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line">            pathList.Add(searchResult.fullPath);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt; pathList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (EditorUtility.DisplayDialog(<span class="string">"Are you sure?"</span>, <span class="string">"The operation can not be canceled"</span>, <span class="string">"Yes just do it"</span>, <span class="string">"Dun do it"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                m_assetResults = Array.Empty&lt;AssetResult&gt;();</span><br><span class="line">                m_processTime = Stopwatch.StartNew();</span><br><span class="line">                m_operationTask = FileTextReplace.ReplaceText(pathList.ToArray(), m_search.targetString, m_searchReplaceText);</span><br><span class="line">                m_waitForResult = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSearch</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_assetResults = Array.Empty&lt;AssetResult&gt;();</span><br><span class="line">        m_processTime = Stopwatch.StartNew();</span><br><span class="line">        RefreshPathFilter();</span><br><span class="line">        m_operationTask = FileAnalysis.AnalyzeFolders(m_searchFolders.Count &gt; <span class="number">0</span> ? m_searchFolders.ToArray() : <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; Application.dataPath &#125;, FilterPath, <span class="keyword">new</span> Regex(m_search.targetString));</span><br><span class="line">        m_waitForResult = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">FilterPath</span>(<span class="params"><span class="keyword">string</span> path</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == m_pathFilterRegex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m_pathFilterRegex.IsMatch(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawOperatingGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorGUILayout.LabelField(<span class="string">$"Operating: <span class="subst">&#123;m_operationTask.PercentCompletion:F2&#125;</span>%"</span>);</span><br><span class="line">        EditorGUILayout.LabelField(m_operationTask.CurrentOperationMessage);</span><br><span class="line">        <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Cancel"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            m_operationTask.Cancel();</span><br><span class="line">            <span class="comment">//m_operationTask = null;</span></span><br><span class="line">            m_processTime.Stop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawOperationResultGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorGUILayout.LabelField(<span class="string">$"Result <span class="subst">&#123;m_assetResults.Length&#125;</span> assets:"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != m_processTime)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_processTime.IsRunning)</span><br><span class="line">            &#123;</span><br><span class="line">                m_processTime.Stop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (m_operationTask <span class="keyword">is</span> FileAnalysis)</span><br><span class="line">            &#123;</span><br><span class="line">                EditorGUILayout.LabelField(<span class="string">$"Operation time <span class="subst">&#123;m_processTime.ElapsedMilliseconds&#125;</span>ms, <span class="subst">&#123;m_operationTask.Operated&#125;</span>/<span class="subst">&#123;m_operationTask.FileCount&#125;</span> files scanned"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (m_operationTask <span class="keyword">is</span> FileTextReplace)</span><br><span class="line">            &#123;</span><br><span class="line">                EditorGUILayout.LabelField(<span class="string">$"Operation time <span class="subst">&#123;m_processTime.ElapsedMilliseconds&#125;</span>ms, <span class="subst">&#123;m_operationTask.Operated&#125;</span>/<span class="subst">&#123;m_operationTask.FileCount&#125;</span> files got text replced"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (GUILayout.Button(<span class="string">"Copy list to clipboard"</span>, EditorStyles.miniButton))</span><br><span class="line">            &#123;</span><br><span class="line">                GUIUtility.systemCopyBuffer = <span class="keyword">string</span>.Join(<span class="string">"\n"</span>, m_assetResults.Select(rst =&gt; rst.fullPath));</span><br><span class="line">            &#125;</span><br><span class="line">            GUILayout.FlexibleSpace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// since we dun have tons of result, we dun need to apply recycle scroll view here</span></span><br><span class="line">        <span class="keyword">using</span> (EditorGUILayout.ScrollViewScope scrollview = <span class="keyword">new</span> EditorGUILayout.ScrollViewScope(m_scrollPos, EditorStyles.helpBox))</span><br><span class="line">        &#123;</span><br><span class="line">            m_scrollPos = scrollview.scrollPosition;</span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.VerticalScope())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_assetResults.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUILayout.HorizontalScope(EditorStyles.helpBox))</span><br><span class="line">                    &#123;</span><br><span class="line">                        AssetResult result = m_assetResults[i];</span><br><span class="line">                        Rect foldoutRect = GUILayoutUtility.GetRect(<span class="number">20</span>, EditorGUIUtility.singleLineHeight, GUILayout.Width(<span class="number">20</span>));</span><br><span class="line">                        EditorGUILayout.ObjectField(result.asset, <span class="keyword">typeof</span>(UnityObject), <span class="literal">false</span>);</span><br><span class="line">                        <span class="keyword">string</span> assetFullPath = result.fullPath;</span><br><span class="line">                        <span class="keyword">if</span> (GUILayout.Button(<span class="keyword">new</span> GUIContent(assetFullPath, result.fullPath)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            UnityDebug.Log(<span class="string">$"copy full path <span class="subst">&#123;assetFullPath&#125;</span> to clipboard"</span>);</span><br><span class="line">                            GUIUtility.systemCopyBuffer = assetFullPath;</span><br><span class="line">                            EditorGUIUtility.PingObject(result.asset);</span><br><span class="line">                        &#125;</span><br><span class="line">                        m_assetResults[i] = result;</span><br><span class="line">                        EditorGUILayout.EndFoldoutHeaderGroup();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != m_operationTask)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_operationTask.OperationTask.Status == TaskStatus.Running)</span><br><span class="line">            &#123;</span><br><span class="line">                Repaint();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (m_operationTask.OperationTask.Status == TaskStatus.RanToCompletion &amp;&amp; m_waitForResult)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (m_operationTask <span class="keyword">is</span> FileAnalysis) &#123; &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (m_operationTask <span class="keyword">is</span> FileTextReplace)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">string</span>[] results = m_operationTask.OperationTask.Result;</span><br><span class="line">                    <span class="keyword">string</span> tempLog = <span class="keyword">string</span>.Empty;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = results.Length; i &lt; length; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">string</span> assetFullPath = results[i];</span><br><span class="line">                        AssetDatabase.ImportAsset(assetFullPath);</span><br><span class="line">                        <span class="keyword">string</span> assetPath = assetFullPath.Substring(Application.dataPath.Length - <span class="number">6</span>);</span><br><span class="line">                        tempLog += <span class="string">$"<span class="subst">&#123;assetPath&#125;</span>\n"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    UnityDebug.Log(<span class="string">$"Do Text reaplce for asset:\n <span class="subst">&#123;tempLog&#125;</span>"</span>);</span><br><span class="line">                    EditorUtility.DisplayDialog(<span class="string">"Done"</span>, <span class="string">$"Did text replace for <span class="subst">&#123;results.Length&#125;</span> files"</span>, <span class="string">"OK"</span>);</span><br><span class="line">                    AssetDatabase.Refresh();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Result filling is done here because it needs to run on main thread</span></span><br><span class="line">                m_waitForResult = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">string</span>[] result = m_operationTask.OperationTask.Result;</span><br><span class="line">                <span class="keyword">int</span> count = result.Length;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> == count)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_assetResults = Array.Empty&lt;AssetResult&gt;();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">null</span> == m_assetResults)</span><br><span class="line">                    &#123;</span><br><span class="line">                        m_assetResults = <span class="keyword">new</span> AssetResult[count];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (m_assetResults.Length != count)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Array.Resize(<span class="keyword">ref</span> m_assetResults, count);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">string</span> assetPath = <span class="string">$"Assets<span class="subst">&#123;result[i].Substring(Application.dataPath.Length)&#125;</span>"</span>;</span><br><span class="line">                    UnityObject asset = AssetDatabase.LoadAssetAtPath&lt;UnityObject&gt;(assetPath);</span><br><span class="line">                    m_assetResults[i] = <span class="keyword">new</span> AssetResult</span><br><span class="line">                    &#123;</span><br><span class="line">                        fullPath = result[i],</span><br><span class="line">                        asset = asset,</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                Repaint();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RefreshPathFilter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> extensionFilter = GetExtensionFilter(m_filter);</span><br><span class="line">        m_pathFilterRegex = <span class="keyword">new</span> Regex(<span class="keyword">string</span>.Format(<span class="string">@"^.*\.(&#123;0&#125;)$"</span>, extensionFilter));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">GetExtensionFilter</span>(<span class="params">AssetFilter filter</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; extensions = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">        <span class="keyword">if</span> (filter.HasFlag(AssetFilter.Asset))</span><br><span class="line">        &#123;</span><br><span class="line">            extensions.Add(<span class="string">"asset"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (filter.HasFlag(AssetFilter.Material))</span><br><span class="line">        &#123;</span><br><span class="line">            extensions.Add(<span class="string">"mat"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (filter.HasFlag(AssetFilter.Prefab))</span><br><span class="line">        &#123;</span><br><span class="line">            extensions.Add(<span class="string">"prefab"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (filter.HasFlag(AssetFilter.Scene))</span><br><span class="line">        &#123;</span><br><span class="line">            extensions.Add(<span class="string">"unity"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">string</span> extensionFilter = <span class="keyword">string</span>.Join(<span class="string">"|"</span>, extensions);</span><br><span class="line">        <span class="keyword">return</span> extensionFilter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键代码和Unity API毫无关系，用Task跑还可以可以避免长时间的卡死，而且我们也能加入取消的功能。如果在乎性能的话可以还可以在读文件检查这边做优化。不过感觉这样已经比之前快了许多了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前我用Unity自带的API去查询一些物体的引用，结果当然是超超超超超级慢，对于那些把项目工程放在辣鸡机械盘上的同事，这个工具根本是没法好好用的。而且因为要用Unity的APi，自然是没办法使用async的。&lt;/p&gt;
&lt;p&gt;最近导师拿到QA那边提供的一个类似的工具，改了一
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>简单的UI图片挖口</title>
    <link href="http://yoursite.com/2024/12/07/20241207-simple-uiimage-cutout/"/>
    <id>http://yoursite.com/2024/12/07/20241207-simple-uiimage-cutout/</id>
    <published>2024-12-07T15:33:33.000Z</published>
    <updated>2024-12-09T14:13:52.129Z</updated>
    
    <content type="html"><![CDATA[<p>本周接到了强制引导的功能需求，本周就要做好。我之前没有做过这个需求，说实在的不知道那个图上挖洞的功能怎么做。</p><img src="/2024/12/07/20241207-simple-uiimage-cutout/20241207-pic001.png" class="" title="split"><p>因为时间紧迫，用现有的功能糊弄了一个，思路比较蠢: 挖洞区域(父节点，带Mask) -&gt; 被挖洞的目标背景图(子节点，使用网上的mask反转组件)<br>这个做法有个巨麻烦的点就是当需要聚焦UI空间的时候，需要先让父节点对目标UI，然后让子物体调整尺寸撑满屏幕。预览起来也很麻烦。</p><p>最近稍微看了下 UI Mask 的工作原理，想着要不自己做一个方便一些的。于是决定先参考 RectMask2D 的工作原理做一个。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>RectMask2D 的工作方法是 给 MaskableGraphic 设置剪裁区域（SetClipRect），区域外的部分都会被裁切不显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color.a *&#x3D; UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);</span><br></pre></td></tr></table></figure><p>那么我只要稍微反一下，就可以变成区域内的不显示了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color.a *&#x3D; 1 - UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);</span><br></pre></td></tr></table></figure></p><p>所以最后我们需要一个 UI Shader 赋给被裁切的物体，和一个去调整裁切区域的脚本。</p><p>UI Shader (和UI Default基本没区别，就是裁切区域那边反了一下)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Shader &quot;UI&#x2F;CutTarget&quot;</span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        [PerRendererData] _MainTex(&quot;Sprite Texture&quot;, 2D) &#x3D; &quot;white&quot; &#123;&#125;</span><br><span class="line">        _Color(&quot;Tint&quot;, Color) &#x3D; (1,1,1,1)</span><br><span class="line"></span><br><span class="line">        _StencilComp(&quot;Stencil Comparison&quot;, Float) &#x3D; 8</span><br><span class="line">        _Stencil(&quot;Stencil ID&quot;, Float) &#x3D; 0</span><br><span class="line">        _StencilOp(&quot;Stencil Operation&quot;, Float) &#x3D; 0</span><br><span class="line">        _StencilWriteMask(&quot;Stencil Write Mask&quot;, Float) &#x3D; 255</span><br><span class="line">        _StencilReadMask(&quot;Stencil Read Mask&quot;, Float) &#x3D; 255</span><br><span class="line"></span><br><span class="line">        _ColorMask(&quot;Color Mask&quot;, Float) &#x3D; 15</span><br><span class="line"></span><br><span class="line">        [Toggle(UNITY_UI_ALPHACLIP)] _UseUIAlphaClip(&quot;Use Alpha Clip&quot;, Float) &#x3D; 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        SubShader</span><br><span class="line">        &#123;</span><br><span class="line">            Tags</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;Queue&quot; &#x3D; &quot;Transparent&quot;</span><br><span class="line">                &quot;IgnoreProjector&quot; &#x3D; &quot;True&quot;</span><br><span class="line">                &quot;RenderType&quot; &#x3D; &quot;Transparent&quot;</span><br><span class="line">                &quot;PreviewType&quot; &#x3D; &quot;Plane&quot;</span><br><span class="line">                &quot;CanUseSpriteAtlas&quot; &#x3D; &quot;True&quot;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Stencil</span><br><span class="line">            &#123;</span><br><span class="line">                Ref[_Stencil]</span><br><span class="line">                Comp[_StencilComp]</span><br><span class="line">                Pass[_StencilOp]</span><br><span class="line">                ReadMask[_StencilReadMask]</span><br><span class="line">                WriteMask[_StencilWriteMask]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Cull Off</span><br><span class="line">            Lighting Off</span><br><span class="line">            ZWrite Off</span><br><span class="line">            ZTest[unity_GUIZTestMode]</span><br><span class="line">            Blend SrcAlpha OneMinusSrcAlpha</span><br><span class="line">            ColorMask[_ColorMask]</span><br><span class="line"></span><br><span class="line">            Pass</span><br><span class="line">            &#123;</span><br><span class="line">                Name &quot;Default&quot;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">                #pragma vertex vert</span><br><span class="line">                #pragma fragment frag</span><br><span class="line">                #pragma target 2.0</span><br><span class="line"></span><br><span class="line">                #include &quot;UnityCG.cginc&quot;</span><br><span class="line">                #include &quot;UnityUI.cginc&quot;</span><br><span class="line"></span><br><span class="line">                #pragma multi_compile_local _ UNITY_UI_CLIP_RECT</span><br><span class="line">                #pragma multi_compile_local _ UNITY_UI_ALPHACLIP</span><br><span class="line"></span><br><span class="line">                struct appdata_t</span><br><span class="line">                &#123;</span><br><span class="line">                    float4 vertex   : POSITION;</span><br><span class="line">                    float4 color    : COLOR;</span><br><span class="line">                    float2 texcoord : TEXCOORD0;</span><br><span class="line">                    UNITY_VERTEX_INPUT_INSTANCE_ID</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                struct v2f</span><br><span class="line">                &#123;</span><br><span class="line">                    float4 vertex   : SV_POSITION;</span><br><span class="line">                    fixed4 color : COLOR;</span><br><span class="line">                    float2 texcoord  : TEXCOORD0;</span><br><span class="line">                    float4 worldPosition : TEXCOORD1;</span><br><span class="line">                    UNITY_VERTEX_OUTPUT_STEREO</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                sampler2D _MainTex;</span><br><span class="line">                fixed4 _Color;</span><br><span class="line">                fixed4 _TextureSampleAdd;</span><br><span class="line">                float4 _ClipRect;</span><br><span class="line">                float4 _MainTex_ST;</span><br><span class="line"></span><br><span class="line">                v2f vert(appdata_t v)</span><br><span class="line">                &#123;</span><br><span class="line">                    v2f OUT;</span><br><span class="line">                    UNITY_SETUP_INSTANCE_ID(v);</span><br><span class="line">                    UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(OUT);</span><br><span class="line">                    OUT.worldPosition &#x3D; v.vertex;</span><br><span class="line">                    OUT.vertex &#x3D; UnityObjectToClipPos(OUT.worldPosition);</span><br><span class="line"></span><br><span class="line">                    OUT.texcoord &#x3D; TRANSFORM_TEX(v.texcoord, _MainTex);</span><br><span class="line"></span><br><span class="line">                    OUT.color &#x3D; v.color * _Color;</span><br><span class="line">                    return OUT;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                fixed4 frag(v2f IN) : SV_Target</span><br><span class="line">                &#123;</span><br><span class="line">                    half4 color &#x3D; (tex2D(_MainTex, IN.texcoord) + _TextureSampleAdd) * IN.color;</span><br><span class="line"></span><br><span class="line">                    #ifdef UNITY_UI_CLIP_RECT</span><br><span class="line">                    &#x2F;&#x2F; only edit this line :D</span><br><span class="line">                    color.a *&#x3D; 1 - UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);</span><br><span class="line">                    #endif</span><br><span class="line"></span><br><span class="line">                    #ifdef UNITY_UI_ALPHACLIP</span><br><span class="line">                    clip(color.a - 0.001);</span><br><span class="line">                    #endif</span><br><span class="line"></span><br><span class="line">                    return color;</span><br><span class="line">                &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;#ifndef UNITY_UI_INCLUDED</span><br><span class="line">&#x2F;&#x2F;#define UNITY_UI_INCLUDED</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;inline float UnityGet2DClipping(in float2 position, in float4 clipRect)</span><br><span class="line">&#x2F;&#x2F;&#123;</span><br><span class="line">&#x2F;&#x2F;    float2 inside &#x3D; step(clipRect.xy, position.xy) * step(position.xy, clipRect.zw);</span><br><span class="line">&#x2F;&#x2F;    return inside.x * inside.y;</span><br><span class="line">&#x2F;&#x2F;&#125;</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;inline fixed4 UnityGetUIDiffuseColor(in float2 position, in sampler2D mainTexture, in sampler2D alphaTexture, fixed4 textureSampleAdd)</span><br><span class="line">&#x2F;&#x2F;&#123;</span><br><span class="line">&#x2F;&#x2F;    return fixed4(tex2D(mainTexture, position).rgb + textureSampleAdd.rgb, tex2D(alphaTexture, position).r + textureSampleAdd.a);</span><br><span class="line">&#x2F;&#x2F;&#125;</span><br><span class="line">&#x2F;&#x2F;#endif</span><br></pre></td></tr></table></figure><p>调整裁切区域的脚本可以参考 RectMask2D 来写，我只是浅浅试一试。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">ExecuteAlways, DisallowMultipleComponent, RequireComponent(typeof(RectTransform))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CutRectSetter</span> : <span class="title">UIBehaviour</span>, <span class="title">IClipper</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> Canvas _canvas;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> MaskableGraphic _clipTarget;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> m_shouldRecalculateClipRects = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> Rect m_prevClipRect = <span class="keyword">default</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> m_hasClipped = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PerformClipping</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// IDK why unity use ReferenceEquals, I just copied it from RectMask2D.cs :(</span></span><br><span class="line">        <span class="keyword">if</span> (ReferenceEquals(_canvas, <span class="literal">null</span>) || <span class="literal">null</span> == _clipTarget)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        RectTransform selfRectTransform = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">        RectTransform targetTectTransform = _clipTarget.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">        <span class="keyword">if</span> (!IsInsideRect(selfRectTransform, targetTectTransform))</span><br><span class="line">        &#123;</span><br><span class="line">            CancelClip();</span><br><span class="line">            m_prevClipRect = <span class="keyword">default</span>;</span><br><span class="line">            m_shouldRecalculateClipRects = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Rect currentRect = selfRectTransform.rect;</span><br><span class="line">        Vector2 selfPivot = selfRectTransform.pivot;</span><br><span class="line">        <span class="comment">// get pivot position</span></span><br><span class="line">        currentRect.position = SwitchToRectTransform(selfRectTransform, targetTectTransform);</span><br><span class="line">        <span class="comment">// rect's position is bottom left</span></span><br><span class="line">        Vector2 delta = <span class="keyword">new</span> Vector2(-currentRect.width * selfPivot.x, -currentRect.height * selfPivot.y);</span><br><span class="line">        currentRect.position += delta;</span><br><span class="line"></span><br><span class="line">        m_shouldRecalculateClipRects = m_shouldRecalculateClipRects || m_prevClipRect != currentRect;</span><br><span class="line">        <span class="keyword">if</span> (m_shouldRecalculateClipRects)</span><br><span class="line">        &#123;</span><br><span class="line">            _clipTarget.SetClipRect(<span class="keyword">default</span>, <span class="literal">true</span>);</span><br><span class="line">            _clipTarget.SetClipRect(currentRect, <span class="literal">true</span>);</span><br><span class="line">            _clipTarget.Cull(currentRect, <span class="literal">true</span>);</span><br><span class="line">            m_prevClipRect = currentRect;</span><br><span class="line">            m_shouldRecalculateClipRects = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">ContextMenu(nameof(CancelClip))</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CancelClip</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _clipTarget.SetClipRect(<span class="keyword">default</span>, <span class="literal">true</span>);</span><br><span class="line">        m_hasClipped = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnEnable();</span><br><span class="line">        m_shouldRecalculateClipRects = <span class="literal">true</span>;</span><br><span class="line">        ClipperRegistry.Register(<span class="keyword">this</span>);</span><br><span class="line">        MaskUtilities.Notify2DMaskStateChanged(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnDisable();</span><br><span class="line">        ClipperRegistry.Unregister(<span class="keyword">this</span>);</span><br><span class="line">        MaskUtilities.Notify2DMaskStateChanged(<span class="keyword">this</span>);</span><br><span class="line">        CancelClip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnTransformParentChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_shouldRecalculateClipRects = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnCanvasHierarchyChanged</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_shouldRecalculateClipRects = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> some utils</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_TOP = <span class="keyword">new</span> Vector2(<span class="number">0.5f</span>, <span class="number">1f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_BOTTOM = <span class="keyword">new</span> Vector2(<span class="number">0.5f</span>, <span class="number">0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_LEFT = <span class="keyword">new</span> Vector2(<span class="number">0f</span>, <span class="number">0.5f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_RIGHT = <span class="keyword">new</span> Vector2(<span class="number">1f</span>, <span class="number">0.5f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_CENTER = <span class="keyword">new</span> Vector2(<span class="number">0.5f</span>, <span class="number">0.5f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_BOTTOM_LEFT = <span class="keyword">new</span> Vector2(<span class="number">0f</span>, <span class="number">0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_BOTTOM_RIGHT = <span class="keyword">new</span> Vector2(<span class="number">1f</span>, <span class="number">0f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_TOP_LEFT = <span class="keyword">new</span> Vector2(<span class="number">0f</span>, <span class="number">1f</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> Vector2 RECT_TOP_RIGHT = <span class="keyword">new</span> Vector2(<span class="number">1f</span>, <span class="number">1f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vector2 <span class="title">SwitchToRectTransform</span>(<span class="params">RectTransform <span class="keyword">from</span>, RectTransform to</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Vector2 screenP = RectTransformUtility.WorldToScreenPoint(<span class="literal">null</span>, <span class="keyword">from</span>.position);</span><br><span class="line">        RectTransformUtility.ScreenPointToLocalPointInRectangle(to, screenP, <span class="literal">null</span>, <span class="keyword">out</span> Vector2 localPoint);</span><br><span class="line">        <span class="keyword">return</span> localPoint;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">IsInsideRect</span>(<span class="params">RectTransform rectTransform, RectTransform outterRect</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Vector3 checkWorldPoint = RectOffsetToWorld(rectTransform, RECT_BOTTOM_LEFT);</span><br><span class="line">        <span class="keyword">bool</span> bottomLeftOut = !RectTransformUtility.RectangleContainsScreenPoint(outterRect, checkWorldPoint);</span><br><span class="line">        checkWorldPoint = RectOffsetToWorld(rectTransform, RECT_BOTTOM_RIGHT);</span><br><span class="line">        <span class="keyword">bool</span> bottomRightOut = !RectTransformUtility.RectangleContainsScreenPoint(outterRect, checkWorldPoint);</span><br><span class="line">        checkWorldPoint = RectOffsetToWorld(rectTransform, RECT_TOP_LEFT);</span><br><span class="line">        <span class="keyword">bool</span> topLeftOut = !RectTransformUtility.RectangleContainsScreenPoint(outterRect, checkWorldPoint);</span><br><span class="line">        checkWorldPoint = RectOffsetToWorld(rectTransform, RECT_TOP_RIGHT);</span><br><span class="line">        <span class="keyword">bool</span> topRightOut = !RectTransformUtility.RectangleContainsScreenPoint(outterRect, checkWorldPoint);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> !(bottomLeftOut || bottomRightOut || topLeftOut || topRightOut);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vector3 <span class="title">RectOffsetToWorld</span>(<span class="params">RectTransform rectTransform, Vector2 normalizedRectPosition</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Rect selfRect = rectTransform.rect;</span><br><span class="line">        Vector2 localposition = Vector2.zero;</span><br><span class="line">        <span class="keyword">if</span> (RECT_CENTER == normalizedRectPosition) <span class="comment">// RectPositionType.Center</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = selfRect.center;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_TOP == normalizedRectPosition) <span class="comment">// RectPositionType.Top</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.center.x, selfRect.yMax);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_BOTTOM == normalizedRectPosition) <span class="comment">// RectPositionType.Bottom</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.center.x, selfRect.yMin);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_LEFT == normalizedRectPosition) <span class="comment">// RectPositionType.Left</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.xMin, selfRect.center.y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_RIGHT == normalizedRectPosition) <span class="comment">// RectPositionType.Right</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.xMax, selfRect.center.y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_TOP_LEFT == normalizedRectPosition) <span class="comment">// RectPositionType.TopLeft</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.xMin, selfRect.yMax);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_TOP_RIGHT == normalizedRectPosition) <span class="comment">// RectPositionType.TopRight</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = selfRect.max;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_BOTTOM_LEFT == normalizedRectPosition) <span class="comment">// RectPositionType.BottomLeft</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = selfRect.min;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (RECT_BOTTOM_RIGHT == normalizedRectPosition) <span class="comment">// RectPositionType.BottomRight</span></span><br><span class="line">        &#123;</span><br><span class="line">            localposition = <span class="keyword">new</span> Vector2(selfRect.xMax, selfRect.yMin);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$"<span class="subst">&#123;normalizedRectPosition&#125;</span> is not a normalized rect position"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rectTransform.TransformPoint(localposition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/07/20241207-simple-uiimage-cutout/20241207-pic002.gif" class="" title="split"><p>试了一下感觉功能可用，调整挖口大小的参考物体无需作为被挖物体的父或子，效果预览非常方便。</p><p>但这个做法有两个比较可惜的点<br>1 此做法只能挖放行的缺口<br>2 当前只挖缺口，没有做柔软处理，估计还得照着 RectMask2D 的思路去做软化</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本周接到了强制引导的功能需求，本周就要做好。我之前没有做过这个需求，说实在的不知道那个图上挖洞的功能怎么做。&lt;/p&gt;
&lt;img src=&quot;/2024/12/07/20241207-simple-uiimage-cutout/20241207-pic001.png&quot; clas
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>给PrimeTween新增小小的异步代码支持</title>
    <link href="http://yoursite.com/2024/10/29/20241029-primetween-async-extension/"/>
    <id>http://yoursite.com/2024/10/29/20241029-primetween-async-extension/</id>
    <published>2024-10-29T14:59:49.000Z</published>
    <updated>2024-12-07T12:52:44.015Z</updated>
    
    <content type="html"><![CDATA[<p>最近做的新项目没有使用 DOTween 了，转而使用性能比较高的 <a href="https://github.com/KyryloKuzyk/PrimeTween" target="_blank" rel="noopener">PrimeTween</a>。这是一个比较新的插件，看了下大概是前两年上架的。<br>比起历史悠久的 DOTween 相比， PrimeTween 虽然性能很高，但是不像 DOTween 有丰富的特性以及一些额外的其它插件的联动支持。</p><p>具体的就说 UniTask 吧，他有一个专门的<a href="https://github.com/Cysharp/UniTask/blob/master/src/UniTask/Assets/Plugins/UniTask/Runtime/External/DOTween/DOTweenAsyncExtensions.cs" target="_blank" rel="noopener">拓展类</a>给予 DOTwee 异步相关的支持。这里面有我现在马上就需要用到的 “使用 CancellationToken 取消对 Tween 的异步等待” 的功能。</p><p>PrimeTween 没有这个支持，没关系，我只要照着这个拓展类抄一个就好，虽然这俩Tween的实现不太一样，但是核心的行为还是非常相似的。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>稍微点F12跳两下就发现，其实这个功能的实现思路就是通过方法 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.threading.cancellationtoken.register?view=net-8.0" target="_blank" rel="noopener">CancellationToken.Register</a> 去给C ancellationToken 收到取消请求的时机注册一个回调。在这个回调中去处理关于Tween的各种处理。</p><p>DOTween 的拓展处理中会把原本 Tween 的正常播放完成相关回调拿出来然后缓存在自己的结构中并换上自己的响应动画的正常完成。PrimeTween 和 DOTween 不一样的地方在于 PrimeTween 的回调不能重复绑定，所以照着抄的时候为了保证代码的一致性，我选择用 PrimeTween 插件中的 Sequence 把原本的 Tween/Sequence 包装起来，似乎这个应该是他插件本身就推荐的做法。当然包起来以后就不可以再编辑原 Tween 的一些参数了。</p><p>PrimeTween 高性能的原因似乎是他把实际执行 Tween 行为的实例都用对象池管理起来了，不像 DOTween 需要用户自己管理动画实例对象。而且 DOTween 的用于存放相关动画参数的数据结构 TweenSetting 好像也是类，这点其实让我有点讨厌。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Cysharp.Threading.Tasks</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> TweenCancelBehaviour</span><br><span class="line">    &#123;</span><br><span class="line">        KillAndCancelAwait,</span><br><span class="line">        <span class="comment">// TODO @Hiko finish those cancel behaviour if really need :)</span></span><br><span class="line">        <span class="comment">// Kill,</span></span><br><span class="line">        <span class="comment">//KillWithCompleteCallback,</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">PrimeTweenAsyncExtensions</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">struct</span> TweenAwaiter : ICriticalNotifyCompletion</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Tween tween;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Sequence warppedSequence;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// killed(non active) as completed.</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> IsCompleted =&gt; !tween.isAlive;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">TweenAwaiter</span>(<span class="params">Tween tween</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">this</span>.tween = tween;</span><br><span class="line">                warppedSequence = Sequence.Create(<span class="keyword">this</span>.tween);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> TweenAwaiter <span class="title">GetAwaiter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetResult</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCompleted</span>(<span class="params">Action continuation</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                UnsafeOnCompleted(continuation);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnsafeOnCompleted</span>(<span class="params">Action continuation</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="comment">// onKill is called after OnCompleted, both Complete(false/true) and Kill(false/true).</span></span><br><span class="line">                warppedSequence.OnComplete(PooledPrimeTweenCallback.Create(continuation));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TweenAwaiter <span class="title">GetAwaiter</span>(<span class="params"><span class="keyword">this</span> Tween tween</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> TweenAwaiter(tween);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UniTask <span class="title">WithCancellation</span>(<span class="params"><span class="keyword">in</span> <span class="keyword">this</span> Tween tween, CancellationToken cancellationToken</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!tween.isAlive) <span class="keyword">return</span> UniTask.CompletedTask;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UniTask(TweenConfiguredSource.Create(tween, TweenCancelBehaviour.KillAndCancelAwait, cancellationToken, <span class="keyword">out</span> <span class="keyword">var</span> token, <span class="keyword">out</span> _), token);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UniTask <span class="title">WithCancellation</span>(<span class="params"><span class="keyword">in</span> <span class="keyword">this</span> Tween tween, CancellationToken cancellationToken, <span class="keyword">out</span> Sequence warppedTween</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            warppedTween = <span class="keyword">default</span>;</span><br><span class="line">            <span class="keyword">if</span> (!tween.isAlive) <span class="keyword">return</span> UniTask.CompletedTask;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UniTask(TweenConfiguredSource.Create(tween, TweenCancelBehaviour.KillAndCancelAwait, cancellationToken, <span class="keyword">out</span> <span class="keyword">var</span> token, <span class="keyword">out</span> warppedTween), token);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private sealed class TweenConfiguredSource : IUniTaskSource, ITaskPoolNode&lt;TweenConfiguredSource&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">static</span> TaskPool&lt;TweenConfiguredSource&gt; s_pool;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> TweenConfiguredSource m_nextNode;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> Tween m_tween;</span><br><span class="line">            <span class="comment">// use sequence to warp the original tween cuz original tween may already bind a completion callback</span></span><br><span class="line">            <span class="keyword">private</span> Sequence m_warppedSequence;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> TweenCancelBehaviour m_cancelBehaviour;</span><br><span class="line">            <span class="keyword">private</span> CancellationToken m_cancellationToken;</span><br><span class="line">            <span class="keyword">private</span> CancellationTokenRegistration m_cancellationRegistration;</span><br><span class="line">            <span class="keyword">bool</span> m_isCanceled;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> UniTaskCompletionSourceCore&lt;AsyncUnit&gt; m_core;</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> event will be triggered when the tween completes normally</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Action m_tweenCompleteNotifyCallback;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">ref</span> TweenConfiguredSource NextNode =&gt; <span class="keyword">ref</span> m_nextNode;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="title">TweenConfiguredSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                TaskPool.RegisterSizeGetter(<span class="keyword">typeof</span>(TweenConfiguredSource), () =&gt; s_pool.Size);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="title">TweenConfiguredSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                m_tweenCompleteNotifyCallback = OnTweenCompleteCallbackDelegate;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IUniTaskSource <span class="title">Create</span>(<span class="params">Tween tween, TweenCancelBehaviour cancelBehaviour, CancellationToken cancellationToken, <span class="keyword">out</span> <span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> Create(tween, cancelBehaviour, cancellationToken, <span class="keyword">out</span> token, <span class="keyword">out</span> _);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IUniTaskSource <span class="title">Create</span>(<span class="params">Tween tween, TweenCancelBehaviour cancelBehaviour, CancellationToken cancellationToken, <span class="keyword">out</span> <span class="keyword">short</span> token, <span class="keyword">out</span> Sequence warppedTween</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (cancellationToken.IsCancellationRequested)</span><br><span class="line">                &#123;</span><br><span class="line">                    DoCancelBeforeCreate(tween, cancelBehaviour);</span><br><span class="line">                    warppedTween = <span class="keyword">default</span>;</span><br><span class="line">                    <span class="keyword">return</span> AutoResetUniTaskCompletionSource.CreateFromCanceled(cancellationToken, <span class="keyword">out</span> token);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!s_pool.TryPop(<span class="keyword">out</span> <span class="keyword">var</span> result))</span><br><span class="line">                &#123;</span><br><span class="line">                    result = <span class="keyword">new</span> TweenConfiguredSource();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                result.m_tween = tween;</span><br><span class="line">                result.m_cancelBehaviour = cancelBehaviour;</span><br><span class="line">                result.m_cancellationToken = cancellationToken;</span><br><span class="line">                result.m_isCanceled = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">// warp the original tween and bind our comlete callback</span></span><br><span class="line">                result.m_warppedSequence = Sequence.Create(result.m_tween);</span><br><span class="line">                result.m_warppedSequence.OnComplete(result.m_tweenCompleteNotifyCallback);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cancellationToken.CanBeCanceled)</span><br><span class="line">                &#123;</span><br><span class="line">                    result.m_cancellationRegistration = cancellationToken.RegisterWithoutCaptureExecutionContext(x =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        TweenConfiguredSource source = (TweenConfiguredSource)x;</span><br><span class="line">                        <span class="keyword">switch</span> (source.m_cancelBehaviour)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">case</span> TweenCancelBehaviour.KillAndCancelAwait:</span><br><span class="line">                            <span class="keyword">default</span>:</span><br><span class="line">                                <span class="comment">// token canceled stop tween</span></span><br><span class="line">                                source.m_isCanceled = <span class="literal">true</span>;</span><br><span class="line">                                source.m_warppedSequence.Stop();</span><br><span class="line">                                source.OnTweenCompleteCallbackDelegate();</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, result);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                TaskTracker.TrackActiveTask(result, <span class="number">3</span>);</span><br><span class="line">                token = result.m_core.Version;</span><br><span class="line">                warppedTween = result.m_warppedSequence;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoCancelBeforeCreate</span>(<span class="params">Tween tween, TweenCancelBehaviour tweenCancelBehaviour</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">switch</span> (tweenCancelBehaviour)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> TweenCancelBehaviour.KillAndCancelAwait:</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        tween.Stop();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> UniTaskStatus <span class="title">UnsafeGetStatus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> m_core.UnsafeGetStatus();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCompleted</span>(<span class="params">Action&lt;<span class="keyword">object</span>&gt; continuation, <span class="keyword">object</span> state, <span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                m_core.OnCompleted(continuation, state, token);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetResult</span>(<span class="params"><span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.GetResult(token);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    TryReturnSelfToPool();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> UniTaskStatus <span class="title">GetStatus</span>(<span class="params"><span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> m_core.GetStatus(token);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">TryReturnSelfToPool</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                TaskTracker.RemoveTracking(<span class="keyword">this</span>);</span><br><span class="line">                m_core.Reset();</span><br><span class="line">                m_cancellationRegistration.Dispose();</span><br><span class="line"></span><br><span class="line">                m_tween = <span class="keyword">default</span>;</span><br><span class="line">                m_warppedSequence = <span class="keyword">default</span>;</span><br><span class="line">                m_cancellationToken = <span class="keyword">default</span>;</span><br><span class="line">                <span class="keyword">return</span> s_pool.TryPush(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> Tween completes normally</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTweenCompleteCallbackDelegate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m_isCanceled)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.TrySetCanceled(m_cancellationToken);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.TrySetResult(AsyncUnit.Default);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//----------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">struct</span> SequenceAwaiter : ICriticalNotifyCompletion</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Sequence originSequence;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Sequence warppedSequence;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// killed(non active) as completed.</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> IsCompleted =&gt; !originSequence.isAlive;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">SequenceAwaiter</span>(<span class="params">Sequence sequence</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                originSequence = sequence;</span><br><span class="line">                warppedSequence = Sequence.Create();</span><br><span class="line">                warppedSequence.Insert(<span class="number">0f</span>, sequence);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> SequenceAwaiter <span class="title">GetAwaiter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetResult</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCompleted</span>(<span class="params">Action continuation</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                UnsafeOnCompleted(continuation);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnsafeOnCompleted</span>(<span class="params">Action continuation</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="comment">// onKill is called after OnCompleted, both Complete(false/true) and Kill(false/true).</span></span><br><span class="line">                warppedSequence.OnComplete(PooledPrimeTweenCallback.Create(continuation));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SequenceAwaiter <span class="title">GetAwaiter</span>(<span class="params"><span class="keyword">this</span> Sequence tween</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> SequenceAwaiter(tween);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UniTask <span class="title">WithCancellation</span>(<span class="params"><span class="keyword">in</span> <span class="keyword">this</span> Sequence sequence, CancellationToken cancellationToken</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!sequence.isAlive) <span class="keyword">return</span> UniTask.CompletedTask;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UniTask(SequenceConfiguredSource.Create(sequence, TweenCancelBehaviour.KillAndCancelAwait, cancellationToken, <span class="keyword">out</span> <span class="keyword">var</span> token, <span class="keyword">out</span> _), token);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UniTask <span class="title">WithCancellation</span>(<span class="params"><span class="keyword">in</span> <span class="keyword">this</span> Sequence sequence, CancellationToken cancellationToken, <span class="keyword">out</span> Sequence warppedTween</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            warppedTween = <span class="keyword">default</span>;</span><br><span class="line">            <span class="keyword">if</span> (!sequence.isAlive) <span class="keyword">return</span> UniTask.CompletedTask;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UniTask(SequenceConfiguredSource.Create(sequence, TweenCancelBehaviour.KillAndCancelAwait, cancellationToken, <span class="keyword">out</span> <span class="keyword">var</span> token, <span class="keyword">out</span> warppedTween), token);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private sealed class SequenceConfiguredSource : IUniTaskSource, ITaskPoolNode&lt;SequenceConfiguredSource&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">static</span> TaskPool&lt;SequenceConfiguredSource&gt; s_pool;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> SequenceConfiguredSource m_nextNode;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> Sequence m_originSequence;</span><br><span class="line">            <span class="comment">// use sequence to warp the original sequence cuz original tween may already bind a completion callback</span></span><br><span class="line">            <span class="keyword">private</span> Sequence m_warppedSequence;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> TweenCancelBehaviour m_cancelBehaviour;</span><br><span class="line">            <span class="keyword">private</span> CancellationToken m_cancellationToken;</span><br><span class="line">            <span class="keyword">private</span> CancellationTokenRegistration m_cancellationRegistration;</span><br><span class="line">            <span class="keyword">bool</span> m_isCanceled;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> UniTaskCompletionSourceCore&lt;AsyncUnit&gt; m_core;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> Action m_SequenceCompleteNotifyCallback;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">ref</span> SequenceConfiguredSource NextNode =&gt; <span class="keyword">ref</span> m_nextNode;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="title">SequenceConfiguredSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                TaskPool.RegisterSizeGetter(<span class="keyword">typeof</span>(SequenceConfiguredSource), () =&gt; s_pool.Size);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="title">SequenceConfiguredSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                m_SequenceCompleteNotifyCallback = OnSequenceCompleteCallbackDelegate;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IUniTaskSource <span class="title">Create</span>(<span class="params">Sequence Sequence, TweenCancelBehaviour cancelBehaviour, CancellationToken cancellationToken, <span class="keyword">out</span> <span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> Create(Sequence, cancelBehaviour, cancellationToken, <span class="keyword">out</span> token, <span class="keyword">out</span> _);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IUniTaskSource <span class="title">Create</span>(<span class="params">Sequence Sequence, TweenCancelBehaviour cancelBehaviour, CancellationToken cancellationToken, <span class="keyword">out</span> <span class="keyword">short</span> token, <span class="keyword">out</span> Sequence warppedSequence</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (cancellationToken.IsCancellationRequested)</span><br><span class="line">                &#123;</span><br><span class="line">                    DoCancelBeforeCreate(Sequence, cancelBehaviour);</span><br><span class="line">                    warppedSequence = <span class="keyword">default</span>;</span><br><span class="line">                    <span class="keyword">return</span> AutoResetUniTaskCompletionSource.CreateFromCanceled(cancellationToken, <span class="keyword">out</span> token);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!s_pool.TryPop(<span class="keyword">out</span> <span class="keyword">var</span> result))</span><br><span class="line">                &#123;</span><br><span class="line">                    result = <span class="keyword">new</span> SequenceConfiguredSource();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                result.m_originSequence = Sequence;</span><br><span class="line">                result.m_cancelBehaviour = cancelBehaviour;</span><br><span class="line">                result.m_cancellationToken = cancellationToken;</span><br><span class="line">                result.m_isCanceled = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                result.m_warppedSequence = Sequence.Create();</span><br><span class="line">                result.m_warppedSequence.Insert(<span class="number">0f</span>, result.m_originSequence);</span><br><span class="line">                result.m_warppedSequence.OnComplete(result.m_SequenceCompleteNotifyCallback);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cancellationToken.CanBeCanceled)</span><br><span class="line">                &#123;</span><br><span class="line">                    result.m_cancellationRegistration = cancellationToken.RegisterWithoutCaptureExecutionContext(x =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        SequenceConfiguredSource source = (SequenceConfiguredSource)x;</span><br><span class="line">                        <span class="keyword">switch</span> (source.m_cancelBehaviour)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">case</span> TweenCancelBehaviour.KillAndCancelAwait:</span><br><span class="line">                                source.m_isCanceled = <span class="literal">true</span>;</span><br><span class="line">                                source.m_warppedSequence.Stop();</span><br><span class="line">                                source.OnSequenceCompleteCallbackDelegate();</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">default</span>:</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, result);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                TaskTracker.TrackActiveTask(result, <span class="number">3</span>);</span><br><span class="line">                token = result.m_core.Version;</span><br><span class="line">                warppedSequence = result.m_warppedSequence;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoCancelBeforeCreate</span>(<span class="params">Sequence Sequence, TweenCancelBehaviour tweenCancelBehaviour</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">switch</span> (tweenCancelBehaviour)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> TweenCancelBehaviour.KillAndCancelAwait:</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        Sequence.Stop();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> UniTaskStatus <span class="title">UnsafeGetStatus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> m_core.UnsafeGetStatus();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCompleted</span>(<span class="params">Action&lt;<span class="keyword">object</span>&gt; continuation, <span class="keyword">object</span> state, <span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                m_core.OnCompleted(continuation, state, token);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetResult</span>(<span class="params"><span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.GetResult(token);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    TryReturnSelfToPool();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> UniTaskStatus <span class="title">GetStatus</span>(<span class="params"><span class="keyword">short</span> token</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">return</span> m_core.GetStatus(token);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">TryReturnSelfToPool</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                TaskTracker.RemoveTracking(<span class="keyword">this</span>);</span><br><span class="line">                m_core.Reset();</span><br><span class="line">                m_cancellationRegistration.Dispose();</span><br><span class="line"></span><br><span class="line">                m_originSequence = <span class="keyword">default</span>;</span><br><span class="line">                m_warppedSequence = <span class="keyword">default</span>;</span><br><span class="line">                m_cancellationToken = <span class="keyword">default</span>;</span><br><span class="line">                <span class="keyword">return</span> s_pool.TryPush(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnSequenceCompleteCallbackDelegate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m_isCanceled)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.TrySetCanceled(m_cancellationToken);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    m_core.TrySetResult(AsyncUnit.Default);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">PooledPrimeTweenCallback</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> ConcurrentQueue&lt;PooledPrimeTweenCallback&gt; s_pool = <span class="keyword">new</span> ConcurrentQueue&lt;PooledPrimeTweenCallback&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> Action m_runDelegate;</span><br><span class="line">        <span class="keyword">private</span> Action m_continuation;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">PooledPrimeTweenCallback</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_runDelegate = Run;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">MethodImpl(MethodImplOptions.AggressiveInlining)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Action <span class="title">Create</span>(<span class="params">Action continuation</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!s_pool.TryDequeue(<span class="keyword">out</span> PooledPrimeTweenCallback item))</span><br><span class="line">            &#123;</span><br><span class="line">                item = <span class="keyword">new</span> PooledPrimeTweenCallback();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            item.m_continuation = continuation;</span><br><span class="line">            <span class="keyword">return</span> item.m_runDelegate;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">MethodImpl(MethodImplOptions.AggressiveInlining)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Action call = m_continuation;</span><br><span class="line">            m_continuation = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (call != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s_pool.Enqueue(<span class="keyword">this</span>);</span><br><span class="line">                call.Invoke();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做的新项目没有使用 DOTween 了，转而使用性能比较高的 &lt;a href=&quot;https://github.com/KyryloKuzyk/PrimeTween&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PrimeTween&lt;/a&gt;。这是一个比较
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Serialization 序列化小笔记</title>
    <link href="http://yoursite.com/2024/07/14/20240714-unity-serialization-1/"/>
    <id>http://yoursite.com/2024/07/14/20240714-unity-serialization-1/</id>
    <published>2024-07-14T09:47:27.000Z</published>
    <updated>2024-07-14T09:56:54.654Z</updated>
    
    <content type="html"><![CDATA[<p>序列化（serialization）在计算机科学的资料处理中，是指将数据结构或对象状态转换成可取用格式（例如存成文件，存于缓冲，或经由网络中发送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。</p><h1 id="序列化的发生"><a href="#序列化的发生" class="headerlink" title="序列化的发生"></a>序列化的发生</h1><p>当我们用(UnityEngine.Object.Instantiate())此方法去生成一个 UnityObject 时候，就经历了序列化和反序列化的操作。</p><blockquote><p>Original Object —serialize—&gt; mid-data —deserialize—&gt; Spawned Object</p></blockquote><h1 id="序列化使用场景"><a href="#序列化使用场景" class="headerlink" title="序列化使用场景"></a>序列化使用场景</h1><h2 id="保存相关资产"><a href="#保存相关资产" class="headerlink" title="保存相关资产"></a>保存相关资产</h2><p>我们的许多 UnityObject 资产 scene, prefab, material 都是以文本文件(YAML)的形式保存在项目中。编辑器时，会在 Library 中存放’中间物体’。<br>我猜测，编辑器时会使用这些’中间物体’以减少实际序列化的步骤来加速运行。</p><p>当我们将磁盘里的 Asset 加载到游戏的运行时里的 UnityObject 的过程，是一个反序列化操作，把YAML反序列化成 UnityObject。</p><p>在编辑器时，我们会修改脚本，改变一些数据类型。把字段名称修改后，原本序列化的值丢失了。我猜是因为项目在 Refresh 的时候，会先把所有必要的数据都序列化存入’中间物体’，然后等代码编译完，生成了新的类型，再尝试把原本的’中间物体’用新的类型反序列化生成新物体并在序列化生成新的’中间物体’。这个过程中由于是使用新类型进行反序列化了，自然会抛弃新类型中没有的(不同名且类型不匹配的)数据。引擎C#层重载 HotReloading 会报错但是有可能凑合能跑估计也是这个原因，所以 HotReloading 实际上是为了让我们快速修改业务逻辑看看有无修好的。</p><p>FormerlySerializedAs(PROPERTY_NAME) 这个特性可以解决上面说的这个问题，但其实就是要求这个字段做序列化相关操作时沿用旧的字段名(PROPERTY_NAME)。这样在 prefab 中序列化下来记录的字段名一直都是那个旧的字段名。</p><!-- check https://zhuanlan.zhihu.com/p/139978773 --><h2 id="编辑器的字段绘制"><a href="#编辑器的字段绘制" class="headerlink" title="编辑器的字段绘制"></a>编辑器的字段绘制</h2><p>当我们对字段做做编辑器绘制的时候，也会有序列化以及反序列化的操作。</p><blockquote><p>Inspector —update changes—&gt; Serialized Properties —deserialize—&gt; Spawned Object<br>Inspector &lt;—update view— Serialized Properties —serialize—&gt; Spawned Object</p></blockquote><p>UnityObject 中的字段值会被序列化到 Serialized Properties 集合中，然后编辑器绘制相关的代码拿到序列化后得到的数据集合，再把他们提出来并根据数据类型画不同的样式。<br>下面是一个 PropertuDrawer 的例子，在绘制方法的参数中有 SerializedProperty，这个就是用于存放 UnityObject 中被序列化字段的 wrapper。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">CustomPropertyDrawer(typeof(NormalizedCurve))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NormalizedCurvePropertyDrawer</span> : <span class="title">PropertyDrawer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">string</span> CURVE_FIELD = <span class="string">"_curve"</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">readonly</span> Rect RANGES = <span class="keyword">new</span> Rect(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params">Rect position, SerializedProperty property, GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorGUI.BeginProperty(position, label, property);</span><br><span class="line">        <span class="keyword">var</span> curveProperty = property.FindPropertyRelative(CURVE_FIELD);</span><br><span class="line"><span class="comment">// ....</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对-UnityObject-引用的序列化"><a href="#对-UnityObject-引用的序列化" class="headerlink" title="对 UnityObject 引用的序列化"></a>对 UnityObject 引用的序列化</h2><p>哦我的老兄，这个大家都很熟悉了。以文本的形式打开我们的 prefab 康康。摘一段</p><p><a href="https://docs.unity3d.com/Manual/ClassIDReference.html" target="_blank" rel="noopener">UnityScriptClassType</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">--- !u!114 &amp;7941049597127225971 &#x2F;&#x2F; !u!CLASS_TYPE &amp;OBJECT_FILE_ID</span><br><span class="line">MonoBehaviour:</span><br><span class="line">  m_ObjectHideFlags: 0</span><br><span class="line">  m_CorrespondingSourceObject: &#123;fileID: 0&#125;</span><br><span class="line">  m_PrefabInstance: &#123;fileID: 0&#125;</span><br><span class="line">  m_PrefabAsset: &#123;fileID: 0&#125;</span><br><span class="line">  m_GameObject: &#123;fileID: 3753066996938937369&#125;</span><br><span class="line">  m_Enabled: 1</span><br><span class="line">  m_EditorHideFlags: 0</span><br><span class="line">  m_Script: &#123;fileID: 11500000, guid: 43f865a8433367346843b29a2464c1a7, type: 3&#125; &#x2F;&#x2F; guid point to this object instance&#39;s asset source</span><br><span class="line">  m_Name: </span><br><span class="line">  m_EditorClassIdentifier: </span><br><span class="line">  m_Material: &#123;fileID: 0&#125;</span><br><span class="line">  m_Color: &#123;r: 1, g: 1, b: 1, a: 1&#125;</span><br><span class="line">  m_RaycastTarget: 1</span><br><span class="line">  m_RaycastPadding: &#123;x: 0, y: 0, z: 0, w: 0&#125;</span><br></pre></td></tr></table></figure><p>首行表明了该 UnityObject 的类型以及它在这个 Prefab 中的唯一标识ID。<br>m_Script 这一行表明了这个物体是个 .cs 脚本。</p><p>我们还能发现有些字段只记录 { FileID }, 有些却要记录三个参数 {fileID, guid, type} 。记录三个参数的表明的是这个 prefab 内的物体的外部来源。听起来很别扭，我说详细点吧，就好比说一个 prefab A 中包含了一个 prefab B，那么 B 物体就是需要在 prefab A 中以如上方式记录。 其中 guid 是 prefab B 所在(定义处)的资源文件的 guid, FileID 则是这个物体在资源内的唯一ID，type 是这个物体的资源类型。</p><p>所以 UnityObject 引用的序列化是依靠以文本的形式记录ID完成的。</p><h2 id="对空引用-null-的支持"><a href="#对空引用-null-的支持" class="headerlink" title="对空引用(null)的支持"></a>对空引用(null)的支持</h2><p>空引用只支持 UnityObject 捏，如果是我们自定义的 C# class, 序列化时会生成默认的给他。这个时候如果有疯狂嵌套的 C# class就会爆炸了，因为他会一直往里层生成默认值给这些可序列化的 C# Class object。</p><!-- 相关资料 --><!-- https://zhuanlan.zhihu.com/p/565721314 -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;序列化（serialization）在计算机科学的资料处理中，是指将数据结构或对象状态转换成可取用格式（例如存成文件，存于缓冲，或经由网络中发送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。&lt;/p&gt;
&lt;h1 id=&quot;序列化的发生&quot;&gt;&lt;a href=&quot;#序列
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>Unity Library Artifacts 目录下的文件初看！</title>
    <link href="http://yoursite.com/2024/07/13/20240713-unity-library-artifacts/"/>
    <id>http://yoursite.com/2024/07/13/20240713-unity-library-artifacts/</id>
    <published>2024-07-13T09:50:31.000Z</published>
    <updated>2024-07-14T11:20:59.163Z</updated>
    
    <content type="html"><![CDATA[<p>Library 目录下有大量的缓存文件。其中包含着导入进项目里的资源文件以及一些导入资源后产生的用于文件(可能是用于记录关系或是一些关于资源的额外的缓存数据？)。</p><p>每当有资源导入/刷新修改时，Library 都会有文件发生变更(增删改)。</p><h1 id="Artifacts-目录"><a href="#Artifacts-目录" class="headerlink" title="Artifacts 目录"></a>Artifacts 目录</h1><p>Unity 提供了一个工具可以把 Artifacts 里的文件转成人话 </p><blockquote><p>C:\Program Files\Unity\Hub\Editor\UNITY_VERSION\Editor\Data\Tools\binary2text.exe</p></blockquote><p>Artifacts 目录下存放各个资源在导入阶段后期生成的缓存文件。似乎这些文件由资产的哈希值作为键来命名。这些文件在 Unity 内部被称为 producedFiles (在 Log 中使用改名字称呼这些文件；但在AssetV2中似乎已经没有这个东西)。</p><p>为什么 Libraray 目录会比 Asset 大很多，其中一个原因是这样的。以脚本文件举例，在这个缓存文件中，不仅仅有该脚本的代码文本，同时还以文本的形式记录着该资产相关的一些ID，以及资产的存储类型？。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">ID: 3 (ClassID: 1035) MonoImporter</span><br><span class="line">m_ObjectHideFlags 0 (unsigned int)</span><br><span class="line">m_CorrespondingSourceObject  (PPtr&lt;EditorExtension&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64) &#x2F;&#x2F; signed long?</span><br><span class="line">m_PrefabInstance  (PPtr&lt;PrefabInstance&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_PrefabAsset  (PPtr&lt;Prefab&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_Name &quot;&quot; (string)</span><br><span class="line">m_ExternalObjects  (map)</span><br><span class="line">size 0 (int)</span><br><span class="line"></span><br><span class="line">m_UsedFileIDs  (set)</span><br><span class="line">size 1 (int)</span><br><span class="line">data (SInt64) #0: 11500000</span><br><span class="line">m_DefaultReferences  (vector)</span><br><span class="line">size 0 (int)</span><br><span class="line"></span><br><span class="line">executionOrder 0 (SInt16)</span><br><span class="line">icon  (PPtr&lt;Texture2D&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_UserData &quot;&quot; (string)</span><br><span class="line">m_AssetBundleName &quot;&quot; (string)</span><br><span class="line">m_AssetBundleVariant &quot;&quot; (string)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ID: 11500000 (ClassID: 115) MonoScript</span><br><span class="line">m_ObjectHideFlags 0 (unsigned int)</span><br><span class="line">m_CorrespondingSourceObject  (PPtr&lt;EditorExtension&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_PrefabInstance  (PPtr&lt;PrefabInstance&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_PrefabAsset  (PPtr&lt;Prefab&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_Name &quot;IntEqualBehaviour&quot; (string)</span><br><span class="line">m_Script &quot;using UnityEngine;</span><br><span class="line"></span><br><span class="line">&quot; (string) &#x2F;&#x2F; 资产的存储类型?</span><br><span class="line">m_DefaultReferences  (map)</span><br><span class="line">size 0 (int)</span><br><span class="line"></span><br><span class="line">m_Icon  (PPtr&lt;Object&gt;)</span><br><span class="line">m_FileID 0 (int)</span><br><span class="line">m_PathID 0 (SInt64)</span><br><span class="line">m_ExecutionOrder 0 (int)</span><br><span class="line">m_ClassName &quot;IntEqualBehaviour&quot; (string)</span><br><span class="line">m_Namespace &quot;Core.UI&quot; (string)</span><br></pre></td></tr></table></figure><p>这是一条导入的Log.</p><blockquote><p>[Worker0] Start importing Assets/Script/UI/Core/PrimitiveBehaviour/IntEqualBehaviour.cs using Guid(ce9400962fc00544a89e0e69c863b84c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) [Worker0]  -&gt; (artifact id: ‘840ab621654cd480e1699784fa88cf93’) in 0.005725 seconds </p></blockquote><p>‘ce9400962fc00544a89e0e69c863b84c’ 是该脚本作为资产的GUID，和meta文件中的GUID一致。<br>Importer(815301076,1909f56bfc062723c751e8b465ee728b) 猜测为指向倒入该资源使用的导入器类型，以及该导入器作为 Asset 时候的GUID。</p><p>如下代码用于追踪某个资产在 Artifacts 中的键名和位置。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> guidString = AssetDatabase.AssetPathToGUID(assetPath);</span><br><span class="line"><span class="keyword">string</span> hash = AssetDatabaseExperimental.GetArtifactHash(guidString);</span><br><span class="line">AssetDatabaseExperimental.GetArtifactPaths(hash, <span class="keyword">out</span> <span class="keyword">var</span> paths);</span><br></pre></td></tr></table></figure><h2 id="缓存损坏处理"><a href="#缓存损坏处理" class="headerlink" title="缓存损坏处理"></a>缓存损坏处理</h2><p>这个问题造成的原因很多，但是基本就是 Artifacts 里的关于资产的缓存文件坏了。其表现就是那个资产的图标变成白纸，然后无法使用了。<br>但是有时候对着这个资产点击 Reimport 并不能解决问题。</p><p>我认为正确的思路就是把这个坏的缓存杀掉，再生成一个新的</p><ol><li>只有几个资产的缓存坏掉的情况，可以把这几个资产从项目中拿出来。刷新项目，再把资产放回去，重新生成缓存。</li><li>有多个资产缓存爆炸的情况，需要先收集资产列表，然后用上面的代码追溯所有坏掉的缓存并杀掉，再重新导入这些资产。(只是猜测，并未实践过。因为这个情况很少见，感觉不如直接把Library杀了全部重刷下班吃饭)</li></ol><h2 id="资料来源"><a href="#资料来源" class="headerlink" title="资料来源"></a>资料来源</h2><p><a href="https://uninomicon.com/library" target="_blank" rel="noopener">网上找到的活爹</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Library 目录下有大量的缓存文件。其中包含着导入进项目里的资源文件以及一些导入资源后产生的用于文件(可能是用于记录关系或是一些关于资源的额外的缓存数据？)。&lt;/p&gt;
&lt;p&gt;每当有资源导入/刷新修改时，Library 都会有文件发生变更(增删改)。&lt;/p&gt;
&lt;h1 id
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>Unity Inspector 绘制非序列化字段</title>
    <link href="http://yoursite.com/2024/06/29/20240629-drawnonserializefields/"/>
    <id>http://yoursite.com/2024/06/29/20240629-drawnonserializefields/</id>
    <published>2024-06-29T08:13:10.000Z</published>
    <updated>2024-07-08T13:46:26.541Z</updated>
    
    <content type="html"><![CDATA[<p>在MonoBehaviour里给字段打上 <code>[SerializedField]</code> 特性标记即可把这个字段显示在 Inspector 上，同时还会把这个字段序列化到资源里。<br>在实际开发项目的时候，有些字段我们只是想从 Inspector 上看到数值以方便差错，并不想序列化这个字段(浪费空间)。在 Unity 商城里有 Odin Inspector， Naughty Attributes 之类的编辑器拓展插件可以完成这个功能。</p><p>最近在座的项目里使用了 Mirror Networking 和 Naughty Attributes，但是我发现 Naughty Attributes 的 <code>[ShowInInspector]</code> 没法用在 <code>Mirror.NerworkBehaviour</code> 上。只能照着 Naughty Attributes 源码里的方式把 <code>[ShowInInspector]</code> 的功能给 <code>Mirror.NerworkBehaviour</code> 在实现一次，于是有了今天这篇笔记。</p><h1 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h1><p>为什么 <code>Mirror.NerworkBehaviour</code> 无法使用另一个编辑器插件里的 <code>[ShowInInspector]</code> 呢？我们通过查看源码得知， Naughty Attributes 编写了一个应用于 UnityObject 的 Inspector 编辑器脚本，用于在里面调用自己 Attibutes 的相关绘制方法，并且设置为应用于子类。而 <code>Mirror.NerworkBehaviour</code> 正好也有一个自己专有的 Inspector 绘制脚本，并且要应用于子类。所以继承 <code>Mirror.NerworkBehaviour</code> 的脚本就使用了 Mirror 准备的编辑器绘制脚本，无法再使用 Naughty Attributes，而项目里其他 MonoBehaviour 还仍然使用 Naughty Attributes 的编辑器绘制。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CanEditMultipleObjects]</span><br><span class="line">[<span class="meta">CustomEditor(typeof(UnityEngine.Object), true)</span>]</span><br><span class="line">public class NaughtyInspector : UnityEditor.Editor</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">CustomEditor(typeof(NetworkBehaviour), true)</span>]</span><br><span class="line">[<span class="meta">CanEditMultipleObjects</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">NetworkBehaviourInspector</span> : <span class="title">Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我的思路很简单:</p><ol><li>在 Mirror 中也定义一个 <code>[ShowInInspector]</code> 类似的特性</li><li>在 <code>Mirror.NerworkBehaviour</code> 的Inspector绘制脚本中对 <code>[Mirror.TempShowInInspector]</code> 进行检测, 收集有此特性的字段</li><li>在 <code>Mirror.NerworkBehaviour</code> 的Inspector原本的绘制方法结束后，对有 <code>[Mirror.TempShowInInspector]</code> 特性的字段进行绘制</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>为了让代码看起来干净整洁，下面放出的代码是用于在空的Unity工程中实现 <code>[ShowInInspector]</code>。</p><p>先定义特性</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TempShowInInspectorAttribute</span> : <span class="title">Attribute</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> IsReadonlyField &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isReadonly"&gt;</span>If this field is readonly in inspector.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Set it to readonly would save some performance<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TempShowInInspectorAttribute</span>(<span class="params"><span class="keyword">bool</span> isReadonly = <span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            IsReadonlyField = isReadonly;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编写一个 Helper 类。在这个 Helper 类中，要编写方法获取一个 UnityObject 中的字段。<br>同时还要编写方法去绘制字段。绘制字段的函数非常庞大，由于在实际项目中会有 Struct 嵌套的情况，所以我写了一个可以递归调用的方法以处理嵌套。<br>但我只是粗暴的设置了允许嵌套的层数，因为我觉得实际使用情境中是不太会有太深层的嵌套了，因为此类数据一般都是从配置表中拿到或者是一些运行时的参数组合。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">TempGUIHelper</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> DRAW_DEPTH_LIMIT = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DrawTempShowInInspectorField</span>(<span class="params">UnityObject target, FieldInfo field, <span class="keyword">bool</span> isReadonly = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">object</span> <span class="keyword">value</span> = field.GetValue(target);</span><br><span class="line">            <span class="keyword">string</span> niceVariableName = ObjectNames.NicifyVariableName(field.Name);</span><br><span class="line">            <span class="keyword">if</span> (field.IsStatic)</span><br><span class="line">            &#123;</span><br><span class="line">                niceVariableName = <span class="string">$"<span class="subst">&#123;niceVariableName&#125;</span>(static) "</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == <span class="keyword">value</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// TODO @Hiko if field is a class pack, better to spawn one for it; But why do ppl make a data pack into class, it should just be struct;</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (TryDrawField(<span class="keyword">value</span>, niceVariableName, field.FieldType, <span class="number">0</span>, <span class="keyword">out</span> <span class="keyword">object</span> nextValueObject, <span class="keyword">out</span> <span class="keyword">bool</span> setNextValue, isReadonly))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (setNextValue &amp;&amp; !isReadonly)</span><br><span class="line">                &#123;</span><br><span class="line">                    field.SetValue(target, nextValueObject);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">TryDrawField</span>(<span class="params"><span class="keyword">object</span> <span class="keyword">value</span>, <span class="keyword">string</span> lable, Type expectedType, <span class="keyword">int</span> depth, <span class="keyword">out</span> <span class="keyword">object</span> nextValue, <span class="keyword">out</span> <span class="keyword">bool</span> setNextValue, <span class="keyword">bool</span> readonlyField = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            nextValue = <span class="literal">null</span>;</span><br><span class="line">            setNextValue = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">string</span> showLableName = lable;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> &lt; depth) <span class="comment">// HACK @Hiko pad left</span></span><br><span class="line">            &#123;</span><br><span class="line">                showLableName = lable.PadLeft(lable.Length + depth * <span class="number">4</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (depth &gt;= DRAW_DEPTH_LIMIT)</span><br><span class="line">            &#123;</span><br><span class="line">                EditorGUILayout.BeginVertical();</span><br><span class="line">                EditorGUILayout.LabelField(<span class="string">$"<span class="subst">&#123;showLableName&#125;</span>(OutOfDrawDepthLimit):"</span>);</span><br><span class="line">                <span class="keyword">string</span> tempContent = <span class="keyword">value</span>.ToString();</span><br><span class="line">                tempContent = tempContent.PadLeft(tempContent.Length + depth * <span class="number">4</span>);</span><br><span class="line">                EditorGUILayout.LabelField(tempContent);</span><br><span class="line">                EditorGUILayout.EndVertical();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">new</span> EditorGUI.DisabledScope(disabled: readonlyField))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">bool</span> isDrawn = <span class="literal">true</span>;</span><br><span class="line">                Type valueType = Equals(<span class="keyword">value</span>, <span class="literal">null</span>) ? expectedType : <span class="keyword">value</span>.GetType();</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> == valueType)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">bool</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">bool</span> prevBool = (<span class="keyword">bool</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">bool</span> nextBool = EditorGUILayout.Toggle(showLableName, prevBool);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevBool != nextBool)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextBool;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">short</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">short</span> prevShort = (<span class="keyword">short</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">short</span> nextShort = (<span class="keyword">short</span>)Mathf.Clamp(EditorGUILayout.IntField(showLableName, (<span class="keyword">int</span>)prevShort), <span class="keyword">short</span>.MinValue, <span class="keyword">short</span>.MaxValue); <span class="comment">// need clamp</span></span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevShort != nextShort)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextShort;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">ushort</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">ushort</span> prevUshort = (<span class="keyword">ushort</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">ushort</span> nextUshort = (<span class="keyword">ushort</span>)Mathf.Clamp(EditorGUILayout.IntField(showLableName, (<span class="keyword">ushort</span>)<span class="keyword">value</span>), <span class="keyword">ushort</span>.MinValue, <span class="keyword">ushort</span>.MaxValue); <span class="comment">// need clamp</span></span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevUshort != nextUshort)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextUshort;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">int</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> prevInt = (<span class="keyword">int</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">int</span> nextInt = EditorGUILayout.IntField(showLableName, prevInt);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevInt != nextInt)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextInt;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">uint</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">uint</span> prevUint = (<span class="keyword">uint</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">uint</span> nextUint = (<span class="keyword">uint</span>)Mathf.Clamp(EditorGUILayout.LongField(showLableName, prevUint), <span class="keyword">uint</span>.MinValue, <span class="keyword">uint</span>.MaxValue); <span class="comment">// need clamp</span></span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevUint != nextUint)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextUint;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">long</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">long</span> prevLong = (<span class="keyword">long</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">long</span> nextLong = EditorGUILayout.LongField(showLableName, prevLong);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevLong != nextLong)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextLong;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">ulong</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">ulong</span> prevUlong = (<span class="keyword">ulong</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">string</span> nextUlongStr = EditorGUILayout.TextField(showLableName, prevUlong.ToString());</span><br><span class="line">                    nextUlongStr = Regex.Replace(nextUlongStr, <span class="string">@"[^a-zA-Z0-9 ]"</span>, <span class="string">""</span>); <span class="comment">// force convert all to number</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">ulong</span>.TryParse(nextUlongStr, <span class="keyword">out</span> <span class="keyword">ulong</span> nextUlong) &amp;&amp; (setNextValue = prevUlong != nextUlong))</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextUlongStr;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">float</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">float</span> prevFloat = (<span class="keyword">float</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">float</span> nextFloat = EditorGUILayout.FloatField(showLableName, (<span class="keyword">float</span>)<span class="keyword">value</span>);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = !Mathf.Approximately(prevFloat, nextFloat))</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextFloat;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">double</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">double</span> prevDouble = (<span class="keyword">double</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">double</span> nextDouble = EditorGUILayout.DoubleField(showLableName, prevDouble);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevDouble != nextDouble)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextDouble;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(<span class="keyword">string</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">string</span> prevString = (<span class="keyword">string</span>)<span class="keyword">value</span>;</span><br><span class="line">                    <span class="keyword">string</span> nextString = EditorGUILayout.TextField(showLableName, prevString);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevString != nextString)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextString;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Vector2))</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector2 prevVector2 = (Vector2)<span class="keyword">value</span>;</span><br><span class="line">                    Vector2 nextVector2 = EditorGUILayout.Vector2Field(showLableName, prevVector2);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevVector2 != nextVector2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = prevVector2;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Vector3))</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector3 prevVector3 = (Vector3)<span class="keyword">value</span>;</span><br><span class="line">                    Vector3 nextVector3 = EditorGUILayout.Vector3Field(showLableName, prevVector3);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevVector3 != nextVector3)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextVector3;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Vector4))</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector4 prevVector4 = (Vector4)<span class="keyword">value</span>;</span><br><span class="line">                    Vector4 nextVector4 = EditorGUILayout.Vector4Field(showLableName, prevVector4);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevVector4 != nextVector4)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextVector4;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Vector2Int))</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector2Int prevV2int = (Vector2Int)<span class="keyword">value</span>;</span><br><span class="line">                    Vector2Int nextV2int = EditorGUILayout.Vector2IntField(showLableName, prevV2int);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevV2int != nextV2int)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextV2int;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Vector3Int))</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector3Int prevV3int = (Vector3Int)<span class="keyword">value</span>;</span><br><span class="line">                    Vector3Int nextV3int = EditorGUILayout.Vector3IntField(showLableName, prevV3int);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevV3int != nextV3int)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextV3int;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Color))</span><br><span class="line">                &#123;</span><br><span class="line">                    Color prevColor = (Color)<span class="keyword">value</span>;</span><br><span class="line">                    Color nextColor = EditorGUILayout.ColorField(showLableName, prevColor);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevColor != nextColor)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextColor;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Bounds))</span><br><span class="line">                &#123;</span><br><span class="line">                    Bounds prevBounds = (Bounds)<span class="keyword">value</span>;</span><br><span class="line">                    Bounds nextBounds = EditorGUILayout.BoundsField(showLableName, prevBounds);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevBounds != nextBounds)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextBounds;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(Rect))</span><br><span class="line">                &#123;</span><br><span class="line">                    Rect prevRect = (Rect)<span class="keyword">value</span>;</span><br><span class="line">                    Rect nextRect = EditorGUILayout.RectField(showLableName, prevRect);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevRect != nextRect)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextRect;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType == <span class="keyword">typeof</span>(RectInt))</span><br><span class="line">                &#123;</span><br><span class="line">                    RectInt prevRectInt = (RectInt)<span class="keyword">value</span>;</span><br><span class="line">                    RectInt nextRectInt = EditorGUILayout.RectIntField(showLableName, prevRectInt);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = !prevRectInt.Equals(nextRectInt))</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextRectInt;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(UnityObject).IsAssignableFrom(valueType))</span><br><span class="line">                &#123;</span><br><span class="line">                    UnityObject prevUnityObj = (UnityObject)<span class="keyword">value</span>;</span><br><span class="line">                    UnityObject nextUnityObj = EditorGUILayout.ObjectField(showLableName, prevUnityObj, valueType, <span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevUnityObj != nextUnityObj)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextUnityObj;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType.BaseType == <span class="keyword">typeof</span>(Enum))</span><br><span class="line">                &#123;</span><br><span class="line">                    Enum prevEnum = (Enum)<span class="keyword">value</span>;</span><br><span class="line">                    Enum nextEnum = EditorGUILayout.EnumPopup(showLableName, prevEnum);</span><br><span class="line">                    <span class="keyword">if</span> (setNextValue = prevEnum != nextEnum)</span><br><span class="line">                    &#123;</span><br><span class="line">                        nextValue = nextEnum;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (valueType.BaseType == <span class="keyword">typeof</span>(TypeInfo))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">bool</span> tempPrev = GUI.enabled;</span><br><span class="line">                    GUI.enabled = tempPrev;</span><br><span class="line">                    EditorGUILayout.TextField(showLableName, <span class="keyword">value</span>.ToString());</span><br><span class="line">                    GUI.enabled = tempPrev;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// TODO @Hiko add fold/unfold to save some space</span></span><br><span class="line">                    <span class="keyword">bool</span> isSerializable = <span class="literal">null</span> != valueType.GetCustomAttribute&lt;SerializableAttribute&gt;(); <span class="comment">// check if target is Serializable.</span></span><br><span class="line">                    <span class="keyword">if</span> (isSerializable)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">object</span> structValueObject = <span class="keyword">value</span>;</span><br><span class="line">                        EditorGUILayout.LabelField(showLableName);</span><br><span class="line">                        FieldInfo[] members = valueType.GetFields();</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = members.Length; i &lt; length; i++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            FieldInfo memberInfo = members[i];</span><br><span class="line">                            <span class="keyword">if</span> (MemberTypes.Field == memberInfo.MemberType &amp;&amp; !memberInfo.IsStatic) <span class="comment">// I dun need static/const field</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                Type fieldType = memberInfo.FieldType; <span class="comment">// better to pass this type in, cuz value could be null</span></span><br><span class="line">                                <span class="keyword">object</span> prevValueObj = memberInfo.GetValue(<span class="keyword">value</span>);</span><br><span class="line">                                <span class="keyword">if</span> (TryDrawField(prevValueObj, memberInfo.Name, fieldType, depth + <span class="number">1</span>, <span class="keyword">out</span> <span class="keyword">object</span> nextValueObj, <span class="keyword">out</span> <span class="keyword">bool</span> setNext, readonlyField))</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (setNext)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        setNextValue = <span class="literal">true</span>;</span><br><span class="line">                                        memberInfo.SetValue(structValueObject, nextValueObj);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                isDrawn = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        nextValue = structValueObject;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        EditorGUILayout.BeginVertical();</span><br><span class="line">                        EditorGUILayout.LabelField(<span class="string">$"<span class="subst">&#123;showLableName&#125;</span>(NonSupprtType/NonSerializable):"</span>);</span><br><span class="line">                        <span class="keyword">string</span> valueStr = <span class="keyword">value</span>.ToString();</span><br><span class="line">                        valueStr = valueStr.PadLeft(valueStr.Length + (depth + <span class="number">1</span>) * <span class="number">4</span>);</span><br><span class="line">                        EditorGUILayout.LabelField(valueStr);</span><br><span class="line">                        EditorGUILayout.EndVertical();</span><br><span class="line">                        isDrawn = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> isDrawn;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;FieldInfo&gt; <span class="title">GetAllFields</span>(<span class="params"><span class="keyword">object</span> target, Func&lt;FieldInfo, <span class="keyword">bool</span>&gt; predicate</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (target == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">"The target object is null. Check for missing scripts."</span>);</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            List&lt;Type&gt; types = GetSelfAndBaseTypes(target);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = types.Count - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                IEnumerable&lt;FieldInfo&gt; fieldInfos = types[i]</span><br><span class="line">                    .GetFields(BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.DeclaredOnly)</span><br><span class="line">                    .Where(predicate);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">var</span> fieldInfo <span class="keyword">in</span> fieldInfos)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">yield</span> <span class="keyword">return</span> fieldInfo;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Type&gt; <span class="title">GetSelfAndBaseTypes</span>(<span class="params"><span class="keyword">object</span> target</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;Type&gt; types = <span class="keyword">new</span> List&lt;Type&gt;()</span><br><span class="line">            &#123;</span><br><span class="line">                target.GetType()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (types.Last().BaseType != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                types.Add(types.Last().BaseType);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> types;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是编写一个 Inpector 脚本了。最后一步，非常简单。在默认的绘制之后再绘制我们捕捉到的需要绘制的非序列化字段。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CanEditMultipleObjects</span>]</span><br><span class="line">    [<span class="meta">CustomEditor(typeof(UnityObject), true)</span>]</span><br><span class="line">    public class TempInspector : UnityEditor.Editor</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> IEnumerable&lt;FieldInfo&gt; m_nonSerializedFields;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_nonSerializedFields = TempGUIHelper.GetAllFields(target, f =&gt; f.GetCustomAttributes(<span class="keyword">typeof</span>(TempShowInInspectorAttribute), <span class="literal">true</span>).Length &gt; <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnInspectorGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DrawDefaultInspector(); <span class="comment">// draw default, make sure old stuff works</span></span><br><span class="line">            DrawNonSerializeFileds();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">DrawNonSerializeFileds</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_nonSerializedFields.Any())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">var</span> field <span class="keyword">in</span> m_nonSerializedFields)</span><br><span class="line">                &#123;</span><br><span class="line">                    TempShowInInspectorAttribute fieldAttribute = field.GetCustomAttribute&lt;TempShowInInspectorAttribute&gt;();</span><br><span class="line">                    <span class="keyword">bool</span> isReadonlyField = <span class="literal">null</span> == fieldAttribute || fieldAttribute.IsReadonlyField || field.IsStatic; <span class="comment">// make static fields readonly cuz I just think we should not change them</span></span><br><span class="line">                    TempGUIHelper.DrawTempShowInInspectorField(serializedObject.targetObject, field, isReadonlyField);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/06/29/20240629-drawnonserializefields/20240629-drawnonserializefields-pic001.png" class="" title="split"><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>其实这个绘制的功能是我最开始工作的时候一直好奇且想去做的，那个时候也上网看了下论坛很快就明白了做法，但是因为项目组买了 Odin 所以就没必要我再做一次了。<br>没想到这段时间却因为项目中使用的两个插件冲突而有这个机会去依葫芦画瓢实现一次这个功能，还挺开心的。</p><p>P.S: Mirror 还定义了一个 Attribute 叫做 <code>[Mirror.ShowInInspector]</code>，它的用处是展示 <code>SyncList</code> 里的内容。但是，它展示 <code>SyncList</code> 内容的方法是把每个元素都 ToSting。<br>这个坑我也是看了他的代码才知道，我一开始还觉得它画不出 <code>SyncList&lt;CustomType&gt;</code> 是我自己的问题，恁麻了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在MonoBehaviour里给字段打上 &lt;code&gt;[SerializedField]&lt;/code&gt; 特性标记即可把这个字段显示在 Inspector 上，同时还会把这个字段序列化到资源里。&lt;br&gt;在实际开发项目的时候，有些字段我们只是想从 Inspector 上看到数值
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>UGUI 一些自用UI表现件基础</title>
    <link href="http://yoursite.com/2024/02/16/20240216-primitivebehaviour/"/>
    <id>http://yoursite.com/2024/02/16/20240216-primitivebehaviour/</id>
    <published>2024-02-16T05:26:35.000Z</published>
    <updated>2024-06-29T08:14:14.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Temp"><a href="#Temp" class="headerlink" title="Temp"></a>Temp</h1><p>自从开始加班以后就没什么干劲了。这段时间重头工作就是接用户SDK然后补以前落下的一些细节需求。</p><p>比较蚌埠住的是，这段时间发现了自己写的很多重复的UI组件代码。而且在这个时候已经不方便再整合替换了，整合替换可能会导致爆炸。</p><p>为了尽可能杜绝此类事情发生，决定先把用到的一些基础代码总结一下写在这里，方便下次直接过来抄而不是再手搓了。</p><h1 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h1><h2 id="PrimitiveBehaviour-基本结构"><a href="#PrimitiveBehaviour-基本结构" class="headerlink" title="PrimitiveBehaviour(基本结构)"></a>PrimitiveBehaviour(基本结构)</h2><p>首先定义表现件的最基本的结构。实质就是一个接收值的更新。<br>此外还多了一个标志，可用于调整该组件是否在第一次收到值得时候使用快进动画。<br>因为该功能在实际使用的时候，是根据美术的要求来决定的，所以我觉得不写在代码里而是开放出来供直接在prefab更改会更方便。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// where T : IComparable, IComparable&lt;T&gt;, IConvertible, IEquatable&lt;T&gt; 其实就是为了限制 T 必须是这些基础类型，但是感觉还是没必要这么写</span></span><br><span class="line">    public interface IBehaviourDispatcher&lt;T&gt; where T : IComparable, IComparable&lt;T&gt;, IConvertible, IEquatable&lt;T&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">DispatchValueChange</span>(<span class="params">T nextValue, <span class="keyword">bool</span> instant</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public abstract class PrimitiveBehaviour&lt;T&gt; : MonoBehaviour where T : IComparable, IComparable&lt;T&gt;, IConvertible, IEquatable&lt;T&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_instantApplyInitValue = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_hasInit = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">private</span> T m_currentValue;</span><br><span class="line">        <span class="keyword">private</span> T m_previousValue;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> T currentValue =&gt; m_currentValue;</span><br><span class="line">        <span class="keyword">public</span> T previousValue =&gt; m_previousValue;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> hasInited =&gt; m_hasInit;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 持有数据的一方主动调用该方法，以对表现进行更新</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="nextValue"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="instant"&gt;</span>instant changing value can also used to fast forward anim<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeValue</span>(<span class="params">T nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_hasInit)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!instant &amp;&amp; IsValueEqual(currentValue, nextValue))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                m_previousValue = m_currentValue;</span><br><span class="line">                m_currentValue = nextValue;</span><br><span class="line">                NotifyValueChanged(nextValue, instant);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            instant = instant || m_instantApplyInitValue;</span><br><span class="line">            NotifyValueChanged(nextValue, instant);</span><br><span class="line">            m_previousValue = m_currentValue = nextValue;</span><br><span class="line">            m_hasInit = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">bool</span> <span class="title">IsValueEqual</span>(<span class="params">T l, T r</span>)</span> =&gt; <span class="number">0</span> == l.CompareTo(r);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">NotifyValueChanged</span>(<span class="params">T nextValue, <span class="keyword">bool</span> instant</span>)</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BoolBehaviour"><a href="#BoolBehaviour" class="headerlink" title="BoolBehaviour"></a>BoolBehaviour</h2><p>需要下发数据的一方需要持有一个 BoolBehaviourDispatcher 变量，并通过其把数据变更下发出去。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> BoolBehaviourDispatcher : IBehaviourDispatcher&lt;<span class="keyword">bool</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> BoolBehaviour[] m_behaviours;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DispatchValueChange</span>(<span class="params"><span class="keyword">bool</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> count = m_behaviours.Length;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                BoolBehaviour behaviour = m_behaviours[i];</span><br><span class="line">                <span class="keyword">if</span> (behaviour.gameObject.activeInHierarchy &amp;&amp; behaviour.enabled)</span><br><span class="line">                &#123;</span><br><span class="line">                    behaviour.ChangeValue(nextValue, instant);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"FindInChildren"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindInChildren</span>(<span class="params">GameObject source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> behaviors = source.GetComponentsInChildren&lt;BoolBehaviour&gt;();</span><br><span class="line">            m_behaviours = behaviors;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public abstract class BoolBehaviour : PrimitiveBehaviour&lt;bool&gt; </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Editor preview"</span>), NonReorderable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> previewValue_editor = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> previrwInstant = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"SetValuePreview"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetValuePreview</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                NotifyValueChanged(previewValue_editor, previrwInstant);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            NotifyValueChanged(previewValue_editor, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="FloatBehaviour"><a href="#FloatBehaviour" class="headerlink" title="FloatBehaviour"></a>FloatBehaviour</h2><p>需要下发数据的一方需要持有一个 FloatBehaviourDispatcher 变量，并通过其把数据变更下发出去。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> FloatBehaviourDispatcher: IBehaviourDispatcher&lt;<span class="keyword">float</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> FloatBehaviour[] m_behaviours;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DispatchValueChange</span>(<span class="params"><span class="keyword">float</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> count = m_behaviours.Length;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> behaviour = m_behaviours[i];</span><br><span class="line">                <span class="keyword">if</span> (behaviour.gameObject.activeInHierarchy &amp;&amp; behaviour.enabled)</span><br><span class="line">                &#123;</span><br><span class="line">                    behaviour.ChangeValue(nextValue, instant);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"FindInChildren"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindInChildren</span>(<span class="params">GameObject source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> behaviors = source.GetComponentsInChildren&lt;FloatBehaviour&gt;();</span><br><span class="line">            m_behaviours = behaviors;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public abstract class FloatBehaviour : PrimitiveBehaviour&lt;float&gt;</span><br><span class="line">    &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Editor preview"</span>), NonReorderable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> previewValue_editor = <span class="number">1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> previrwInstant = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"SetValuePreview"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetValuePreview</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                NotifyValueChanged(previewValue_editor, previrwInstant);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            NotifyValueChanged(previewValue_editor, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IntBehaviour"><a href="#IntBehaviour" class="headerlink" title="IntBehaviour"></a>IntBehaviour</h2><p>需要下发数据的一方需要持有一个 IntBehaviourDispatcher 变量，并通过其把数据变更下发出去。<br>IntBehaviour 我定义成一个抽象类。因为实际使用的时候(我暂时遇到的情况)，在UI表现上会需要有持有一个数值，数值相同不同时的表现，或是UI收到不同的数值再有不同的表现。<br>所以这边分做成了两个 Beheaviour 。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> IntBehaviourDispatcher : IBehaviourDispatcher&lt;<span class="keyword">int</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> IntBehaviour[] m_behaviours;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DispatchValueChange</span>(<span class="params"><span class="keyword">int</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> count = m_behaviours.Length;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> behaviour = m_behaviours[i];</span><br><span class="line">                <span class="keyword">if</span> (behaviour.gameObject.activeInHierarchy &amp;&amp; behaviour.enabled)</span><br><span class="line">                &#123;</span><br><span class="line">                    behaviour.ChangeValue(nextValue, instant);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"FindInChildren"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindInChildren</span>(<span class="params">GameObject source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> behaviors = source.GetComponentsInChildren&lt;IntBehaviour&gt;();</span><br><span class="line">            m_behaviours = behaviors;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public abstract class IntBehaviour : PrimitiveBehaviour&lt;int&gt; </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Editor preview"</span>), NonReorderable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> previewValue_editor = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> previrwInstant = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"SetValuePreview"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetValuePreview</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                NotifyValueChanged(previewValue_editor, previrwInstant);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            NotifyValueChanged(previewValue_editor, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据收到的值不同 而作不同表现</span></span><br><span class="line">    public abstract class IntSwitchBehaviour&lt;T&gt; : PrimitiveBehaviour&lt;int&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Serializable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">struct</span> IntPack</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">int</span> intValue;</span><br><span class="line">            <span class="keyword">public</span> T targetValueDataPack;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Extra param"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_hasDefaultPack = <span class="literal">false</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> m_defaultPackIndex = <span class="number">0</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_unapplyPrevPack = <span class="literal">true</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> IntPack[] m_packArray;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">sealed</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">NotifyValueChanged</span>(<span class="params"><span class="keyword">int</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> length = m_packArray.Length;</span><br><span class="line">            <span class="keyword">int</span> meetIndex = <span class="number">-1</span>;</span><br><span class="line">            IntPack pack;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                pack = m_packArray[i];</span><br><span class="line">                <span class="keyword">if</span> (pack.intValue == nextValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    meetIndex = i;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (m_unapplyPrevPack)</span><br><span class="line">                &#123;</span><br><span class="line">                    UnApplyPack(pack.targetValueDataPack);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (meetIndex &gt; <span class="number">0</span>) <span class="comment">// has meet</span></span><br><span class="line">            &#123;</span><br><span class="line">                pack = m_packArray[meetIndex];</span><br><span class="line">                ApplyPack(pack.targetValueDataPack, instant);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// apply default one</span></span><br><span class="line">            pack = m_packArray[m_defaultPackIndex];</span><br><span class="line">            ApplyPack(pack.targetValueDataPack, instant);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">ApplyPack</span>(<span class="params">T pack, <span class="keyword">bool</span> instant</span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">UnApplyPack</span>(<span class="params">T pack</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 持有一个数值，判断传进来的值是否相等，再做表现</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">IntEqualBehaviour</span> : <span class="title">IntBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> m_targetValue;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_isPreviousValueEqual = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">sealed</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">NotifyValueChanged</span>(<span class="params"><span class="keyword">int</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">bool</span> isEqual = IsValueEqual(nextValue, m_targetValue);</span><br><span class="line">            <span class="keyword">bool</span> hasChanged = isEqual != m_isPreviousValueEqual;</span><br><span class="line">            <span class="keyword">if</span> (hasInited)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hasChanged)</span><br><span class="line">                &#123;</span><br><span class="line">                    NotifyValueEqual(isEqual, instant);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            NotifyValueEqual(isEqual, instant);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">NotifyValueEqual</span>(<span class="params"><span class="keyword">bool</span> equal, <span class="keyword">bool</span> instant</span>)</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h2><p>下面是一个 FloatBehaviour 和 BoolBehaviour 的例子。<br>只需要收到数值，FloatBehaviour 启动tween去修改 Image 的填充/ BoolBehaviour 去开关物体。其它还会用到的表现还有更改颜色，开关物体之类的，<br>当然实际使用的情况还得考虑 target 是否会无效，以及物体从来没开过，却调用 NotifyValueChanged 之类的细节问题的。</p><img src="/2024/02/16/20240216-primitivebehaviour/20240216-primitivebehaviour-pic001.png" class="" title="split"><img src="/2024/02/16/20240216-primitivebehaviour/20240216-primitivebehaviour-pic002.png" class="" title="split"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Core.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">RequireComponent(typeof(Image))</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SlicesImageFill</span> : <span class="title">FloatBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Fields"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Image m_target;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_reverse = <span class="literal">false</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 m_range = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">1f</span>);</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> m_doTweenFill = <span class="literal">false</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> TweenParameter m_tweenParameter;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Tween m_currentTween;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">NotifyValueChanged</span>(<span class="params"><span class="keyword">float</span> nextValue, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_currentTween?.Kill();</span><br><span class="line">            <span class="keyword">float</span> targetFill = CalculateFillValue(nextValue);</span><br><span class="line">            <span class="keyword">if</span> (instant || !m_doTweenFill)</span><br><span class="line">            &#123;</span><br><span class="line">                m_target.fillAmount = targetFill;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            m_currentTween = m_target.DOFillAmount(targetFill, m_tweenParameter.duration);</span><br><span class="line">            m_currentTween.ApplyParam(m_tweenParameter);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">CalculateFillValue</span>(<span class="params"><span class="keyword">float</span> rawValue</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> Mathf.Lerp(m_range.x, m_range.y, m_reverse ? <span class="number">1</span> - rawValue : rawValue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDestroy</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_currentTween?.Kill();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Reset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_target = GetComponent&lt;Image&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BoolReactorObjectActive</span> : <span class="title">BoolBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Serializable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">struct</span> ObjectActivePack</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> GameObject target;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> inverse;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Extra param"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> ObjectActivePack[] m_packs;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">NotifyValueChanged</span>(<span class="params"><span class="keyword">bool</span> <span class="keyword">value</span>, <span class="keyword">bool</span> instant</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, length = m_packs.Length; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ObjectActivePack pack = m_packs[i];</span><br><span class="line">                pack.target.SetActive(pack.inverse ? !<span class="keyword">value</span> : <span class="keyword">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Temp&quot;&gt;&lt;a href=&quot;#Temp&quot; class=&quot;headerlink&quot; title=&quot;Temp&quot;&gt;&lt;/a&gt;Temp&lt;/h1&gt;&lt;p&gt;自从开始加班以后就没什么干劲了。这段时间重头工作就是接用户SDK然后补以前落下的一些细节需求。&lt;/p&gt;
&lt;p&gt;比较蚌埠住的是
      
    
    </summary>
    
    
      <category term="UGUI" scheme="http://yoursite.com/categories/UGUI/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>UGUI PSD智能对象导图小记</title>
    <link href="http://yoursite.com/2023/10/15/20231015-psd-complexlayer-export/"/>
    <id>http://yoursite.com/2023/10/15/20231015-psd-complexlayer-export/</id>
    <published>2023-10-15T04:43:02.000Z</published>
    <updated>2023-10-15T06:15:00.741Z</updated>
    
    <content type="html"><![CDATA[<p>当前的项目里因为UI缺乏UI美术人，没有人力导图拼图，所以使用了<a href="https://github.com/zouhunter/unity-psd-ugui" target="_blank" rel="noopener">PSD2UGUI</a>插件。这个插件又依赖一个分析PSD的解析库<a href="https://github.com/NtreevSoft/psd-parser/tree/master" target="_blank" rel="noopener">psd-parser</a>。<br>这俩东西都已经有点老旧了，美术那边遇到了一个问题，他们做的智能对象图层不能正确导出。</p><img src="/2023/10/15/20231015-psd-complexlayer-export/20231015-psd-complexlayer-export-pic001.png" class="" title="split"><p>直接用文字有点难描述，大概是这样的。他们做的智能对象大小就和图里这个黑底一样大，但实际有图案部分就像红框里的那样，不会占满整个智能对象的区域。<br>用工具导出Sprite的时候，只会导出红框的大小。</p><hr><p>解决方法比较简单粗暴了，因为<a href="https://github.com/NtreevSoft/psd-parser/tree/master" target="_blank" rel="noopener">psd-parser</a>似乎不能很方便拿到智能对象的实际的区域尺寸，我只能让美术多做一个和需要导出的只能对象尺寸大小一样的纯色空图层。<br>同时新增两个后缀规则，让这个纯色空图层和需要依照智能对象尺寸导出的图层分别使用。</p><p>在<a href="https://github.com/zouhunter/unity-psd-ugui" target="_blank" rel="noopener">PSD2UGUI</a>中根据图层生成Texture的代码中添加后缀检查,检测到特殊规则的时候去去根据特殊的纯色图层的尺寸再去重新绘制Texture。同时在<a href="https://github.com/zouhunter/unity-psd-ugui" target="_blank" rel="noopener">PSD2UGUI</a>中根据图层创建他的ImageNode的时候有个Rect需要计算，这个Rect计算也要修改。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当前的项目里因为UI缺乏UI美术人，没有人力导图拼图，所以使用了&lt;a href=&quot;https://github.com/zouhunter/unity-psd-ugui&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PSD2UGUI&lt;/a&gt;插件。这个插件又
      
    
    </summary>
    
    
      <category term="UGUI" scheme="http://yoursite.com/categories/UGUI/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>UGUI SafeArea 适配</title>
    <link href="http://yoursite.com/2023/07/30/20230730-ui-safe-area-rect/"/>
    <id>http://yoursite.com/2023/07/30/20230730-ui-safe-area-rect/</id>
    <published>2023-07-30T08:21:00.000Z</published>
    <updated>2023-08-12T08:03:49.394Z</updated>
    
    <content type="html"><![CDATA[<p>最近有在做手游。各个厂商手机屏幕的尺寸和比例都各不相同。UI适配可以说是一大难题叻。UI美术那边在制作的也有考虑到适配方面的问题，有许多元素是需要我们根据安全区来适配的。<br>但比较坑爹的一些情况是这样的，要求页面A下方有个按钮托盘，按钮托盘打开的时候要有一个大图背景去阻挡玩家点击原本页面A上的元素。这个按钮托盘还是在其他页面中也有用到的。为了解决这个问题，做了两个Rect适配的脚本。<br>还没完成，但是感觉基本能用，就先拉上来记一下。</p><p>这两个脚本都依赖与当前UI使用的相机和根Canvas。所以在实际使用的时候需要准备好这两个东西。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">UIAreaRect</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Camera <span class="title">GetUICamera</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function">Canvas <span class="title">GetRootCanvas</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Refresh</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">ExecuteAlways</span>]</span><br><span class="line">    [<span class="meta">RequireComponent(typeof(RectTransform))</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SafeAreaRect</span> : <span class="title">UIBehaviour</span>, <span class="title">ILayoutSelfController</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Vector2 s_specialPivot = Vector2.zero; <span class="comment">// HACK @Hiko self pivot</span></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectOffset _rectOffset = <span class="keyword">new</span> RectOffset();</span><br><span class="line"></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Camera _uiCamera;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Canvas _rootCanvas;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> RectTransform m_rect;</span><br><span class="line">        <span class="keyword">private</span> DrivenRectTransformTracker m_tracker;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> RectTransform selfRectTransform</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m_rect == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_rect = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> m_rect;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetLayoutHorizontal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetLayoutVertical</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"Refresh"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Refresh</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">            RebuildTracker();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            Camera uiCamera = GetUICamera();</span><br><span class="line">            RectTransform rectTransform = selfRectTransform, rootCanvasRectTransform = rootCanvas.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            RectTransform parent = rectTransform.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            <span class="keyword">if</span> (parent == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">"This behaviour can not to be used on root recttransform"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (rootCanvas == <span class="literal">null</span> || uiCamera == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Rect safeRect = CalcultateCurrentSafeAreaRect();</span><br><span class="line">            rectTransform.pivot = s_specialPivot;</span><br><span class="line">            Vector3 worldUIPos;</span><br><span class="line">            Vector2 localPos = rootCanvasRectTransform.GetLocalRectPosition(RectPositionType.BottomLeft);</span><br><span class="line">            localPos.x += safeRect.x + _rectOffset.left;</span><br><span class="line">            <span class="keyword">float</span> deltaX = _rectOffset.horizontal;</span><br><span class="line">            rectTransform.SetSizeWithCurrentAnchors(RectTransform.Axis.Horizontal, safeRect.width - deltaX);</span><br><span class="line">            localPos.y += safeRect.y + _rectOffset.bottom;</span><br><span class="line">            <span class="keyword">float</span> deltaY = _rectOffset.vertical;</span><br><span class="line">            rectTransform.SetSizeWithCurrentAnchors(RectTransform.Axis.Vertical, safeRect.height - deltaY);</span><br><span class="line">            worldUIPos = rootCanvasRectTransform.TransformPoint(localPos);</span><br><span class="line">            rectTransform.position = worldUIPos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Camera <span class="title">GetUICamera</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// TODO implement the actual code to get camera while in game or in editor </span></span><br><span class="line">            <span class="keyword">return</span> _uiCamera;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Canvas <span class="title">GetRootCanvas</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// TODO implement the actual code to get root canvas while in game or in editor </span></span><br><span class="line">            <span class="keyword">return</span> _rootCanvas;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Rect <span class="title">CalcultateCurrentSafeAreaRect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rect safeRect;</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            RectTransform rootRectTransform = rootCanvas.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Rect rootCanvasRect = rootRectTransform.rect;</span><br><span class="line">            <span class="keyword">float</span> rootCanvasWidth = rootCanvasRect.width;</span><br><span class="line">            <span class="keyword">float</span> rootCanvasHeight = rootCanvasRect.height;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// temp pretend it is ip12</span></span><br><span class="line">            <span class="keyword">float</span> horizontalGap = <span class="number">0.055f</span>;</span><br><span class="line">            <span class="keyword">float</span> verticalGap = <span class="number">0.053f</span>;</span><br><span class="line">            <span class="keyword">switch</span> (SystemInfo.deviceType)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> DeviceType.Handheld:</span><br><span class="line">                    Rect deviceSafeRect = Screen.safeArea;</span><br><span class="line">                    <span class="keyword">if</span> (Mathf.Approximately(deviceSafeRect.x, <span class="number">0f</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// a device with saferect as fullrect</span></span><br><span class="line">                        safeRect = <span class="keyword">new</span> Rect(<span class="keyword">new</span> Vector2(rootCanvasWidth * horizontalGap, <span class="number">0f</span>), <span class="keyword">new</span> Vector2(rootCanvasWidth * (<span class="number">1f</span> - <span class="number">2</span> * horizontalGap), rootCanvasHeight * (<span class="number">1f</span> - verticalGap)));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Resolution resolution = Screen.currentResolution;</span><br><span class="line">                        <span class="keyword">float</span> scale = rootCanvasWidth / resolution.width;</span><br><span class="line">                        safeRect = <span class="keyword">new</span> Rect(deviceSafeRect.x * scale, deviceSafeRect.y * scale, deviceSafeRect.width * scale, deviceSafeRect.height * scale);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="comment">// HACK @Hiko it's on PC, create a temp saferect and pretend it is ip12</span></span><br><span class="line">                    safeRect = <span class="keyword">new</span> Rect(<span class="keyword">new</span> Vector2(rootCanvasWidth * horizontalGap, <span class="number">0f</span>), <span class="keyword">new</span> Vector2(rootCanvasWidth * (<span class="number">1f</span> - <span class="number">2</span> * horizontalGap), rootCanvasHeight * (<span class="number">1f</span> - verticalGap)));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> safeRect;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RebuildTracker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_tracker.Clear();</span><br><span class="line">            m_tracker.Add(<span class="keyword">this</span>, selfRectTransform, DrivenTransformProperties.All);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnEnable();</span><br><span class="line">            RebuildTracker();</span><br><span class="line">            SetDirty();</span><br><span class="line">            <span class="keyword">if</span> (Application.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                Refresh();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_tracker.Clear();</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(selfRectTransform);</span><br><span class="line">            <span class="keyword">base</span>.OnDisable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetDirty</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsActive())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(selfRectTransform);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Editor readonly debug stuff"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Rect _editorSafeRect;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _editorCurrentResolution;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _editorScreenSize;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorScreenFactor;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorScreenDpi;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorCanvasFactor;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Rect _editorRootCanvasRect;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmosSelected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UpdateEditorPreviewData();</span><br><span class="line">            Color color = Color.blue;</span><br><span class="line">            Rect safeRect = CalcultateCurrentSafeAreaRect();</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            RectTransform rootRectTransform = rootCanvas.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector2 bottomLeft = rootRectTransform.GetLocalRectPosition(RectPositionType.BottomLeft);</span><br><span class="line">            bottomLeft.x += safeRect.x;</span><br><span class="line">            bottomLeft.y += safeRect.y;</span><br><span class="line">            DrawBox(rootRectTransform, bottomLeft, safeRect.size, color);</span><br><span class="line">            <span class="comment">// draw safe area end</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Mathf.Approximately(_rectOffset.horizontal, <span class="number">0f</span>) &amp;&amp; Mathf.Approximately(_rectOffset.vertical, <span class="number">0f</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Rect nextRect = safeRect;</span><br><span class="line">            nextRect.width -= _rectOffset.horizontal;</span><br><span class="line">            nextRect.height -= _rectOffset.vertical;</span><br><span class="line">            nextRect.x += _rectOffset.left;</span><br><span class="line">            nextRect.y += _rectOffset.bottom;</span><br><span class="line">            bottomLeft = rootRectTransform.GetLocalRectPosition(RectPositionType.BottomLeft);</span><br><span class="line">            bottomLeft.x += nextRect.x;</span><br><span class="line">            bottomLeft.y += nextRect.y;</span><br><span class="line">            color.a *= <span class="number">0.8f</span>;</span><br><span class="line">            DrawBox(rootRectTransform, bottomLeft, nextRect.size, color);</span><br><span class="line">            <span class="comment">// draw actual safe area end</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawBox</span>(<span class="params">RectTransform reference, Vector2 bottomLeftLocalPos, Vector2 size, Color color</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Color cachedColor = Gizmos.color;</span><br><span class="line">            Gizmos.color = color;</span><br><span class="line">            <span class="keyword">if</span> (reference != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x));</span><br><span class="line">                Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos), reference.TransformPoint(bottomLeftLocalPos + Vector2.up * size.y));</span><br><span class="line">                Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x + Vector2.up * size.y));</span><br><span class="line">                Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos + Vector2.up * size.y), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x + Vector2.up * size.y));</span><br><span class="line">            &#125;</span><br><span class="line">            Gizmos.color = cachedColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateEditorPreviewData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            _editorSafeRect = CalcultateCurrentSafeAreaRect();</span><br><span class="line">            _editorScreenSize = <span class="keyword">new</span> Vector2(Screen.width, Screen.height);</span><br><span class="line">            _editorCurrentResolution = <span class="keyword">new</span> Vector2(Screen.currentResolution.width, Screen.currentResolution.height);</span><br><span class="line">            _editorScreenFactor = Screen.currentResolution.width / Screen.width;</span><br><span class="line">            _editorScreenDpi = Screen.dpi;</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            <span class="keyword">if</span> (rootCanvas != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                _editorCanvasFactor = rootCanvas.scaleFactor;</span><br><span class="line">                _editorRootCanvasRect = (rootCanvas.transform <span class="keyword">as</span> RectTransform).rect;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     [<span class="meta">ExecuteAlways</span>]</span><br><span class="line">    [<span class="meta">RequireComponent(typeof(RectTransform))</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScreenRawRect</span> : <span class="title">UIBehaviour</span>, <span class="title">ILayoutSelfController</span>, <span class="title">UIAreaRect</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Vector2 s_specialPivot = Vector2.zero; <span class="comment">// HACK @Hiko self pivot</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectOffset _rectOffset = <span class="keyword">new</span> RectOffset();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> RectTransform m_rect;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> RectTransform selfRectTransform</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m_rect == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_rect = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> m_rect;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// temp solution for testing</span></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Camera m_uiCamera;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Canvas m_rootCanvas;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> DrivenRectTransformTracker m_tracker;</span><br><span class="line">        <span class="keyword">private</span> RectTransform m_rectTransform;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> RectTransform rectTransform</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m_rectTransform == <span class="literal">null</span>)</span><br><span class="line">                    m_rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">                <span class="keyword">return</span> m_rectTransform;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetLayoutHorizontal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetLayoutVertical</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="meta-string">"Refresh"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Refresh</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Camera uiCamera = GetUICamera();</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            RectTransform rootCanvasRectTransform = rootCanvas.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Rect sizeRect = rootCanvasRectTransform.rect;</span><br><span class="line">            RectTransform selfRectTransform = rectTransform;</span><br><span class="line">            selfRectTransform.pivot = s_specialPivot;</span><br><span class="line">            Vector3 worldUIPos = RectTransformEx.ScreenToWorld(Vector2.zero, rootCanvas, uiCamera);</span><br><span class="line">            selfRectTransform.position = worldUIPos;</span><br><span class="line">            Vector2 localPos = selfRectTransform.localPosition;</span><br><span class="line">            <span class="keyword">float</span> leftOffset = _rectOffset.left;</span><br><span class="line">            localPos.x += leftOffset;</span><br><span class="line">            <span class="keyword">float</span> deltaX = _rectOffset.horizontal;</span><br><span class="line">            selfRectTransform.SetSizeWithCurrentAnchors(RectTransform.Axis.Horizontal, sizeRect.width - deltaX);</span><br><span class="line">            <span class="keyword">float</span> bottomOffset = _rectOffset.bottom;</span><br><span class="line">            localPos.y += bottomOffset;</span><br><span class="line">            <span class="keyword">float</span> deltaY = _rectOffset.vertical;</span><br><span class="line">            selfRectTransform.SetSizeWithCurrentAnchors(RectTransform.Axis.Vertical, sizeRect.height - deltaY);</span><br><span class="line">            selfRectTransform.localPosition = localPos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Camera <span class="title">GetUICamera</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_uiCamera;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Canvas <span class="title">GetRootCanvas</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_rootCanvas;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetDirty</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsActive())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RebuildTracker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_tracker.Clear();</span><br><span class="line">            m_tracker.Add(<span class="keyword">this</span>, selfRectTransform, DrivenTransformProperties.All);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnEnable();</span><br><span class="line">            RebuildTracker();</span><br><span class="line">            SetDirty();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_tracker.Clear();</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">            <span class="keyword">base</span>.OnDisable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Editor readonly debug stuff"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _editorCurrentResolution;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _editorScreenSize;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorScreenFactor;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorScreenDpi;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> _editorCanvasFactor;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Rect _editorRootCanvasRect;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmosSelected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Color color = Color.blue;</span><br><span class="line">            UpdateEditorPreviewData();</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            RectTransform rootRectTransform = rootCanvas.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Rect rect = rootRectTransform.rect;</span><br><span class="line">            Vector2 bottomLeft = rootRectTransform.GetLocalRectPosition(RectPositionType.BottomLeft);</span><br><span class="line">            DrawBox(rootRectTransform, bottomLeft, <span class="keyword">new</span> Vector2(rect.width, rect.height), color);</span><br><span class="line">            <span class="comment">// draw raw rect</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Mathf.Approximately(_rectOffset.horizontal, <span class="number">0f</span>) &amp;&amp; Mathf.Approximately(_rectOffset.vertical, <span class="number">0f</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            rect.width -= _rectOffset.horizontal;</span><br><span class="line">            rect.height -= _rectOffset.vertical;</span><br><span class="line">            bottomLeft.x += _rectOffset.left;</span><br><span class="line">            bottomLeft.y += _rectOffset.bottom;</span><br><span class="line">            DrawBox(rootRectTransform, bottomLeft, <span class="keyword">new</span> Vector2(rect.width, rect.height), color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawBox</span>(<span class="params">RectTransform reference, Vector2 bottomLeftLocalPos, Vector2 size, Color color</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Color cachedColor = Gizmos.color;</span><br><span class="line">            Gizmos.color = color;</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos), reference.TransformPoint(bottomLeftLocalPos + Vector2.up * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x + Vector2.up * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(bottomLeftLocalPos + Vector2.up * size.y), reference.TransformPoint(bottomLeftLocalPos + Vector2.right * size.x + Vector2.up * size.y));</span><br><span class="line">            Gizmos.color = cachedColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateEditorPreviewData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            _editorScreenSize = <span class="keyword">new</span> Vector2(Screen.width, Screen.height);</span><br><span class="line">            _editorCurrentResolution = <span class="keyword">new</span> Vector2(Screen.currentResolution.width, Screen.currentResolution.height);</span><br><span class="line">            _editorScreenFactor = Screen.currentResolution.width / Screen.width;</span><br><span class="line">            _editorScreenDpi = Screen.dpi;</span><br><span class="line">            Canvas rootCanvas = GetRootCanvas();</span><br><span class="line">            <span class="keyword">if</span> (rootCanvas != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                _editorCanvasFactor = rootCanvas.scaleFactor;</span><br><span class="line">                _editorRootCanvasRect = (rootCanvas.transform <span class="keyword">as</span> RectTransform).rect;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">RectTransformEx</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">GetLocalRectPosition</span>(<span class="params"><span class="keyword">this</span> RectTransform target, RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 result = Vector3.zero;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Vector2 targetPivot = target.pivot;</span><br><span class="line"></span><br><span class="line">            Vector2 pivotOffset = Vector2.one * <span class="number">0.5f</span> - targetPivot;</span><br><span class="line">            pivotOffset.x *= targetSize.x;</span><br><span class="line">            pivotOffset.y *= targetSize.y;</span><br><span class="line"></span><br><span class="line">            result += (Vector3)pivotOffset;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (offsetType)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Top:</span><br><span class="line">                    result.y += targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Bottom:</span><br><span class="line">                    result.y -= targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Left:</span><br><span class="line">                    result.x -= targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Right:</span><br><span class="line">                    result.x += targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopLeft:</span><br><span class="line">                    result.y += targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    result.x -= targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopRight:</span><br><span class="line">                    result.y += targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    result.x += targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomLeft:</span><br><span class="line">                    result.y -= targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    result.x -= targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomRight:</span><br><span class="line">                    result.y -= targetSize.y * <span class="number">0.5f</span>;</span><br><span class="line">                    result.x += targetSize.x * <span class="number">0.5f</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">ScreenToWorld</span>(<span class="params">Vector2 screenPoint, Canvas rootCanvas, Camera uiCamera</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (rootCanvas.renderMode)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> RenderMode.ScreenSpaceOverlay:</span><br><span class="line">                    <span class="keyword">return</span> screenPoint;</span><br><span class="line">                <span class="keyword">case</span> RenderMode.ScreenSpaceCamera:</span><br><span class="line">                    RectTransformUtility.ScreenPointToWorldPointInRectangle((RectTransform)rootCanvas.transform, screenPoint, uiCamera, <span class="keyword">out</span> Vector3 worldPoint);</span><br><span class="line">                    <span class="keyword">return</span> worldPoint;</span><br><span class="line">                <span class="keyword">case</span> RenderMode.WorldSpace:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> System.NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><img src="/2023/07/30/20230730-ui-safe-area-rect/20230730-ui-safe-area-rect-pic001.png" class="" title="split"><p>最开始做的时候我很粗心的直接把 Screen.SafeArea 的大小直接给应用到 RectTransform 上了。后来发现这样是不对的，Screen.SafeArea 获取到的是实际的物理尺寸的安全区。<br>后来我是算出物理尺寸和根Canvas尺寸的笔直，再去计算出实际的RectTransform大小。</p><p>基本上可以凑合使用了。还比较遗憾的一点是，我没有能够让其支持只适配四个方向中的任1或者任2方向。比较简单的解决方法就是让不同适配的RectTransform互相套一下。</p><p>UI同学在调整动效以及物体布局的时候，会用Unity中的Device Simulator尝试切换不同的机型来查看不同设备上的UI 预览。这个时候可能需要有一个编辑器的监听器去监听设备变更的事件，然后发起全部UI尺寸刷新的请求。<br>这样会更方便他们做预览。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近有在做手游。各个厂商手机屏幕的尺寸和比例都各不相同。UI适配可以说是一大难题叻。UI美术那边在制作的也有考虑到适配方面的问题，有许多元素是需要我们根据安全区来适配的。&lt;br&gt;但比较坑爹的一些情况是这样的，要求页面A下方有个按钮托盘，按钮托盘打开的时候要有一个大图背景去阻
      
    
    </summary>
    
    
      <category term="UGUI" scheme="http://yoursite.com/categories/UGUI/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity编辑器中以enum的方式绘制int</title>
    <link href="http://yoursite.com/2023/07/23/20230723-int-draw-as-enum/"/>
    <id>http://yoursite.com/2023/07/23/20230723-int-draw-as-enum/</id>
    <published>2023-07-23T09:34:10.000Z</published>
    <updated>2023-07-24T16:07:44.072Z</updated>
    
    <content type="html"><![CDATA[<p>项目里的UI框架有非常方便实用的数据绑定功能。各种UI表现件也可以根据数据集里的某个int改变UI表现。但是比较逆天的是我们经常把enum转int然后再到表现件上去调对应的各种状态。<br>对着magic number调配置确实很让人苦恼。</p><p>思路就是再需要根据int来调偶配置的component上添加一个编辑器里专用的Type对象，然后根据这个对象类型去画int。基于Odin做的，但我觉得这个思路应该还不错。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment">// use a string to temply store the type</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">AttributeUsage(AttributeTargets.Field)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EnumTypeQualifiedName</span>: <span class="title">Attribute</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">DrawerPriority(DrawerPriorityLevel.WrapperPriority)</span>]</span><br><span class="line">    public class EnumTypeQualifiedNameAttributeDrawer : OdinAttributeDrawer&lt;EnumTypeQualifiedName, string&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">EditingState</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;Type&gt; tempQuery;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> wannaSet = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">public</span> Type selectedType = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">DrawPropertyLayout</span>(<span class="params">GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> currentName = <span class="keyword">this</span>.ValueEntry.SmartValue;</span><br><span class="line">            Type enumType = <span class="keyword">string</span>.IsNullOrEmpty(currentName) ? <span class="literal">null</span> : Type.GetType(currentName);</span><br><span class="line">            <span class="keyword">string</span> enumTypeNiceName = enumType == <span class="literal">null</span> ? <span class="string">"invalid!!!"</span> : enumType.GetNiceName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> controlId = GUIUtility.GetControlID(FocusType.Passive);</span><br><span class="line">            EditingState state = GUIUtility.GetStateObject(<span class="keyword">typeof</span>(EditingState), controlId) <span class="keyword">as</span> EditingState;</span><br><span class="line">            <span class="keyword">if</span> (state.wannaSet)</span><br><span class="line">            &#123;</span><br><span class="line">                currentName = state.selectedType.AssemblyQualifiedName;</span><br><span class="line">                state.selectedType = <span class="literal">null</span>;</span><br><span class="line">                state.wannaSet = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">this</span>.ValueEntry.SmartValue = currentName;</span><br><span class="line">            &#125;</span><br><span class="line">            EditorGUILayout.BeginVertical();</span><br><span class="line">            GUIStyle guiStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.label);</span><br><span class="line">            guiStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">            EditorGUILayout.LabelField(<span class="keyword">this</span>.Property.NiceName, guiStyle);</span><br><span class="line"></span><br><span class="line">            guiStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.popup);</span><br><span class="line">            guiStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">            <span class="keyword">if</span> (EditorGUILayout.DropdownButton(<span class="keyword">new</span> GUIContent(<span class="string">$"Preview Enum Type (<span class="subst">&#123;enumTypeNiceName&#125;</span>)"</span>), FocusType.Keyboard, guiStyle))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (EditingState.tempQuery == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    EditingState.tempQuery = GetTargetEnumTypes();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                TypeSelector selector = <span class="keyword">new</span> TypeSelector(EditingState.tempQuery, <span class="literal">false</span>);</span><br><span class="line">                selector.EnableSingleClickToSelect();</span><br><span class="line">                selector.ShowInPopup();</span><br><span class="line">                selector.SelectionConfirmed += selection =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> resultTypeArray = selection.ToArray();</span><br><span class="line">                    <span class="keyword">if</span> (resultTypeArray.Length &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Type selectedType = resultTypeArray.GetValue(<span class="number">0</span>) <span class="keyword">as</span> Type;</span><br><span class="line">                        EditingState state = GUIUtility.GetStateObject(<span class="keyword">typeof</span>(EditingState), controlId) <span class="keyword">as</span> EditingState;</span><br><span class="line">                        state.selectedType = selectedType;</span><br><span class="line">                        state.wannaSet = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            EditorGUILayout.EndVertical();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IEnumerable&lt;Type&gt; <span class="title">GetTargetEnumTypes</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// TODO @Hiko here to get actual enum types</span></span><br><span class="line">            TypeCache.TypeCollection cache = TypeCache.GetTypesDerivedFrom&lt;Enum&gt;();</span><br><span class="line">            <span class="keyword">var</span> query = cache.Where(t =&gt; t.IsEnum &amp;&amp; t.IsPublic);</span><br><span class="line">            <span class="keyword">return</span> query;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// put temply data into a sturct </span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> IntAsEnumEditorPack</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> showIntAsEnumForTaggedField;</span><br><span class="line">        [<span class="meta">EnumTypeQualifiedName</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> enumTypeQualifiedName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IIntAsEnumPackHolder</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        IntAsEnumEditorPack holderData &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// draw enum popup for int</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">AttributeUsage(AttributeTargets.Field)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IntAsEnumAttribute</span> : <span class="title">Attribute</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">DrawerPriority(DrawerPriorityLevel.WrapperPriority)</span>]</span><br><span class="line">    public class IntAsEnumAttributeDrawer : OdinAttributeDrawer&lt;IntAsEnumAttribute, int&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">DrawPropertyLayout</span>(<span class="params">GUIContent label</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> nextValue, prevValue = <span class="keyword">this</span>.ValueEntry.SmartValue;</span><br><span class="line">            InspectorProperty containerProterty = <span class="keyword">this</span>.ValueEntry.Property;</span><br><span class="line">            Type holderType = <span class="keyword">typeof</span>(IIntAsEnumPackHolder);</span><br><span class="line">            Type containerType = containerProterty.ParentType;</span><br><span class="line">            <span class="keyword">bool</span> doContinue = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">while</span> (doContinue)</span><br><span class="line">            &#123;</span><br><span class="line">                Type parentType = containerProterty.ParentType;</span><br><span class="line">                <span class="keyword">if</span> (parentType == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                containerType = parentType;</span><br><span class="line">                containerProterty = containerProterty.Parent;</span><br><span class="line">                <span class="keyword">if</span> (holderType.IsAssignableFrom(containerType))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            GUIStyle guiStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.label);</span><br><span class="line">            guiStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">            <span class="keyword">if</span> (containerType != <span class="literal">null</span> &amp;&amp; holderType.IsAssignableFrom(containerType))</span><br><span class="line">            &#123;</span><br><span class="line">                IIntAsEnumPackHolder holder = containerProterty.ValueEntry.WeakSmartValue <span class="keyword">as</span> IIntAsEnumPackHolder;</span><br><span class="line">                IntAsEnumEditorPack packData = holder.holderData;</span><br><span class="line">                <span class="keyword">if</span> (packData.showIntAsEnumForTaggedField)</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorGUILayout.BeginVertical();</span><br><span class="line">                    EditorGUILayout.LabelField(<span class="keyword">this</span>.Property.NiceName, guiStyle);</span><br><span class="line">                    Type enumType = <span class="keyword">string</span>.IsNullOrEmpty(packData.enumTypeQualifiedName) ? <span class="literal">null</span> : Type.GetType(packData.enumTypeQualifiedName);</span><br><span class="line">                    <span class="keyword">if</span> (enumType != <span class="literal">null</span> &amp;&amp; enumType.IsEnum)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Enum prevEnumValue;</span><br><span class="line">                        <span class="keyword">if</span> (!enumType.IsEnumDefined(prevValue))</span><br><span class="line">                        &#123;</span><br><span class="line">                            prevEnumValue = Enum.GetValues(enumType).GetValue(<span class="number">0</span>) <span class="keyword">as</span> Enum;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            prevEnumValue = (Enum)Enum.ToObject(enumType, prevValue);</span><br><span class="line">                        &#125;</span><br><span class="line">                        guiStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.popup);</span><br><span class="line">                        guiStyle.stretchWidth = <span class="literal">false</span>;</span><br><span class="line">                        guiStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">                        Enum nextEnumValue = EditorGUILayout.EnumPopup(prevEnumValue, guiStyle);</span><br><span class="line">                        nextValue = Convert.ToInt32(nextEnumValue);</span><br><span class="line">                        <span class="keyword">this</span>.ValueEntry.SmartValue = nextValue;</span><br><span class="line">                        guiStyle = <span class="keyword">new</span> GUIStyle(EditorStyles.label);</span><br><span class="line">                        guiStyle.alignment = TextAnchor.MiddleLeft;</span><br><span class="line">                        guiStyle.stretchWidth = <span class="literal">false</span>;</span><br><span class="line">                        EditorGUILayout.LabelField(<span class="string">$"int value: (<span class="subst">&#123;nextValue&#125;</span>)"</span>, guiStyle);</span><br><span class="line">                    &#125;</span><br><span class="line">                    EditorGUILayout.EndVertical();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// can not find the target preview enum type, draw normal int field</span></span><br><span class="line">            EditorGUILayout.BeginHorizontal();</span><br><span class="line">            EditorGUILayout.LabelField(<span class="keyword">this</span>.Property.NiceName);</span><br><span class="line">            nextValue = EditorGUILayout.IntField(prevValue);</span><br><span class="line">            <span class="keyword">this</span>.ValueEntry.SmartValue = nextValue;</span><br><span class="line">            EditorGUILayout.EndHorizontal();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// test case</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TesterA</span> : <span class="title">MonoBehaviour</span>, <span class="title">IIntAsEnumPackHolder</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> IntAsEnumEditorPack intAsEnumEditorPack;</span><br><span class="line">        <span class="keyword">public</span> IntAsEnumEditorPack holderData =&gt; intAsEnumEditorPack;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">Serializable</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">struct</span> TempStructA</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="meta">IntAsEnum</span>]</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">int</span> tempInt;</span><br><span class="line">            <span class="keyword">public</span> Color tempColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> TempStructA[] tempArray;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">IntAsEnum</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> tempIntA;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>效果如下<br><img src="/2023/07/23/20230723-int-draw-as-enum/20230723-int-draw-as-enum-pic001.png" class="" title="split"></p><p>用起来是方便了，但是也引入了一个问题。这个做法会需要序列化一这两个小小的字段到物体上。导致Prefab变肥了，但感觉打包的时候打出来的prefab里应该不会包含这俩字段，应该还凑合啦。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目里的UI框架有非常方便实用的数据绑定功能。各种UI表现件也可以根据数据集里的某个int改变UI表现。但是比较逆天的是我们经常把enum转int然后再到表现件上去调对应的各种状态。&lt;br&gt;对着magic number调配置确实很让人苦恼。&lt;/p&gt;
&lt;p&gt;思路就是再需要根据
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>CSharp字典使用enum的装箱</title>
    <link href="http://yoursite.com/2023/07/09/20230709-dictionary-enum-boxing/"/>
    <id>http://yoursite.com/2023/07/09/20230709-dictionary-enum-boxing/</id>
    <published>2023-07-09T09:43:00.000Z</published>
    <updated>2023-07-09T10:14:09.719Z</updated>
    
    <content type="html"><![CDATA[<p>今天看了下Unity官方2016年发的一个关于移动端小优化的一些分享视频。其中有一个关于把enum作为Dictionary中的key来使用时的boxing优化。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-01.png" class="" title="split"><p>这个用法在我之前的项目里用得还挺多吧。直接上图看IL code。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-02.png" class="" title="split"><p>Dictionary的增删查操作其实都会有用comparer.Equals()来判断是否相等的情况。<br>构建Dictionary时如果不传入指定的comparer，他会自己赋予一个’默认的’。这个默认的显然不适那么的友好。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-05.png" class="" title="split"><p>我们创建一个comparer，然后直接看使用comparer和不使用的两种不同情况下的IL code。</p><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-03.png" class="" title="split"><img src="/2023/07/09/20230709-dictionary-enum-boxing/20230709-dictionary-enum-boxing-04.png" class="" title="split"><p>很明显使用我们自己的comparer可以免去装箱的消耗。</p><p>后来我又拿到Unity里跑了一下看profiler。尝试跑了查询和添加，差距确实有，但是从Profiler中看结果，200万次的操作下，GC是差不多的，时间上使用comparer快了1300多ms。<br>说实在的觉得是我的测试方法有问题。而且我跑在桌面端，这样测试也不严谨。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看了下Unity官方2016年发的一个关于移动端小优化的一些分享视频。其中有一个关于把enum作为Dictionary中的key来使用时的boxing优化。&lt;/p&gt;
&lt;img src=&quot;/2023/07/09/20230709-dictionary-enum-boxin
      
    
    </summary>
    
    
      <category term="CSharp" scheme="http://yoursite.com/categories/CSharp/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="CSharp" scheme="http://yoursite.com/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>Unity动画控制Layout参数</title>
    <link href="http://yoursite.com/2023/06/18/20230618-animating-layout-params/"/>
    <id>http://yoursite.com/2023/06/18/20230618-animating-layout-params/</id>
    <published>2023-06-18T02:29:43.000Z</published>
    <updated>2023-06-18T05:37:20.904Z</updated>
    
    <content type="html"><![CDATA[<p>在实际制作UI的时候，为了完成一些排版设计，我们会经常用到Unity的布局(Layout)组件。甚至有些复杂的排版，我会用嵌套布局来实现。<br>UI美术人经常希望在这些布局上加上一些进场出场动画(甚至包括spacing变动)，但布局组件上的数值是没法在动画中修改的，怎么办呢？</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>在布局中添加一些空物体或是在布局外面套空物体。然后再使用Tween动画来完成UI美术们想要的那些进出场动画。<br>美术人不太喜欢的方法，因为有那么一点点不太方便和Animation直接一起预览，但如果整体进出场动画不依赖UnityAnimation且不是很复杂，这种方法完全够用。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>用通过动画控制脚本上的可序列化的数值，再传递到布局组件上。<br>个人感觉这个方法也还不错，还能支持预览，UI美术更偏向于这一个解决方法。</p><p>但是在动画窗口里里看到的curve是锯齿状的，很奇怪。之后还需要看下如何才能像其他属性一样拉正常的曲线。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ExecuteAlways</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LayoutGroupTempAnimationParam</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> LayoutGroup _target;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _left;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _right;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _top;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _bottom;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="meta-string">"GridLayout must use GridSpacing"</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> _alsoControlSpacing;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _normalSpacing = <span class="number">0</span>;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> Vector2 _gridSpacing = Vector2.zero;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RectOffset m_targetPadding;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDidApplyAnimationProperties</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ApplyPadding();</span><br><span class="line">        <span class="keyword">if</span> (_alsoControlSpacing)</span><br><span class="line">        &#123;</span><br><span class="line">            ApplySpacing();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// need to notify refresh</span></span><br><span class="line">        RectTransform rectTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">        LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ApplyPadding</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_targetPadding = _target.padding;</span><br><span class="line">        <span class="keyword">if</span> (m_targetPadding != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_targetPadding.left = _left;</span><br><span class="line">            m_targetPadding.right = _right;</span><br><span class="line">            m_targetPadding.top = _top;</span><br><span class="line">            m_targetPadding.bottom = _bottom;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ApplySpacing</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target <span class="keyword">is</span> HorizontalOrVerticalLayoutGroup layoutGroup)</span><br><span class="line">        &#123;</span><br><span class="line">            layoutGroup.spacing = _normalSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_target <span class="keyword">is</span> GridLayoutGroup gridLayoutGroup)</span><br><span class="line">        &#123;</span><br><span class="line">            gridLayoutGroup.spacing = _gridSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnValidate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ApplyPadding();</span><br><span class="line">        <span class="keyword">if</span> (_alsoControlSpacing)</span><br><span class="line">        &#123;</span><br><span class="line">            ApplySpacing();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!Application.isPlaying)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// need to notify refresh</span></span><br><span class="line">            RectTransform rectTransform = <span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            LayoutRebuilder.MarkLayoutForRebuild(rectTransform);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Reset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _target = <span class="keyword">this</span>.GetComponent&lt;LayoutGroup&gt;();</span><br><span class="line">        m_targetPadding = _target.padding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/06/18/20230618-animating-layout-params/20230618-animating-layout-params-01.gif" class="" title="split">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在实际制作UI的时候，为了完成一些排版设计，我们会经常用到Unity的布局(Layout)组件。甚至有些复杂的排版，我会用嵌套布局来实现。&lt;br&gt;UI美术人经常希望在这些布局上加上一些进场出场动画(甚至包括spacing变动)，但布局组件上的数值是没法在动画中修改的，怎么办
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Unity编辑器内静音Wwise</title>
    <link href="http://yoursite.com/2023/06/17/20230617-editor-wwise-mute/"/>
    <id>http://yoursite.com/2023/06/17/20230617-editor-wwise-mute/</id>
    <published>2023-06-17T02:15:00.000Z</published>
    <updated>2023-06-18T02:29:17.469Z</updated>
    
    <content type="html"><![CDATA[<p>项目引入Wwise以后，相信蛮多人都和我一样，平时不想听游戏声音就想听歌捶码修BUG的。但是Unity原本的mute按钮没法直接直接对Wwise那边做操作。<br>一开始不知道是搜索引擎的使用姿势不对还是咋的，查了好久都没查出来。导师研究了一下弄了一个版，大家用了感觉都很不错，决定分享出来。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">EditorWwiseManager</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">bool</span> m_isPaused = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="title">EditorWwiseManager</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        EditorApplication.update += OnUpdate;</span><br><span class="line">        EditorApplication.pauseStateChanged += OnPauseStateChanged;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnPauseStateChanged</span>(<span class="params">PauseState state</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (state)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> PauseState.Paused:</span><br><span class="line">                m_isPaused = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PauseState.Unpaused:</span><br><span class="line">                m_isPaused = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (EditorUtility.audioMasterMute &amp;&amp; !m_isPaused)</span><br><span class="line">        &#123;</span><br><span class="line">            AkSoundEngine.Suspend(<span class="literal">true</span>);</span><br><span class="line">            m_isPaused = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!EditorUtility.audioMasterMute &amp;&amp; m_isPaused)</span><br><span class="line">        &#123;</span><br><span class="line">            AkSoundEngine.WakeupFromSuspend();</span><br><span class="line">            m_isPaused = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以通过Editor SceneView上的mute按钮把Wwise静音，超级方便凹。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目引入Wwise以后，相信蛮多人都和我一样，平时不想听游戏声音就想听歌捶码修BUG的。但是Unity原本的mute按钮没法直接直接对Wwise那边做操作。&lt;br&gt;一开始不知道是搜索引擎的使用姿势不对还是咋的，查了好久都没查出来。导师研究了一下弄了一个版，大家用了感觉都很不
      
    
    </summary>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/categories/UnityEditor/"/>
    
    
      <category term="UnityEditor" scheme="http://yoursite.com/tags/UnityEditor/"/>
    
  </entry>
  
  <entry>
    <title>传入Predicate的小事</title>
    <link href="http://yoursite.com/2023/05/01/20230501-list-pass-predicate/"/>
    <id>http://yoursite.com/2023/05/01/20230501-list-pass-predicate/</id>
    <published>2023-05-01T06:16:03.000Z</published>
    <updated>2023-05-01T06:47:56.718Z</updated>
    
    <content type="html"><![CDATA[<p>现在依旧是在项目里负责一些UI业务的编写。前段时间需要需要给游戏中的 popup提示 做一些简单的重构，正好发现了我一直以来都误解的一个小点，决定记下来。</p><p>业务的要求就是做那种会弹出来一会儿再消失的提示，比如道具获取之类的UI。</p><p>我的做法就是用一个list去存着当前的提示，并 tick 检查它们是否结束，然后移除已经结束的相关数据。<br>大概的用法如下。</p><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic001.png" class="" title="split"><p>但其实啊，这个做法在 tick 是非常不好的。同事很快地通过 JetBrainsRider 查看 IL Code ，并告诉我，直接这样传入会每次都 new obj 。有比较大的消耗。<br>所以在这种需要<strong>经常</strong> tick 并且条件<strong>比较固定</strong>的情况下。我们可以创建好 predicate 然后直接重复使用(可以存在成员变量里，这里演示就直接存在本地变量里了)。</p><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic002.png" class="" title="split"><p>最后附上测试代码和结果 测试 count 为 100000</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PredicateTempTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">struct</span> TempPack</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> tempValue;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Random s_random = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TempPack <span class="title">CreateTempPack</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TempPack pack = <span class="keyword">default</span>;</span><br><span class="line">            <span class="keyword">if</span> (s_random == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                s_random = <span class="keyword">new</span> Random(DateTime.Now.Millisecond);</span><br><span class="line">            &#125;</span><br><span class="line">            pack.tempValue = s_random.Next(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">return</span> pack;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;List&lt;TempPack&gt;&gt; s_tempListContainer = <span class="keyword">new</span> List&lt;List&lt;TempPack&gt;&gt;(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTest</span>(<span class="params"><span class="keyword">int</span> tempCount</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        FillTestData(tempCount);</span><br><span class="line">        DoTestLambda();</span><br><span class="line">        DoTestPassMethod();</span><br><span class="line">        DoTestPassExistPredicate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">FillTestData</span>(<span class="params"><span class="keyword">int</span> tempCount</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        s_tempListContainer.Clear();</span><br><span class="line">        s_tempListContainer.Capacity = tempCount;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tempCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = <span class="keyword">new</span> List&lt;TempPack&gt;(tempCount);</span><br><span class="line">            s_tempListContainer.Add(tempList);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; tempCount; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tempList.Add(TempPack.CreateTempPack());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestLambda</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"TestLambda start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find((existPack) =&gt; existPack.tempValue % <span class="number">5</span> == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"TestLambda end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestPassMethod</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"PassMethod start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find(CheckPack);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"PassMethod end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoTestPassExistPredicate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">""</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"PassExistPredicate start"</span>);</span><br><span class="line">        Stopwatch stopWatch = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        stopWatch.Start();</span><br><span class="line">        Predicate&lt;TempPack&gt; predicate = <span class="keyword">new</span> Predicate&lt;TempPack&gt;(CheckPack);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, containerSize = s_tempListContainer.Count; i &lt; containerSize; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;TempPack&gt; tempList = s_tempListContainer[i];</span><br><span class="line">            tempList.Find(predicate);</span><br><span class="line">        &#125;</span><br><span class="line">        stopWatch.Stop();</span><br><span class="line">        Console.WriteLine(<span class="string">$"PassExistPredicate end, result_<span class="subst">&#123;stopWatch.ElapsedMilliseconds&#125;</span>ms"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">CheckPack</span>(<span class="params">TempPack pack</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> pack.tempValue % <span class="number">5</span> == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/05/01/20230501-list-pass-predicate/20230501-pic003.png" class="" title="split">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在依旧是在项目里负责一些UI业务的编写。前段时间需要需要给游戏中的 popup提示 做一些简单的重构，正好发现了我一直以来都误解的一个小点，决定记下来。&lt;/p&gt;
&lt;p&gt;业务的要求就是做那种会弹出来一会儿再消失的提示，比如道具获取之类的UI。&lt;/p&gt;
&lt;p&gt;我的做法就是用一
      
    
    </summary>
    
    
      <category term="CSharp" scheme="http://yoursite.com/categories/CSharp/"/>
    
    
      <category term="CSharp" scheme="http://yoursite.com/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>根据一个UI物体的位置摆放另一个UI物体</title>
    <link href="http://yoursite.com/2023/03/26/20230326-ui-element-positioning/"/>
    <id>http://yoursite.com/2023/03/26/20230326-ui-element-positioning/</id>
    <published>2023-03-26T05:55:12.000Z</published>
    <updated>2023-06-08T15:08:21.508Z</updated>
    
    <content type="html"><![CDATA[<p>最近在遇到了一个需求，要点击某个道具UI之后，显示一个小的关于该道具的信息框。<br>大概是入下图这个样子的。</p><img src="/2023/03/26/20230326-ui-element-positioning/20230326-pic001.png" class="" title="split"><p>还好之前做过，于是乎直接修修补补腾过去。至于为什么要修补，是因为在之前的项目里虽然写了一些和RectTransform相关的一些utils，但都因为懒和菜，没有去维护。有重复的方法还有错误的方法，麻了。<br>这次说是修补，也稍微重写了一些和RectTransform相关的一些utils,也准备带进项目里看看有没有地方可以用的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Temp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> RectPositionType</span><br><span class="line">    &#123;</span><br><span class="line">        Center = <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">        Top = <span class="number">1</span>,</span><br><span class="line">        Bottom = <span class="number">2</span>,</span><br><span class="line">        Left = <span class="number">3</span>,</span><br><span class="line">        Right = <span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">        TopLeft = <span class="number">5</span>,</span><br><span class="line">        TopRight = <span class="number">6</span>,</span><br><span class="line"></span><br><span class="line">        BottomLeft = <span class="number">7</span>,</span><br><span class="line">        BottomRight = <span class="number">8</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UIElementPositionSetter</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Target setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectPositionType _targetRectPosition = RectPositionType.Center;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _targetPivot = Vector2.zero;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _extraOffset = Vector2.zero;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectOffset _adaptionOffset;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _doScreenAdaption;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Other setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> RectTransform _defaultBoundsCanvasTransform;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _adjustHorizontal = <span class="literal">true</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _adjustVertical = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetPosition</span>(<span class="params">RectTransform target</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector3 spawnPos = GetLocalRectPosition(self, _targetRectPosition);</span><br><span class="line">            spawnPos += <span class="keyword">new</span> Vector3(_extraOffset.x, _extraOffset.y, <span class="number">0f</span>);</span><br><span class="line">            spawnPos = self.localToWorldMatrix.MultiplyPoint(spawnPos);</span><br><span class="line">            target.pivot = _targetPivot;</span><br><span class="line">            target.position = spawnPos;</span><br><span class="line">            <span class="keyword">if</span> (_doScreenAdaption)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// HACK @Hiko force rebuild to make sure the size is correct</span></span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">                DoAdaption(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoAdaption</span>(<span class="params">RectTransform targetTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (_adjustHorizontal)</span><br><span class="line">            &#123;</span><br><span class="line">                AdjustHorizontal(targetTransform, _defaultBoundsCanvasTransform);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (_adjustVertical)</span><br><span class="line">            &#123;</span><br><span class="line">                AdjustVertical(targetTransform, _defaultBoundsCanvasTransform);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AdjustHorizontal</span>(<span class="params">RectTransform target, RectTransform outterBoundRectTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Matrix4x4 targetLocalToWorld = target.localToWorldMatrix;</span><br><span class="line">            Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line">            Vector2 topLeftPos = GetLocalRectPosition(target, RectPositionType.TopLeft);</span><br><span class="line"></span><br><span class="line">            Vector3 checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y * <span class="number">0.5f</span> + Vector2.left * _adaptionOffset.left);</span><br><span class="line">            Vector2 leftCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 leftCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Left);</span><br><span class="line">            <span class="keyword">bool</span> leftOut = leftCheckLocalPoint.x &lt; leftCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">            checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y * <span class="number">0.5f</span> + Vector2.right * targetSize.x + Vector2.right * _adaptionOffset.right);</span><br><span class="line">            Vector2 rightCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 rightCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Right);</span><br><span class="line">            <span class="keyword">bool</span> rightOut = rightCheckLocalPoint.x &gt; rightCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (leftOut &amp;&amp; rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// outter bound is too small</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (leftOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> xDelta = leftCheckLocalPoint.x - leftCheckBoundPoint.x;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.x -= xDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> xDelta = rightCheckLocalPoint.x - rightCheckBoundPoint.x;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.x -= xDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (leftOut || rightOut)</span><br><span class="line">            &#123;</span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AdjustVertical</span>(<span class="params">RectTransform target, RectTransform outterBoundRectTransform</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 targetSize = target.rect.size;</span><br><span class="line">            Matrix4x4 targetLocalToWorld = target.localToWorldMatrix;</span><br><span class="line">            Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line">            Vector2 topLeftPos = GetLocalRectPosition(target, RectPositionType.TopLeft);</span><br><span class="line"></span><br><span class="line">            Vector3 checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.right * targetSize.x * <span class="number">0.5f</span> + Vector2.up * _adaptionOffset.top);</span><br><span class="line">            Vector2 topCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 topCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Top);</span><br><span class="line">            <span class="keyword">bool</span> topOut = topCheckLocalPoint.y &gt; topCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">            checkWorldPoint = targetLocalToWorld.MultiplyPoint(topLeftPos + Vector2.down * targetSize.y + Vector2.right * targetSize.x * <span class="number">0.5f</span> + Vector2.down * _adaptionOffset.bottom);</span><br><span class="line">            Vector2 bottomCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">            Vector2 bottomCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Bottom);</span><br><span class="line">            <span class="keyword">bool</span> bottomOut = bottomCheckLocalPoint.y &lt; bottomCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (topOut &amp;&amp; bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// outter bound is too small</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (topOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> yDelta = topCheckLocalPoint.y - topCheckBoundPoint.y;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.y -= yDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> yDelta = bottomCheckLocalPoint.y - bottomCheckBoundPoint.y;</span><br><span class="line">                Vector3 tempPos = target.localPosition;</span><br><span class="line">                tempPos.y -= yDelta;</span><br><span class="line">                target.localPosition = tempPos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (topOut || bottomOut)</span><br><span class="line">            &#123;</span><br><span class="line">                LayoutRebuilder.ForceRebuildLayoutImmediate(target);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> position util</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">RectTransform target, RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> GetLocalRectPosition(target, offsetType, Vector2.zero);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">RectTransform target, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> GetLocalRectPosition(target.rect.size, target.pivot, offsetType, offset);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector2 <span class="title">GetLocalRectPosition</span>(<span class="params">Vector2 targetSize, Vector2 targetPivot, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector2 bottomLeft = Vector2.zero;</span><br><span class="line">            bottomLeft.x -= targetPivot.x * targetSize.x;</span><br><span class="line">            bottomLeft.y -= targetPivot.y * targetSize.y;</span><br><span class="line">            Vector2 result = bottomLeft;</span><br><span class="line">            <span class="keyword">switch</span> (offsetType)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Top:</span><br><span class="line">                    result += Vector2.right * <span class="number">0.5f</span> * targetSize.x + Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Bottom:</span><br><span class="line">                    result += Vector2.right * <span class="number">0.5f</span> * targetSize.x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Left:</span><br><span class="line">                    result += Vector2.up * <span class="number">0.5f</span> * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.Right:</span><br><span class="line">                    result += Vector2.right * targetSize.x + Vector2.up * <span class="number">0.5f</span> * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopLeft:</span><br><span class="line">                    result += Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.TopRight:</span><br><span class="line">                    result += Vector2.right * targetSize.x + Vector2.up * targetSize.y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomRight:</span><br><span class="line">                    result += Vector2.right * targetSize.x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> RectPositionType.BottomLeft:</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result + offset;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">RectPositionToWorld</span>(<span class="params">RectTransform rect, RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> RectPositionToWorld(rect, offsetType, Vector2.zero);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Vector3 <span class="title">RectPositionToWorld</span>(<span class="params">RectTransform rect, RectPositionType offsetType, Vector2 offset</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> localPosition = GetLocalRectPosition(rect, offsetType, offset);</span><br><span class="line">            <span class="keyword">return</span> rect.TransformPoint(localPosition);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Vector2 <span class="title">GetTargetRectPositionInLocalReference</span>(<span class="params">RectPositionType offsetType</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector2 targetPivotPos = GetLocalRectPosition(self, _targetRectPosition, _extraOffset);</span><br><span class="line">            Vector2 virtualCenterPos = targetPivotPos;</span><br><span class="line">            virtualCenterPos += GetLocalRectPosition(_targetSize, _targetPivot, offsetType, Vector2.zero);</span><br><span class="line">            <span class="keyword">return</span> virtualCenterPos;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> UNITY_EDITOR</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Preview setting"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Vector2 _targetSize = Vector2.one * <span class="number">128f</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> Color _previewColor = Color.white;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _doDrawAdaptionOffsetRect = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">System.Serializable</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">struct</span> TempCheckResult</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewLeftOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewRightOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewTopOut;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">bool</span> previewBottomOut;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">private</span> TempCheckResult _checkResult;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewLeftOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewRightOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewTopOut;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _previewBottomOut;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmosSelected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// draw A box to show the position of target</span></span><br><span class="line">            RectTransform self = transform <span class="keyword">as</span> RectTransform;</span><br><span class="line">            Vector2 localSpawnPos = GetLocalRectPosition(self, _targetRectPosition);</span><br><span class="line">            localSpawnPos += _extraOffset;</span><br><span class="line"></span><br><span class="line">            Vector2 pivot = _targetPivot;</span><br><span class="line">            Vector2 topLeftPos = localSpawnPos;</span><br><span class="line">            topLeftPos.x -= pivot.x * _targetSize.x;</span><br><span class="line">            topLeftPos.y -= (pivot.y - <span class="number">1f</span>) * _targetSize.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_doScreenAdaption)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// do adaption</span></span><br><span class="line">                <span class="keyword">if</span> (_defaultBoundsCanvasTransform != <span class="literal">null</span>) <span class="comment">// if there is no bound, we can take the screen as the bound</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Matrix4x4 localToWorld = self.localToWorldMatrix;</span><br><span class="line">                    RectTransform outterBoundRectTransform = _defaultBoundsCanvasTransform;</span><br><span class="line">                    Matrix4x4 boundRectWorldToLocal = outterBoundRectTransform.worldToLocalMatrix;</span><br><span class="line"></span><br><span class="line">                    Vector3 checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y * <span class="number">0.5f</span> + Vector2.left * _adaptionOffset.left);</span><br><span class="line">                    Vector2 leftCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 leftCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Left);</span><br><span class="line">                    _previewLeftOut = leftCheckLocalPoint.x &lt; leftCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y * <span class="number">0.5f</span> + Vector2.right * _targetSize.x + Vector2.right * _adaptionOffset.right);</span><br><span class="line">                    Vector2 rightCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 rightCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Right);</span><br><span class="line">                    _previewRightOut = rightCheckLocalPoint.x &gt; rightCheckBoundPoint.x;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.right * _targetSize.x * <span class="number">0.5f</span> + Vector2.up * _adaptionOffset.top);</span><br><span class="line">                    Vector2 topCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 topCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Top);</span><br><span class="line">                    _previewTopOut = topCheckLocalPoint.y &gt; topCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">                    checkWorldPoint = localToWorld.MultiplyPoint(topLeftPos + Vector2.down * _targetSize.y + Vector2.right * _targetSize.x * <span class="number">0.5f</span> + Vector2.down * _adaptionOffset.bottom);</span><br><span class="line">                    Vector2 bottomCheckLocalPoint = boundRectWorldToLocal.MultiplyPoint(checkWorldPoint);</span><br><span class="line">                    Vector2 bottomCheckBoundPoint = GetLocalRectPosition(outterBoundRectTransform, RectPositionType.Bottom);</span><br><span class="line">                    _previewBottomOut = bottomCheckLocalPoint.y &lt; bottomCheckBoundPoint.y;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (_adjustHorizontal)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (_previewLeftOut &amp;&amp; _previewRightOut)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// bound too small</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (_previewLeftOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> xDelta = leftCheckLocalPoint.x - leftCheckBoundPoint.x;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.x -= xDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (_previewRightOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> xDelta = rightCheckLocalPoint.x - rightCheckBoundPoint.x;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.x -= xDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (_adjustVertical)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (_previewTopOut &amp;&amp; _previewBottomOut)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// bound too small</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (_previewTopOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> yDelta = topCheckLocalPoint.y - topCheckBoundPoint.y;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.y -= yDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (_previewBottomOut)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">float</span> yDelta = bottomCheckLocalPoint.y - bottomCheckBoundPoint.y;</span><br><span class="line">                                Vector3 tempPos = topLeftPos;</span><br><span class="line">                                tempPos.y -= yDelta;</span><br><span class="line">                                topLeftPos = tempPos;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            _checkResult.previewLeftOut = _previewLeftOut;</span><br><span class="line">            _checkResult.previewRightOut = _previewRightOut;</span><br><span class="line">            _checkResult.previewTopOut = _previewTopOut;</span><br><span class="line">            _checkResult.previewBottomOut = _previewBottomOut;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_doDrawAdaptionOffsetRect &amp;&amp; _defaultBoundsCanvasTransform != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Vector2 innerBoundLeftPos = GetLocalRectPosition(_defaultBoundsCanvasTransform, RectPositionType.TopLeft, <span class="keyword">new</span> Vector2(_adaptionOffset.left, -_adaptionOffset.top));</span><br><span class="line">                Vector2 size = _defaultBoundsCanvasTransform.rect.size;</span><br><span class="line">                size.x -= _adaptionOffset.horizontal;</span><br><span class="line">                size.y -= _adaptionOffset.vertical;</span><br><span class="line">                DrawBox(_defaultBoundsCanvasTransform, innerBoundLeftPos, size, Color.blue);</span><br><span class="line">            &#125;</span><br><span class="line">            DrawBox(self, topLeftPos, _targetSize, _previewColor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawBox</span>(<span class="params">RectTransform reference, Vector2 topLeftPos, Vector2 size, Color color</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Color cachedColor = Gizmos.color;</span><br><span class="line">            Gizmos.color = color;</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos), reference.TransformPoint(topLeftPos + Vector2.right * size.x));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos), reference.TransformPoint(topLeftPos + Vector2.down * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos + Vector2.right * size.x), reference.TransformPoint(topLeftPos + Vector2.right * size.x + Vector2.down * size.y));</span><br><span class="line">            Gizmos.DrawLine(reference.TransformPoint(topLeftPos + Vector2.down * size.y), reference.TransformPoint(topLeftPos + Vector2.right * size.x + Vector2.down * size.y));</span><br><span class="line">            Gizmos.color = cachedColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2023/03/26/20230326-ui-element-positioning/20230326-pic002.gif" class="" title="split"><p>还是像以前一样，先在debug draw里把功能完成再给移到实际的物体上。<br>但这次还是很可惜没有把功能很好抽出成比较单独的数学运算，而且感觉要用到的参数好多也没法拆分，最后留了一个多参的入口。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在遇到了一个需求，要点击某个道具UI之后，显示一个小的关于该道具的信息框。&lt;br&gt;大概是入下图这个样子的。&lt;/p&gt;
&lt;img src=&quot;/2023/03/26/20230326-ui-element-positioning/20230326-pic001.png&quot; cl
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>Rapid UI Creation Note</title>
    <link href="http://yoursite.com/2022/10/05/20221005-rapid-UGUI-creation-note/"/>
    <id>http://yoursite.com/2022/10/05/20221005-rapid-UGUI-creation-note/</id>
    <published>2022-10-05T02:55:21.000Z</published>
    <updated>2023-03-26T06:33:58.713Z</updated>
    
    <content type="html"><![CDATA[<p>When I searching some articles about MVC and MVVM, I see this talk.<br>Basiclly they does same stuff as my current project, but we still have some differences on our implementation.<br>I’d like to share it and take some notes :D</p><p>Here is the talk abour UGUI implementation.<br><a href="https://www.youtube.com/watch?v=uDQU_dlO-ZM" target="_blank" rel="noopener">video</a>.<br><a href="https://www.gdcvault.com/play/1024453/Data-Binding-Architectures-for-Rapid" target="_blank" rel="noopener">ppt</a>.<br><a href="https://stackoverflow.com/questions/667781/what-is-the-difference-between-mvc-and-mvvm" target="_blank" rel="noopener">temp</a>.</p><h1 id="Main-note"><a href="#Main-note" class="headerlink" title="Main note"></a>Main note</h1><h2 id="Architecture-in-lt-Lost-Survivor-gt"><a href="#Architecture-in-lt-Lost-Survivor-gt" class="headerlink" title="Architecture in &lt; Lost Survivor &gt;"></a>Architecture in &lt; Lost Survivor &gt;</h2><ul><li>Artist works directly in Unity (Creating prefabs, setup aniamtions; well that’s what I my current project does, so I guess they did the same)</li><li>Dev works on GameLogic and UILogic</li><li>Dev/Art work decoupled</li><li>Dev/Art work parallel (This happens a lot in iteration)</li></ul><h2 id="The-Pattern-used-in-lt-Lost-Survivor-gt"><a href="#The-Pattern-used-in-lt-Lost-Survivor-gt" class="headerlink" title="The Pattern used in &lt; Lost Survivor &gt;"></a>The Pattern used in &lt; Lost Survivor &gt;</h2><h3 id="MVCVM-they-choose-this"><a href="#MVCVM-they-choose-this" class="headerlink" title="MVCVM (they choose this)"></a>MVCVM (they choose this)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                               </span><br><span class="line">                                                        +---------------------------------------+                              </span><br><span class="line">                                                        |                data binding           |                              </span><br><span class="line">                                                        |                    &lt;-&gt;                |                              </span><br><span class="line">                                                        |                                       |                              </span><br><span class="line">                                                        |                                       |                              </span><br><span class="line">+------------------------------+                        |                                       |                              </span><br><span class="line">|                              | +----------------------|-------+    +------------------------------+ +-----------------------+</span><br><span class="line">----------Controller------------ |         Model                |    |        View Model            | |    View (UGUI View)   |</span><br><span class="line">|                              | --------------------------------    -------------------------------- -------------------------</span><br><span class="line">| void GainXP();               | |      int XP;                 |    |                              | | Text XP;              |</span><br><span class="line">| void LevelUp();              | |      int Level;              |    |                              | | Text Attribute;       |</span><br><span class="line">|                              | |                              |    |                              | | Button ReAllocate;    |</span><br><span class="line">|                              | +--------------&#x2F;---------------+    +---------------\--------------+ | int WeaponATK;        |</span><br><span class="line">+---------------\--------------+              &#x2F;-                                      -\              |                       |</span><br><span class="line">                 \                          &#x2F;-                                          -\            +-----------&#x2F;-----------+</span><br><span class="line">                  -\                      &#x2F;-                                              \                      |             </span><br><span class="line">                    \                   &#x2F;-                                                 -\                    &#x2F;             </span><br><span class="line">            +---------------------------------------------------------------------------------------------------|-------+      </span><br><span class="line">            |                                                                                                           |      </span><br><span class="line">            |                                               Message Bus                                                 |      </span><br><span class="line">            +-----------------------------------------------------|-----------------------------------------------------+      </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                                  |                                                            </span><br><span class="line">                                                    +-------------|------------+                                               </span><br><span class="line">                                                    |                          |                                               </span><br><span class="line">                                                    |      server backend      |                                               </span><br><span class="line">                                                    |                          |                                               </span><br><span class="line">                                                    +--------------------------+</span><br></pre></td></tr></table></figure><p>This is the pattern they use for their project.<br>The one thing that I cant understand is that the View will receive events from MessageBus. IDK why they did like this. For me, I prefer to let view only receive direct events from VM, bind to many stuff to MessageBus will make it slow.</p><h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                                                                                                   </span><br><span class="line">                                   +------------------------------+                                    </span><br><span class="line">                                   |          Controller          |                                    </span><br><span class="line">+---------------------------------------------------------------------------------------------+        </span><br><span class="line">|         user action -&gt;           |  void GainXp();              |       update -&gt;           |        </span><br><span class="line">|                                  |  Void LevelUp();             |                           |        </span><br><span class="line">|                                  |  int GetAttribute(type);     |                           |        </span><br><span class="line">|                                  |                              |                           |        </span><br><span class="line">|                                  |                              |                           |        </span><br><span class="line">|                                  +-------|--------------|-------+                           |        </span><br><span class="line">|                                          |              |                                   |        </span><br><span class="line">|------------------------------+           |              |            +----------------------|-------+</span><br><span class="line">|    Character View            |           |              |            |         Model                |</span><br><span class="line">--------------------------------           |              |            --------------------------------</span><br><span class="line">| Text XP;                     |           |              |            | int AmountXp;                |</span><br><span class="line">| Text Attribute;              ------------+              |            | int AttributeTypeA;          |</span><br><span class="line">| Button ReAllocate;           | &lt;- update                |            | int AttributeTypeB;          |</span><br><span class="line">|                              |                          +-------------                              |</span><br><span class="line">|                              |                     &lt;- notify change? |                              |</span><br><span class="line">+------------------------------+                                       +------------------------------+</span><br></pre></td></tr></table></figure><p>I’m sure this pattern is kind of useful. I use this a lot when I did the first version of some UI pages. But later the Controller become a giant class.<br>And also I think the View and Controller in this pattern is not very reusable.</p><h3 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">                                                                                                                            </span><br><span class="line">                                                                                            +------------------------------+</span><br><span class="line">                                                                                            |         Model Character      |</span><br><span class="line">                                                                            +-----------------------------------------------</span><br><span class="line">                                                                            |               | int AmountXp;                |</span><br><span class="line">                                                                            |               | int AttributeTypeA;          |</span><br><span class="line">                                                                            |               | int AttributeTypeB;          |</span><br><span class="line">                                                                            |               |                              |</span><br><span class="line">                                                                            |               |                              |</span><br><span class="line">                                                                            |               +------------------------------+</span><br><span class="line">+------------------------------+                     +----------------------|-------+                                       </span><br><span class="line">|      Character View          |   data binding &lt;-&gt;  |        View Model            |                                       </span><br><span class="line">--------------------------------   notifications &lt;-  --------------------------------                                       </span><br><span class="line">| Text XP;                     |   command -&gt;        |int AmountXP;                 |                                       </span><br><span class="line">| Text Attribute;              ----------------------+int WeaponATK;                |                                       </span><br><span class="line">| Button ReAllocate;           |                     |int WeaponLevel;              |       +------------------------------+</span><br><span class="line">| int WeaponATK;               |                     |                              |       |         Model Weapon         |</span><br><span class="line">|                              |                     |                              |       --------------------------------</span><br><span class="line">+------------------------------+                     +----------------------|-------+       | int ATK;                     |</span><br><span class="line">                                                                            |               | int Level;                   |</span><br><span class="line">                                                                            +----------------                              |</span><br><span class="line">                                                                                            +------------------------------+</span><br></pre></td></tr></table></figure><ul><li>ViewModel serves the View</li><li>One ViewModel per View</li><li>Based on Data Binding</li></ul><p>After a few iterations, I find this pattern is also a good solutions. And I feel that we can even use CompositePattern in ViewModel to create big ViewModel for some big views(resuable).</p><p>In my current project, for the UI-View, we create some basic view that can receive similar types of data. And the good thing from this pattern is that the VM can send notificaiton to View to update, then I dun need to have lots of update method from Controller to update different data (cuz some data update need aniamtion, I cant just update all).</p><h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><p>Previously it says that separating UIPrefabs creation and UILogic code may solve “Not my problem attitude”. But actually not.<br>In production state, everyone is busy, and we are iterating View-Scripts and VM-Scripts together. Sometimes it is diffcult to tell that is code issues or setup issues. Unless we have solid View-Scripts.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>This talk has lots of similiar content as the DivisionUI talk. And I also realise that the game development has lots of unknow shit. It’s very difficult to have some resuable components that always works. Even the thougts are similar, the implementation can be different. A solution can be that having some solid, simple, basic and resuable compoents.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When I searching some articles about MVC and MVVM, I see this talk.&lt;br&gt;Basiclly they does same stuff as my current project, but we still 
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="UGUI" scheme="http://yoursite.com/tags/UGUI/"/>
    
  </entry>
  
</feed>
